//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34011
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.0.30319.33440.
// 


/// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
[global::System.Serializable()]
[global::System.ComponentModel.DesignerCategoryAttribute("code")]
[global::System.ComponentModel.ToolboxItem(true)]
[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
[global::System.Xml.Serialization.XmlRootAttribute("NewDataSet")]
[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
public partial class NewDataSet : global::System.Data.DataSet {
    
    private TPA_ExtensionsDataTable tableTPA_Extensions;
    
    private RoadCrossDataTable tableRoadCross;
    
    private TPA_ExtensionDataTable tableTPA_Extension;
    
    private ThemeCategoryDataTable tableThemeCategory;
    
    private ThemeCategoryTypeDataTable tableThemeCategoryType;
    
    private CityImportantMessageDataTable tableCityImportantMessage;
    
    private CityImportantMessageTypeDataTable tableCityImportantMessageType;
    
    private DescriptionDataTable tableDescription;
    
    private OTA_HotelDescriptiveInfoRSDataTable tableOTA_HotelDescriptiveInfoRS;
    
    private HotelDescriptiveContentsDataTable tableHotelDescriptiveContents;
    
    private HotelDescriptiveContentDataTable tableHotelDescriptiveContent;
    
    private HotelInfoDataTable tableHotelInfo;
    
    private CategoryCodesDataTable tableCategoryCodes;
    
    private SegmentCategoryDataTable tableSegmentCategory;
    
    private PositionDataTable tablePosition;
    
    private AddressDataTable tableAddress;
    
    private ZoneDataTable tableZone;
    
    private ServicesDataTable tableServices;
    
    private ServiceDataTable tableService;
    
    private FacilityInfoDataTable tableFacilityInfo;
    
    private GuestRoomsDataTable tableGuestRooms;
    
    private GuestRoomDataTable tableGuestRoom;
    
    private TypeRoomDataTable tableTypeRoom;
    
    private AmenitiesDataTable tableAmenities;
    
    private AmenityDataTable tableAmenity;
    
    private FeaturesDataTable tableFeatures;
    
    private FeatureDataTable tableFeature;
    
    private PoliciesDataTable tablePolicies;
    
    private PolicyDataTable tablePolicy;
    
    private PolicyInfoCodesDataTable tablePolicyInfoCodes;
    
    private PolicyInfoCodeDataTable tablePolicyInfoCode;
    
    private PolicyInfoDataTable tablePolicyInfo;
    
    private AreaInfoDataTable tableAreaInfo;
    
    private RefPointsDataTable tableRefPoints;
    
    private RefPointDataTable tableRefPoint;
    
    private AffiliationInfoDataTable tableAffiliationInfo;
    
    private AwardsDataTable tableAwards;
    
    private AwardDataTable tableAward;
    
    private MultimediaDescriptionsDataTable tableMultimediaDescriptions;
    
    private MultimediaDescriptionDataTable tableMultimediaDescription;
    
    private TextItemsDataTable tableTextItems;
    
    private TextItemDataTable tableTextItem;
    
    private ImageItemsDataTable tableImageItems;
    
    private ImageItemDataTable tableImageItem;
    
    private ImageFormatDataTable tableImageFormat;
    
    private global::System.Data.DataRelation relationAddress_TPA_Extensions;
    
    private global::System.Data.DataRelation relationGuestRoom_TPA_Extensions;
    
    private global::System.Data.DataRelation relationImageItem_TPA_Extensions;
    
    private global::System.Data.DataRelation relationHotelDescriptiveContent_TPA_Extensions;
    
    private global::System.Data.DataRelation relationTPA_Extensions_RoadCross;
    
    private global::System.Data.DataRelation relationTPA_Extensions_TPA_Extension;
    
    private global::System.Data.DataRelation relationTPA_Extensions_ThemeCategory;
    
    private global::System.Data.DataRelation relationThemeCategory_ThemeCategoryType;
    
    private global::System.Data.DataRelation relationTPA_Extensions_CityImportantMessage;
    
    private global::System.Data.DataRelation relationCityImportantMessage_CityImportantMessageType;
    
    private global::System.Data.DataRelation relationPolicyInfoCode_Description;
    
    private global::System.Data.DataRelation relationImageItem_Description;
    
    private global::System.Data.DataRelation relationOTA_HotelDescriptiveInfoRS_HotelDescriptiveContents;
    
    private global::System.Data.DataRelation relationHotelDescriptiveContents_HotelDescriptiveContent;
    
    private global::System.Data.DataRelation relationHotelDescriptiveContent_HotelInfo;
    
    private global::System.Data.DataRelation relationHotelInfo_CategoryCodes;
    
    private global::System.Data.DataRelation relationCategoryCodes_SegmentCategory;
    
    private global::System.Data.DataRelation relationHotelInfo_Position;
    
    private global::System.Data.DataRelation relationHotelInfo_Address;
    
    private global::System.Data.DataRelation relationAddress_Zone;
    
    private global::System.Data.DataRelation relationHotelInfo_Services;
    
    private global::System.Data.DataRelation relationServices_Service;
    
    private global::System.Data.DataRelation relationHotelDescriptiveContent_FacilityInfo;
    
    private global::System.Data.DataRelation relationFacilityInfo_GuestRooms;
    
    private global::System.Data.DataRelation relationGuestRooms_GuestRoom;
    
    private global::System.Data.DataRelation relationGuestRoom_TypeRoom;
    
    private global::System.Data.DataRelation relationGuestRoom_Amenities;
    
    private global::System.Data.DataRelation relationAmenities_Amenity;
    
    private global::System.Data.DataRelation relationGuestRoom_Features;
    
    private global::System.Data.DataRelation relationFeatures_Feature;
    
    private global::System.Data.DataRelation relationHotelDescriptiveContent_Policies;
    
    private global::System.Data.DataRelation relationPolicies_Policy;
    
    private global::System.Data.DataRelation relationPolicy_PolicyInfoCodes;
    
    private global::System.Data.DataRelation relationPolicyInfoCodes_PolicyInfoCode;
    
    private global::System.Data.DataRelation relationPolicy_PolicyInfo;
    
    private global::System.Data.DataRelation relationHotelDescriptiveContent_AreaInfo;
    
    private global::System.Data.DataRelation relationAreaInfo_RefPoints;
    
    private global::System.Data.DataRelation relationRefPoints_RefPoint;
    
    private global::System.Data.DataRelation relationHotelDescriptiveContent_AffiliationInfo;
    
    private global::System.Data.DataRelation relationAffiliationInfo_Awards;
    
    private global::System.Data.DataRelation relationAwards_Award;
    
    private global::System.Data.DataRelation relationHotelDescriptiveContent_MultimediaDescriptions;
    
    private global::System.Data.DataRelation relationMultimediaDescriptions_MultimediaDescription;
    
    private global::System.Data.DataRelation relationMultimediaDescription_TextItems;
    
    private global::System.Data.DataRelation relationTextItems_TextItem;
    
    private global::System.Data.DataRelation relationMultimediaDescription_ImageItems;
    
    private global::System.Data.DataRelation relationImageItems_ImageItem;
    
    private global::System.Data.DataRelation relationImageItem_ImageFormat;
    
    private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public NewDataSet() {
        this.BeginInit();
        this.InitClass();
        global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
        base.Tables.CollectionChanged += schemaChangedHandler;
        base.Relations.CollectionChanged += schemaChangedHandler;
        this.EndInit();
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected NewDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
            base(info, context, false) {
        if ((this.IsBinarySerialized(info, context) == true)) {
            this.InitVars(false);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler1;
            this.Relations.CollectionChanged += schemaChangedHandler1;
            return;
        }
        string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
        if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
            global::System.Data.DataSet ds = new global::System.Data.DataSet();
            ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            if ((ds.Tables["TPA_Extensions"] != null)) {
                base.Tables.Add(new TPA_ExtensionsDataTable(ds.Tables["TPA_Extensions"]));
            }
            if ((ds.Tables["RoadCross"] != null)) {
                base.Tables.Add(new RoadCrossDataTable(ds.Tables["RoadCross"]));
            }
            if ((ds.Tables["TPA_Extension"] != null)) {
                base.Tables.Add(new TPA_ExtensionDataTable(ds.Tables["TPA_Extension"]));
            }
            if ((ds.Tables["ThemeCategory"] != null)) {
                base.Tables.Add(new ThemeCategoryDataTable(ds.Tables["ThemeCategory"]));
            }
            if ((ds.Tables["ThemeCategoryType"] != null)) {
                base.Tables.Add(new ThemeCategoryTypeDataTable(ds.Tables["ThemeCategoryType"]));
            }
            if ((ds.Tables["CityImportantMessage"] != null)) {
                base.Tables.Add(new CityImportantMessageDataTable(ds.Tables["CityImportantMessage"]));
            }
            if ((ds.Tables["CityImportantMessageType"] != null)) {
                base.Tables.Add(new CityImportantMessageTypeDataTable(ds.Tables["CityImportantMessageType"]));
            }
            if ((ds.Tables["Description"] != null)) {
                base.Tables.Add(new DescriptionDataTable(ds.Tables["Description"]));
            }
            if ((ds.Tables["OTA_HotelDescriptiveInfoRS"] != null)) {
                base.Tables.Add(new OTA_HotelDescriptiveInfoRSDataTable(ds.Tables["OTA_HotelDescriptiveInfoRS"]));
            }
            if ((ds.Tables["HotelDescriptiveContents"] != null)) {
                base.Tables.Add(new HotelDescriptiveContentsDataTable(ds.Tables["HotelDescriptiveContents"]));
            }
            if ((ds.Tables["HotelDescriptiveContent"] != null)) {
                base.Tables.Add(new HotelDescriptiveContentDataTable(ds.Tables["HotelDescriptiveContent"]));
            }
            if ((ds.Tables["HotelInfo"] != null)) {
                base.Tables.Add(new HotelInfoDataTable(ds.Tables["HotelInfo"]));
            }
            if ((ds.Tables["CategoryCodes"] != null)) {
                base.Tables.Add(new CategoryCodesDataTable(ds.Tables["CategoryCodes"]));
            }
            if ((ds.Tables["SegmentCategory"] != null)) {
                base.Tables.Add(new SegmentCategoryDataTable(ds.Tables["SegmentCategory"]));
            }
            if ((ds.Tables["Position"] != null)) {
                base.Tables.Add(new PositionDataTable(ds.Tables["Position"]));
            }
            if ((ds.Tables["Address"] != null)) {
                base.Tables.Add(new AddressDataTable(ds.Tables["Address"]));
            }
            if ((ds.Tables["Zone"] != null)) {
                base.Tables.Add(new ZoneDataTable(ds.Tables["Zone"]));
            }
            if ((ds.Tables["Services"] != null)) {
                base.Tables.Add(new ServicesDataTable(ds.Tables["Services"]));
            }
            if ((ds.Tables["Service"] != null)) {
                base.Tables.Add(new ServiceDataTable(ds.Tables["Service"]));
            }
            if ((ds.Tables["FacilityInfo"] != null)) {
                base.Tables.Add(new FacilityInfoDataTable(ds.Tables["FacilityInfo"]));
            }
            if ((ds.Tables["GuestRooms"] != null)) {
                base.Tables.Add(new GuestRoomsDataTable(ds.Tables["GuestRooms"]));
            }
            if ((ds.Tables["GuestRoom"] != null)) {
                base.Tables.Add(new GuestRoomDataTable(ds.Tables["GuestRoom"]));
            }
            if ((ds.Tables["TypeRoom"] != null)) {
                base.Tables.Add(new TypeRoomDataTable(ds.Tables["TypeRoom"]));
            }
            if ((ds.Tables["Amenities"] != null)) {
                base.Tables.Add(new AmenitiesDataTable(ds.Tables["Amenities"]));
            }
            if ((ds.Tables["Amenity"] != null)) {
                base.Tables.Add(new AmenityDataTable(ds.Tables["Amenity"]));
            }
            if ((ds.Tables["Features"] != null)) {
                base.Tables.Add(new FeaturesDataTable(ds.Tables["Features"]));
            }
            if ((ds.Tables["Feature"] != null)) {
                base.Tables.Add(new FeatureDataTable(ds.Tables["Feature"]));
            }
            if ((ds.Tables["Policies"] != null)) {
                base.Tables.Add(new PoliciesDataTable(ds.Tables["Policies"]));
            }
            if ((ds.Tables["Policy"] != null)) {
                base.Tables.Add(new PolicyDataTable(ds.Tables["Policy"]));
            }
            if ((ds.Tables["PolicyInfoCodes"] != null)) {
                base.Tables.Add(new PolicyInfoCodesDataTable(ds.Tables["PolicyInfoCodes"]));
            }
            if ((ds.Tables["PolicyInfoCode"] != null)) {
                base.Tables.Add(new PolicyInfoCodeDataTable(ds.Tables["PolicyInfoCode"]));
            }
            if ((ds.Tables["PolicyInfo"] != null)) {
                base.Tables.Add(new PolicyInfoDataTable(ds.Tables["PolicyInfo"]));
            }
            if ((ds.Tables["AreaInfo"] != null)) {
                base.Tables.Add(new AreaInfoDataTable(ds.Tables["AreaInfo"]));
            }
            if ((ds.Tables["RefPoints"] != null)) {
                base.Tables.Add(new RefPointsDataTable(ds.Tables["RefPoints"]));
            }
            if ((ds.Tables["RefPoint"] != null)) {
                base.Tables.Add(new RefPointDataTable(ds.Tables["RefPoint"]));
            }
            if ((ds.Tables["AffiliationInfo"] != null)) {
                base.Tables.Add(new AffiliationInfoDataTable(ds.Tables["AffiliationInfo"]));
            }
            if ((ds.Tables["Awards"] != null)) {
                base.Tables.Add(new AwardsDataTable(ds.Tables["Awards"]));
            }
            if ((ds.Tables["Award"] != null)) {
                base.Tables.Add(new AwardDataTable(ds.Tables["Award"]));
            }
            if ((ds.Tables["MultimediaDescriptions"] != null)) {
                base.Tables.Add(new MultimediaDescriptionsDataTable(ds.Tables["MultimediaDescriptions"]));
            }
            if ((ds.Tables["MultimediaDescription"] != null)) {
                base.Tables.Add(new MultimediaDescriptionDataTable(ds.Tables["MultimediaDescription"]));
            }
            if ((ds.Tables["TextItems"] != null)) {
                base.Tables.Add(new TextItemsDataTable(ds.Tables["TextItems"]));
            }
            if ((ds.Tables["TextItem"] != null)) {
                base.Tables.Add(new TextItemDataTable(ds.Tables["TextItem"]));
            }
            if ((ds.Tables["ImageItems"] != null)) {
                base.Tables.Add(new ImageItemsDataTable(ds.Tables["ImageItems"]));
            }
            if ((ds.Tables["ImageItem"] != null)) {
                base.Tables.Add(new ImageItemDataTable(ds.Tables["ImageItem"]));
            }
            if ((ds.Tables["ImageFormat"] != null)) {
                base.Tables.Add(new ImageFormatDataTable(ds.Tables["ImageFormat"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        else {
            this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
        }
        this.GetSerializationData(info, context);
        global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
        base.Tables.CollectionChanged += schemaChangedHandler;
        this.Relations.CollectionChanged += schemaChangedHandler;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public TPA_ExtensionsDataTable TPA_Extensions {
        get {
            return this.tableTPA_Extensions;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public RoadCrossDataTable RoadCross {
        get {
            return this.tableRoadCross;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public TPA_ExtensionDataTable TPA_Extension {
        get {
            return this.tableTPA_Extension;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ThemeCategoryDataTable ThemeCategory {
        get {
            return this.tableThemeCategory;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ThemeCategoryTypeDataTable ThemeCategoryType {
        get {
            return this.tableThemeCategoryType;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public CityImportantMessageDataTable CityImportantMessage {
        get {
            return this.tableCityImportantMessage;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public CityImportantMessageTypeDataTable CityImportantMessageType {
        get {
            return this.tableCityImportantMessageType;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public DescriptionDataTable Description {
        get {
            return this.tableDescription;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public OTA_HotelDescriptiveInfoRSDataTable OTA_HotelDescriptiveInfoRS {
        get {
            return this.tableOTA_HotelDescriptiveInfoRS;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public HotelDescriptiveContentsDataTable HotelDescriptiveContents {
        get {
            return this.tableHotelDescriptiveContents;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public HotelDescriptiveContentDataTable HotelDescriptiveContent {
        get {
            return this.tableHotelDescriptiveContent;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public HotelInfoDataTable HotelInfo {
        get {
            return this.tableHotelInfo;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public CategoryCodesDataTable CategoryCodes {
        get {
            return this.tableCategoryCodes;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public SegmentCategoryDataTable SegmentCategory {
        get {
            return this.tableSegmentCategory;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public PositionDataTable Position {
        get {
            return this.tablePosition;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public AddressDataTable Address {
        get {
            return this.tableAddress;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ZoneDataTable Zone {
        get {
            return this.tableZone;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ServicesDataTable Services {
        get {
            return this.tableServices;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ServiceDataTable Service {
        get {
            return this.tableService;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public FacilityInfoDataTable FacilityInfo {
        get {
            return this.tableFacilityInfo;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public GuestRoomsDataTable GuestRooms {
        get {
            return this.tableGuestRooms;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public GuestRoomDataTable GuestRoom {
        get {
            return this.tableGuestRoom;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public TypeRoomDataTable TypeRoom {
        get {
            return this.tableTypeRoom;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public AmenitiesDataTable Amenities {
        get {
            return this.tableAmenities;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public AmenityDataTable Amenity {
        get {
            return this.tableAmenity;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public FeaturesDataTable Features {
        get {
            return this.tableFeatures;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public FeatureDataTable Feature {
        get {
            return this.tableFeature;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public PoliciesDataTable Policies {
        get {
            return this.tablePolicies;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public PolicyDataTable Policy {
        get {
            return this.tablePolicy;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public PolicyInfoCodesDataTable PolicyInfoCodes {
        get {
            return this.tablePolicyInfoCodes;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public PolicyInfoCodeDataTable PolicyInfoCode {
        get {
            return this.tablePolicyInfoCode;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public PolicyInfoDataTable PolicyInfo {
        get {
            return this.tablePolicyInfo;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public AreaInfoDataTable AreaInfo {
        get {
            return this.tableAreaInfo;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public RefPointsDataTable RefPoints {
        get {
            return this.tableRefPoints;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public RefPointDataTable RefPoint {
        get {
            return this.tableRefPoint;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public AffiliationInfoDataTable AffiliationInfo {
        get {
            return this.tableAffiliationInfo;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public AwardsDataTable Awards {
        get {
            return this.tableAwards;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public AwardDataTable Award {
        get {
            return this.tableAward;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public MultimediaDescriptionsDataTable MultimediaDescriptions {
        get {
            return this.tableMultimediaDescriptions;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public MultimediaDescriptionDataTable MultimediaDescription {
        get {
            return this.tableMultimediaDescription;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public TextItemsDataTable TextItems {
        get {
            return this.tableTextItems;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public TextItemDataTable TextItem {
        get {
            return this.tableTextItem;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ImageItemsDataTable ImageItems {
        get {
            return this.tableImageItems;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ImageItemDataTable ImageItem {
        get {
            return this.tableImageItem;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ImageFormatDataTable ImageFormat {
        get {
            return this.tableImageFormat;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.BrowsableAttribute(true)]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
    public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
        get {
            return this._schemaSerializationMode;
        }
        set {
            this._schemaSerializationMode = value;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public new global::System.Data.DataTableCollection Tables {
        get {
            return base.Tables;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public new global::System.Data.DataRelationCollection Relations {
        get {
            return base.Relations;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override void InitializeDerivedDataSet() {
        this.BeginInit();
        this.InitClass();
        this.EndInit();
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public override global::System.Data.DataSet Clone() {
        NewDataSet cln = ((NewDataSet)(base.Clone()));
        cln.InitVars();
        cln.SchemaSerializationMode = this.SchemaSerializationMode;
        return cln;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override bool ShouldSerializeTables() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override bool ShouldSerializeRelations() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
        if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
            this.Reset();
            global::System.Data.DataSet ds = new global::System.Data.DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["TPA_Extensions"] != null)) {
                base.Tables.Add(new TPA_ExtensionsDataTable(ds.Tables["TPA_Extensions"]));
            }
            if ((ds.Tables["RoadCross"] != null)) {
                base.Tables.Add(new RoadCrossDataTable(ds.Tables["RoadCross"]));
            }
            if ((ds.Tables["TPA_Extension"] != null)) {
                base.Tables.Add(new TPA_ExtensionDataTable(ds.Tables["TPA_Extension"]));
            }
            if ((ds.Tables["ThemeCategory"] != null)) {
                base.Tables.Add(new ThemeCategoryDataTable(ds.Tables["ThemeCategory"]));
            }
            if ((ds.Tables["ThemeCategoryType"] != null)) {
                base.Tables.Add(new ThemeCategoryTypeDataTable(ds.Tables["ThemeCategoryType"]));
            }
            if ((ds.Tables["CityImportantMessage"] != null)) {
                base.Tables.Add(new CityImportantMessageDataTable(ds.Tables["CityImportantMessage"]));
            }
            if ((ds.Tables["CityImportantMessageType"] != null)) {
                base.Tables.Add(new CityImportantMessageTypeDataTable(ds.Tables["CityImportantMessageType"]));
            }
            if ((ds.Tables["Description"] != null)) {
                base.Tables.Add(new DescriptionDataTable(ds.Tables["Description"]));
            }
            if ((ds.Tables["OTA_HotelDescriptiveInfoRS"] != null)) {
                base.Tables.Add(new OTA_HotelDescriptiveInfoRSDataTable(ds.Tables["OTA_HotelDescriptiveInfoRS"]));
            }
            if ((ds.Tables["HotelDescriptiveContents"] != null)) {
                base.Tables.Add(new HotelDescriptiveContentsDataTable(ds.Tables["HotelDescriptiveContents"]));
            }
            if ((ds.Tables["HotelDescriptiveContent"] != null)) {
                base.Tables.Add(new HotelDescriptiveContentDataTable(ds.Tables["HotelDescriptiveContent"]));
            }
            if ((ds.Tables["HotelInfo"] != null)) {
                base.Tables.Add(new HotelInfoDataTable(ds.Tables["HotelInfo"]));
            }
            if ((ds.Tables["CategoryCodes"] != null)) {
                base.Tables.Add(new CategoryCodesDataTable(ds.Tables["CategoryCodes"]));
            }
            if ((ds.Tables["SegmentCategory"] != null)) {
                base.Tables.Add(new SegmentCategoryDataTable(ds.Tables["SegmentCategory"]));
            }
            if ((ds.Tables["Position"] != null)) {
                base.Tables.Add(new PositionDataTable(ds.Tables["Position"]));
            }
            if ((ds.Tables["Address"] != null)) {
                base.Tables.Add(new AddressDataTable(ds.Tables["Address"]));
            }
            if ((ds.Tables["Zone"] != null)) {
                base.Tables.Add(new ZoneDataTable(ds.Tables["Zone"]));
            }
            if ((ds.Tables["Services"] != null)) {
                base.Tables.Add(new ServicesDataTable(ds.Tables["Services"]));
            }
            if ((ds.Tables["Service"] != null)) {
                base.Tables.Add(new ServiceDataTable(ds.Tables["Service"]));
            }
            if ((ds.Tables["FacilityInfo"] != null)) {
                base.Tables.Add(new FacilityInfoDataTable(ds.Tables["FacilityInfo"]));
            }
            if ((ds.Tables["GuestRooms"] != null)) {
                base.Tables.Add(new GuestRoomsDataTable(ds.Tables["GuestRooms"]));
            }
            if ((ds.Tables["GuestRoom"] != null)) {
                base.Tables.Add(new GuestRoomDataTable(ds.Tables["GuestRoom"]));
            }
            if ((ds.Tables["TypeRoom"] != null)) {
                base.Tables.Add(new TypeRoomDataTable(ds.Tables["TypeRoom"]));
            }
            if ((ds.Tables["Amenities"] != null)) {
                base.Tables.Add(new AmenitiesDataTable(ds.Tables["Amenities"]));
            }
            if ((ds.Tables["Amenity"] != null)) {
                base.Tables.Add(new AmenityDataTable(ds.Tables["Amenity"]));
            }
            if ((ds.Tables["Features"] != null)) {
                base.Tables.Add(new FeaturesDataTable(ds.Tables["Features"]));
            }
            if ((ds.Tables["Feature"] != null)) {
                base.Tables.Add(new FeatureDataTable(ds.Tables["Feature"]));
            }
            if ((ds.Tables["Policies"] != null)) {
                base.Tables.Add(new PoliciesDataTable(ds.Tables["Policies"]));
            }
            if ((ds.Tables["Policy"] != null)) {
                base.Tables.Add(new PolicyDataTable(ds.Tables["Policy"]));
            }
            if ((ds.Tables["PolicyInfoCodes"] != null)) {
                base.Tables.Add(new PolicyInfoCodesDataTable(ds.Tables["PolicyInfoCodes"]));
            }
            if ((ds.Tables["PolicyInfoCode"] != null)) {
                base.Tables.Add(new PolicyInfoCodeDataTable(ds.Tables["PolicyInfoCode"]));
            }
            if ((ds.Tables["PolicyInfo"] != null)) {
                base.Tables.Add(new PolicyInfoDataTable(ds.Tables["PolicyInfo"]));
            }
            if ((ds.Tables["AreaInfo"] != null)) {
                base.Tables.Add(new AreaInfoDataTable(ds.Tables["AreaInfo"]));
            }
            if ((ds.Tables["RefPoints"] != null)) {
                base.Tables.Add(new RefPointsDataTable(ds.Tables["RefPoints"]));
            }
            if ((ds.Tables["RefPoint"] != null)) {
                base.Tables.Add(new RefPointDataTable(ds.Tables["RefPoint"]));
            }
            if ((ds.Tables["AffiliationInfo"] != null)) {
                base.Tables.Add(new AffiliationInfoDataTable(ds.Tables["AffiliationInfo"]));
            }
            if ((ds.Tables["Awards"] != null)) {
                base.Tables.Add(new AwardsDataTable(ds.Tables["Awards"]));
            }
            if ((ds.Tables["Award"] != null)) {
                base.Tables.Add(new AwardDataTable(ds.Tables["Award"]));
            }
            if ((ds.Tables["MultimediaDescriptions"] != null)) {
                base.Tables.Add(new MultimediaDescriptionsDataTable(ds.Tables["MultimediaDescriptions"]));
            }
            if ((ds.Tables["MultimediaDescription"] != null)) {
                base.Tables.Add(new MultimediaDescriptionDataTable(ds.Tables["MultimediaDescription"]));
            }
            if ((ds.Tables["TextItems"] != null)) {
                base.Tables.Add(new TextItemsDataTable(ds.Tables["TextItems"]));
            }
            if ((ds.Tables["TextItem"] != null)) {
                base.Tables.Add(new TextItemDataTable(ds.Tables["TextItem"]));
            }
            if ((ds.Tables["ImageItems"] != null)) {
                base.Tables.Add(new ImageItemsDataTable(ds.Tables["ImageItems"]));
            }
            if ((ds.Tables["ImageItem"] != null)) {
                base.Tables.Add(new ImageItemDataTable(ds.Tables["ImageItem"]));
            }
            if ((ds.Tables["ImageFormat"] != null)) {
                base.Tables.Add(new ImageFormatDataTable(ds.Tables["ImageFormat"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        else {
            this.ReadXml(reader);
            this.InitVars();
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
        global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
        this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
        stream.Position = 0;
        return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal void InitVars() {
        this.InitVars(true);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal void InitVars(bool initTable) {
        this.tableTPA_Extensions = ((TPA_ExtensionsDataTable)(base.Tables["TPA_Extensions"]));
        if ((initTable == true)) {
            if ((this.tableTPA_Extensions != null)) {
                this.tableTPA_Extensions.InitVars();
            }
        }
        this.tableRoadCross = ((RoadCrossDataTable)(base.Tables["RoadCross"]));
        if ((initTable == true)) {
            if ((this.tableRoadCross != null)) {
                this.tableRoadCross.InitVars();
            }
        }
        this.tableTPA_Extension = ((TPA_ExtensionDataTable)(base.Tables["TPA_Extension"]));
        if ((initTable == true)) {
            if ((this.tableTPA_Extension != null)) {
                this.tableTPA_Extension.InitVars();
            }
        }
        this.tableThemeCategory = ((ThemeCategoryDataTable)(base.Tables["ThemeCategory"]));
        if ((initTable == true)) {
            if ((this.tableThemeCategory != null)) {
                this.tableThemeCategory.InitVars();
            }
        }
        this.tableThemeCategoryType = ((ThemeCategoryTypeDataTable)(base.Tables["ThemeCategoryType"]));
        if ((initTable == true)) {
            if ((this.tableThemeCategoryType != null)) {
                this.tableThemeCategoryType.InitVars();
            }
        }
        this.tableCityImportantMessage = ((CityImportantMessageDataTable)(base.Tables["CityImportantMessage"]));
        if ((initTable == true)) {
            if ((this.tableCityImportantMessage != null)) {
                this.tableCityImportantMessage.InitVars();
            }
        }
        this.tableCityImportantMessageType = ((CityImportantMessageTypeDataTable)(base.Tables["CityImportantMessageType"]));
        if ((initTable == true)) {
            if ((this.tableCityImportantMessageType != null)) {
                this.tableCityImportantMessageType.InitVars();
            }
        }
        this.tableDescription = ((DescriptionDataTable)(base.Tables["Description"]));
        if ((initTable == true)) {
            if ((this.tableDescription != null)) {
                this.tableDescription.InitVars();
            }
        }
        this.tableOTA_HotelDescriptiveInfoRS = ((OTA_HotelDescriptiveInfoRSDataTable)(base.Tables["OTA_HotelDescriptiveInfoRS"]));
        if ((initTable == true)) {
            if ((this.tableOTA_HotelDescriptiveInfoRS != null)) {
                this.tableOTA_HotelDescriptiveInfoRS.InitVars();
            }
        }
        this.tableHotelDescriptiveContents = ((HotelDescriptiveContentsDataTable)(base.Tables["HotelDescriptiveContents"]));
        if ((initTable == true)) {
            if ((this.tableHotelDescriptiveContents != null)) {
                this.tableHotelDescriptiveContents.InitVars();
            }
        }
        this.tableHotelDescriptiveContent = ((HotelDescriptiveContentDataTable)(base.Tables["HotelDescriptiveContent"]));
        if ((initTable == true)) {
            if ((this.tableHotelDescriptiveContent != null)) {
                this.tableHotelDescriptiveContent.InitVars();
            }
        }
        this.tableHotelInfo = ((HotelInfoDataTable)(base.Tables["HotelInfo"]));
        if ((initTable == true)) {
            if ((this.tableHotelInfo != null)) {
                this.tableHotelInfo.InitVars();
            }
        }
        this.tableCategoryCodes = ((CategoryCodesDataTable)(base.Tables["CategoryCodes"]));
        if ((initTable == true)) {
            if ((this.tableCategoryCodes != null)) {
                this.tableCategoryCodes.InitVars();
            }
        }
        this.tableSegmentCategory = ((SegmentCategoryDataTable)(base.Tables["SegmentCategory"]));
        if ((initTable == true)) {
            if ((this.tableSegmentCategory != null)) {
                this.tableSegmentCategory.InitVars();
            }
        }
        this.tablePosition = ((PositionDataTable)(base.Tables["Position"]));
        if ((initTable == true)) {
            if ((this.tablePosition != null)) {
                this.tablePosition.InitVars();
            }
        }
        this.tableAddress = ((AddressDataTable)(base.Tables["Address"]));
        if ((initTable == true)) {
            if ((this.tableAddress != null)) {
                this.tableAddress.InitVars();
            }
        }
        this.tableZone = ((ZoneDataTable)(base.Tables["Zone"]));
        if ((initTable == true)) {
            if ((this.tableZone != null)) {
                this.tableZone.InitVars();
            }
        }
        this.tableServices = ((ServicesDataTable)(base.Tables["Services"]));
        if ((initTable == true)) {
            if ((this.tableServices != null)) {
                this.tableServices.InitVars();
            }
        }
        this.tableService = ((ServiceDataTable)(base.Tables["Service"]));
        if ((initTable == true)) {
            if ((this.tableService != null)) {
                this.tableService.InitVars();
            }
        }
        this.tableFacilityInfo = ((FacilityInfoDataTable)(base.Tables["FacilityInfo"]));
        if ((initTable == true)) {
            if ((this.tableFacilityInfo != null)) {
                this.tableFacilityInfo.InitVars();
            }
        }
        this.tableGuestRooms = ((GuestRoomsDataTable)(base.Tables["GuestRooms"]));
        if ((initTable == true)) {
            if ((this.tableGuestRooms != null)) {
                this.tableGuestRooms.InitVars();
            }
        }
        this.tableGuestRoom = ((GuestRoomDataTable)(base.Tables["GuestRoom"]));
        if ((initTable == true)) {
            if ((this.tableGuestRoom != null)) {
                this.tableGuestRoom.InitVars();
            }
        }
        this.tableTypeRoom = ((TypeRoomDataTable)(base.Tables["TypeRoom"]));
        if ((initTable == true)) {
            if ((this.tableTypeRoom != null)) {
                this.tableTypeRoom.InitVars();
            }
        }
        this.tableAmenities = ((AmenitiesDataTable)(base.Tables["Amenities"]));
        if ((initTable == true)) {
            if ((this.tableAmenities != null)) {
                this.tableAmenities.InitVars();
            }
        }
        this.tableAmenity = ((AmenityDataTable)(base.Tables["Amenity"]));
        if ((initTable == true)) {
            if ((this.tableAmenity != null)) {
                this.tableAmenity.InitVars();
            }
        }
        this.tableFeatures = ((FeaturesDataTable)(base.Tables["Features"]));
        if ((initTable == true)) {
            if ((this.tableFeatures != null)) {
                this.tableFeatures.InitVars();
            }
        }
        this.tableFeature = ((FeatureDataTable)(base.Tables["Feature"]));
        if ((initTable == true)) {
            if ((this.tableFeature != null)) {
                this.tableFeature.InitVars();
            }
        }
        this.tablePolicies = ((PoliciesDataTable)(base.Tables["Policies"]));
        if ((initTable == true)) {
            if ((this.tablePolicies != null)) {
                this.tablePolicies.InitVars();
            }
        }
        this.tablePolicy = ((PolicyDataTable)(base.Tables["Policy"]));
        if ((initTable == true)) {
            if ((this.tablePolicy != null)) {
                this.tablePolicy.InitVars();
            }
        }
        this.tablePolicyInfoCodes = ((PolicyInfoCodesDataTable)(base.Tables["PolicyInfoCodes"]));
        if ((initTable == true)) {
            if ((this.tablePolicyInfoCodes != null)) {
                this.tablePolicyInfoCodes.InitVars();
            }
        }
        this.tablePolicyInfoCode = ((PolicyInfoCodeDataTable)(base.Tables["PolicyInfoCode"]));
        if ((initTable == true)) {
            if ((this.tablePolicyInfoCode != null)) {
                this.tablePolicyInfoCode.InitVars();
            }
        }
        this.tablePolicyInfo = ((PolicyInfoDataTable)(base.Tables["PolicyInfo"]));
        if ((initTable == true)) {
            if ((this.tablePolicyInfo != null)) {
                this.tablePolicyInfo.InitVars();
            }
        }
        this.tableAreaInfo = ((AreaInfoDataTable)(base.Tables["AreaInfo"]));
        if ((initTable == true)) {
            if ((this.tableAreaInfo != null)) {
                this.tableAreaInfo.InitVars();
            }
        }
        this.tableRefPoints = ((RefPointsDataTable)(base.Tables["RefPoints"]));
        if ((initTable == true)) {
            if ((this.tableRefPoints != null)) {
                this.tableRefPoints.InitVars();
            }
        }
        this.tableRefPoint = ((RefPointDataTable)(base.Tables["RefPoint"]));
        if ((initTable == true)) {
            if ((this.tableRefPoint != null)) {
                this.tableRefPoint.InitVars();
            }
        }
        this.tableAffiliationInfo = ((AffiliationInfoDataTable)(base.Tables["AffiliationInfo"]));
        if ((initTable == true)) {
            if ((this.tableAffiliationInfo != null)) {
                this.tableAffiliationInfo.InitVars();
            }
        }
        this.tableAwards = ((AwardsDataTable)(base.Tables["Awards"]));
        if ((initTable == true)) {
            if ((this.tableAwards != null)) {
                this.tableAwards.InitVars();
            }
        }
        this.tableAward = ((AwardDataTable)(base.Tables["Award"]));
        if ((initTable == true)) {
            if ((this.tableAward != null)) {
                this.tableAward.InitVars();
            }
        }
        this.tableMultimediaDescriptions = ((MultimediaDescriptionsDataTable)(base.Tables["MultimediaDescriptions"]));
        if ((initTable == true)) {
            if ((this.tableMultimediaDescriptions != null)) {
                this.tableMultimediaDescriptions.InitVars();
            }
        }
        this.tableMultimediaDescription = ((MultimediaDescriptionDataTable)(base.Tables["MultimediaDescription"]));
        if ((initTable == true)) {
            if ((this.tableMultimediaDescription != null)) {
                this.tableMultimediaDescription.InitVars();
            }
        }
        this.tableTextItems = ((TextItemsDataTable)(base.Tables["TextItems"]));
        if ((initTable == true)) {
            if ((this.tableTextItems != null)) {
                this.tableTextItems.InitVars();
            }
        }
        this.tableTextItem = ((TextItemDataTable)(base.Tables["TextItem"]));
        if ((initTable == true)) {
            if ((this.tableTextItem != null)) {
                this.tableTextItem.InitVars();
            }
        }
        this.tableImageItems = ((ImageItemsDataTable)(base.Tables["ImageItems"]));
        if ((initTable == true)) {
            if ((this.tableImageItems != null)) {
                this.tableImageItems.InitVars();
            }
        }
        this.tableImageItem = ((ImageItemDataTable)(base.Tables["ImageItem"]));
        if ((initTable == true)) {
            if ((this.tableImageItem != null)) {
                this.tableImageItem.InitVars();
            }
        }
        this.tableImageFormat = ((ImageFormatDataTable)(base.Tables["ImageFormat"]));
        if ((initTable == true)) {
            if ((this.tableImageFormat != null)) {
                this.tableImageFormat.InitVars();
            }
        }
        this.relationAddress_TPA_Extensions = this.Relations["Address_TPA_Extensions"];
        this.relationGuestRoom_TPA_Extensions = this.Relations["GuestRoom_TPA_Extensions"];
        this.relationImageItem_TPA_Extensions = this.Relations["ImageItem_TPA_Extensions"];
        this.relationHotelDescriptiveContent_TPA_Extensions = this.Relations["HotelDescriptiveContent_TPA_Extensions"];
        this.relationTPA_Extensions_RoadCross = this.Relations["TPA_Extensions_RoadCross"];
        this.relationTPA_Extensions_TPA_Extension = this.Relations["TPA_Extensions_TPA_Extension"];
        this.relationTPA_Extensions_ThemeCategory = this.Relations["TPA_Extensions_ThemeCategory"];
        this.relationThemeCategory_ThemeCategoryType = this.Relations["ThemeCategory_ThemeCategoryType"];
        this.relationTPA_Extensions_CityImportantMessage = this.Relations["TPA_Extensions_CityImportantMessage"];
        this.relationCityImportantMessage_CityImportantMessageType = this.Relations["CityImportantMessage_CityImportantMessageType"];
        this.relationPolicyInfoCode_Description = this.Relations["PolicyInfoCode_Description"];
        this.relationImageItem_Description = this.Relations["ImageItem_Description"];
        this.relationOTA_HotelDescriptiveInfoRS_HotelDescriptiveContents = this.Relations["OTA_HotelDescriptiveInfoRS_HotelDescriptiveContents"];
        this.relationHotelDescriptiveContents_HotelDescriptiveContent = this.Relations["HotelDescriptiveContents_HotelDescriptiveContent"];
        this.relationHotelDescriptiveContent_HotelInfo = this.Relations["HotelDescriptiveContent_HotelInfo"];
        this.relationHotelInfo_CategoryCodes = this.Relations["HotelInfo_CategoryCodes"];
        this.relationCategoryCodes_SegmentCategory = this.Relations["CategoryCodes_SegmentCategory"];
        this.relationHotelInfo_Position = this.Relations["HotelInfo_Position"];
        this.relationHotelInfo_Address = this.Relations["HotelInfo_Address"];
        this.relationAddress_Zone = this.Relations["Address_Zone"];
        this.relationHotelInfo_Services = this.Relations["HotelInfo_Services"];
        this.relationServices_Service = this.Relations["Services_Service"];
        this.relationHotelDescriptiveContent_FacilityInfo = this.Relations["HotelDescriptiveContent_FacilityInfo"];
        this.relationFacilityInfo_GuestRooms = this.Relations["FacilityInfo_GuestRooms"];
        this.relationGuestRooms_GuestRoom = this.Relations["GuestRooms_GuestRoom"];
        this.relationGuestRoom_TypeRoom = this.Relations["GuestRoom_TypeRoom"];
        this.relationGuestRoom_Amenities = this.Relations["GuestRoom_Amenities"];
        this.relationAmenities_Amenity = this.Relations["Amenities_Amenity"];
        this.relationGuestRoom_Features = this.Relations["GuestRoom_Features"];
        this.relationFeatures_Feature = this.Relations["Features_Feature"];
        this.relationHotelDescriptiveContent_Policies = this.Relations["HotelDescriptiveContent_Policies"];
        this.relationPolicies_Policy = this.Relations["Policies_Policy"];
        this.relationPolicy_PolicyInfoCodes = this.Relations["Policy_PolicyInfoCodes"];
        this.relationPolicyInfoCodes_PolicyInfoCode = this.Relations["PolicyInfoCodes_PolicyInfoCode"];
        this.relationPolicy_PolicyInfo = this.Relations["Policy_PolicyInfo"];
        this.relationHotelDescriptiveContent_AreaInfo = this.Relations["HotelDescriptiveContent_AreaInfo"];
        this.relationAreaInfo_RefPoints = this.Relations["AreaInfo_RefPoints"];
        this.relationRefPoints_RefPoint = this.Relations["RefPoints_RefPoint"];
        this.relationHotelDescriptiveContent_AffiliationInfo = this.Relations["HotelDescriptiveContent_AffiliationInfo"];
        this.relationAffiliationInfo_Awards = this.Relations["AffiliationInfo_Awards"];
        this.relationAwards_Award = this.Relations["Awards_Award"];
        this.relationHotelDescriptiveContent_MultimediaDescriptions = this.Relations["HotelDescriptiveContent_MultimediaDescriptions"];
        this.relationMultimediaDescriptions_MultimediaDescription = this.Relations["MultimediaDescriptions_MultimediaDescription"];
        this.relationMultimediaDescription_TextItems = this.Relations["MultimediaDescription_TextItems"];
        this.relationTextItems_TextItem = this.Relations["TextItems_TextItem"];
        this.relationMultimediaDescription_ImageItems = this.Relations["MultimediaDescription_ImageItems"];
        this.relationImageItems_ImageItem = this.Relations["ImageItems_ImageItem"];
        this.relationImageItem_ImageFormat = this.Relations["ImageItem_ImageFormat"];
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void InitClass() {
        this.DataSetName = "NewDataSet";
        this.Prefix = "";
        this.Namespace = "http://www.opentravel.org/OTA/2003/05";
        this.Locale = new global::System.Globalization.CultureInfo("");
        this.EnforceConstraints = true;
        this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        this.tableTPA_Extensions = new TPA_ExtensionsDataTable();
        base.Tables.Add(this.tableTPA_Extensions);
        this.tableRoadCross = new RoadCrossDataTable();
        base.Tables.Add(this.tableRoadCross);
        this.tableTPA_Extension = new TPA_ExtensionDataTable();
        base.Tables.Add(this.tableTPA_Extension);
        this.tableThemeCategory = new ThemeCategoryDataTable();
        base.Tables.Add(this.tableThemeCategory);
        this.tableThemeCategoryType = new ThemeCategoryTypeDataTable();
        base.Tables.Add(this.tableThemeCategoryType);
        this.tableCityImportantMessage = new CityImportantMessageDataTable();
        base.Tables.Add(this.tableCityImportantMessage);
        this.tableCityImportantMessageType = new CityImportantMessageTypeDataTable();
        base.Tables.Add(this.tableCityImportantMessageType);
        this.tableDescription = new DescriptionDataTable();
        base.Tables.Add(this.tableDescription);
        this.tableOTA_HotelDescriptiveInfoRS = new OTA_HotelDescriptiveInfoRSDataTable();
        base.Tables.Add(this.tableOTA_HotelDescriptiveInfoRS);
        this.tableHotelDescriptiveContents = new HotelDescriptiveContentsDataTable();
        base.Tables.Add(this.tableHotelDescriptiveContents);
        this.tableHotelDescriptiveContent = new HotelDescriptiveContentDataTable();
        base.Tables.Add(this.tableHotelDescriptiveContent);
        this.tableHotelInfo = new HotelInfoDataTable();
        base.Tables.Add(this.tableHotelInfo);
        this.tableCategoryCodes = new CategoryCodesDataTable();
        base.Tables.Add(this.tableCategoryCodes);
        this.tableSegmentCategory = new SegmentCategoryDataTable();
        base.Tables.Add(this.tableSegmentCategory);
        this.tablePosition = new PositionDataTable();
        base.Tables.Add(this.tablePosition);
        this.tableAddress = new AddressDataTable();
        base.Tables.Add(this.tableAddress);
        this.tableZone = new ZoneDataTable();
        base.Tables.Add(this.tableZone);
        this.tableServices = new ServicesDataTable();
        base.Tables.Add(this.tableServices);
        this.tableService = new ServiceDataTable();
        base.Tables.Add(this.tableService);
        this.tableFacilityInfo = new FacilityInfoDataTable();
        base.Tables.Add(this.tableFacilityInfo);
        this.tableGuestRooms = new GuestRoomsDataTable();
        base.Tables.Add(this.tableGuestRooms);
        this.tableGuestRoom = new GuestRoomDataTable();
        base.Tables.Add(this.tableGuestRoom);
        this.tableTypeRoom = new TypeRoomDataTable();
        base.Tables.Add(this.tableTypeRoom);
        this.tableAmenities = new AmenitiesDataTable();
        base.Tables.Add(this.tableAmenities);
        this.tableAmenity = new AmenityDataTable();
        base.Tables.Add(this.tableAmenity);
        this.tableFeatures = new FeaturesDataTable();
        base.Tables.Add(this.tableFeatures);
        this.tableFeature = new FeatureDataTable();
        base.Tables.Add(this.tableFeature);
        this.tablePolicies = new PoliciesDataTable();
        base.Tables.Add(this.tablePolicies);
        this.tablePolicy = new PolicyDataTable();
        base.Tables.Add(this.tablePolicy);
        this.tablePolicyInfoCodes = new PolicyInfoCodesDataTable();
        base.Tables.Add(this.tablePolicyInfoCodes);
        this.tablePolicyInfoCode = new PolicyInfoCodeDataTable();
        base.Tables.Add(this.tablePolicyInfoCode);
        this.tablePolicyInfo = new PolicyInfoDataTable();
        base.Tables.Add(this.tablePolicyInfo);
        this.tableAreaInfo = new AreaInfoDataTable();
        base.Tables.Add(this.tableAreaInfo);
        this.tableRefPoints = new RefPointsDataTable();
        base.Tables.Add(this.tableRefPoints);
        this.tableRefPoint = new RefPointDataTable();
        base.Tables.Add(this.tableRefPoint);
        this.tableAffiliationInfo = new AffiliationInfoDataTable();
        base.Tables.Add(this.tableAffiliationInfo);
        this.tableAwards = new AwardsDataTable();
        base.Tables.Add(this.tableAwards);
        this.tableAward = new AwardDataTable();
        base.Tables.Add(this.tableAward);
        this.tableMultimediaDescriptions = new MultimediaDescriptionsDataTable();
        base.Tables.Add(this.tableMultimediaDescriptions);
        this.tableMultimediaDescription = new MultimediaDescriptionDataTable();
        base.Tables.Add(this.tableMultimediaDescription);
        this.tableTextItems = new TextItemsDataTable();
        base.Tables.Add(this.tableTextItems);
        this.tableTextItem = new TextItemDataTable();
        base.Tables.Add(this.tableTextItem);
        this.tableImageItems = new ImageItemsDataTable();
        base.Tables.Add(this.tableImageItems);
        this.tableImageItem = new ImageItemDataTable();
        base.Tables.Add(this.tableImageItem);
        this.tableImageFormat = new ImageFormatDataTable();
        base.Tables.Add(this.tableImageFormat);
        global::System.Data.ForeignKeyConstraint fkc;
        fkc = new global::System.Data.ForeignKeyConstraint("Address_TPA_Extensions", new global::System.Data.DataColumn[] {
                    this.tableAddress.Address_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.Address_IdColumn});
        this.tableTPA_Extensions.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("GuestRoom_TPA_Extensions", new global::System.Data.DataColumn[] {
                    this.tableGuestRoom.GuestRoom_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.GuestRoom_IdColumn});
        this.tableTPA_Extensions.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("ImageItem_TPA_Extensions", new global::System.Data.DataColumn[] {
                    this.tableImageItem.ImageItem_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.ImageItem_IdColumn});
        this.tableTPA_Extensions.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelDescriptiveContent_TPA_Extensions", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.HotelDescriptiveContent_IdColumn});
        this.tableTPA_Extensions.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("TPA_Extensions_RoadCross", new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.TPA_Extensions_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableRoadCross.TPA_Extensions_IdColumn});
        this.tableRoadCross.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("TPA_Extensions_TPA_Extension", new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.TPA_Extensions_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTPA_Extension.TPA_Extensions_IdColumn});
        this.tableTPA_Extension.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("TPA_Extensions_ThemeCategory", new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.TPA_Extensions_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableThemeCategory.TPA_Extensions_IdColumn});
        this.tableThemeCategory.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("ThemeCategory_ThemeCategoryType", new global::System.Data.DataColumn[] {
                    this.tableThemeCategory.ThemeCategory_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableThemeCategoryType.ThemeCategory_IdColumn});
        this.tableThemeCategoryType.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("TPA_Extensions_CityImportantMessage", new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.TPA_Extensions_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableCityImportantMessage.TPA_Extensions_IdColumn});
        this.tableCityImportantMessage.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("CityImportantMessage_CityImportantMessageType", new global::System.Data.DataColumn[] {
                    this.tableCityImportantMessage.CityImportantMessage_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableCityImportantMessageType.CityImportantMessage_IdColumn});
        this.tableCityImportantMessageType.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("PolicyInfoCode_Description", new global::System.Data.DataColumn[] {
                    this.tablePolicyInfoCode.PolicyInfoCode_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableDescription.PolicyInfoCode_IdColumn});
        this.tableDescription.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("ImageItem_Description", new global::System.Data.DataColumn[] {
                    this.tableImageItem.ImageItem_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableDescription.ImageItem_IdColumn});
        this.tableDescription.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("OTA_HotelDescriptiveInfoRS_HotelDescriptiveContents", new global::System.Data.DataColumn[] {
                    this.tableOTA_HotelDescriptiveInfoRS.OTA_HotelDescriptiveInfoRS_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContents.OTA_HotelDescriptiveInfoRS_IdColumn});
        this.tableHotelDescriptiveContents.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelDescriptiveContents_HotelDescriptiveContent", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContents.HotelDescriptiveContents_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContents_IdColumn});
        this.tableHotelDescriptiveContent.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelDescriptiveContent_HotelInfo", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableHotelInfo.HotelDescriptiveContent_IdColumn});
        this.tableHotelInfo.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelInfo_CategoryCodes", new global::System.Data.DataColumn[] {
                    this.tableHotelInfo.HotelInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableCategoryCodes.HotelInfo_IdColumn});
        this.tableCategoryCodes.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("CategoryCodes_SegmentCategory", new global::System.Data.DataColumn[] {
                    this.tableCategoryCodes.CategoryCodes_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableSegmentCategory.CategoryCodes_IdColumn});
        this.tableSegmentCategory.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelInfo_Position", new global::System.Data.DataColumn[] {
                    this.tableHotelInfo.HotelInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePosition.HotelInfo_IdColumn});
        this.tablePosition.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelInfo_Address", new global::System.Data.DataColumn[] {
                    this.tableHotelInfo.HotelInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAddress.HotelInfo_IdColumn});
        this.tableAddress.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("Address_Zone", new global::System.Data.DataColumn[] {
                    this.tableAddress.Address_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableZone.Address_IdColumn});
        this.tableZone.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelInfo_Services", new global::System.Data.DataColumn[] {
                    this.tableHotelInfo.HotelInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableServices.HotelInfo_IdColumn});
        this.tableServices.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("Services_Service", new global::System.Data.DataColumn[] {
                    this.tableServices.Services_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableService.Services_IdColumn});
        this.tableService.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelDescriptiveContent_FacilityInfo", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableFacilityInfo.HotelDescriptiveContent_IdColumn});
        this.tableFacilityInfo.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("FacilityInfo_GuestRooms", new global::System.Data.DataColumn[] {
                    this.tableFacilityInfo.FacilityInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableGuestRooms.FacilityInfo_IdColumn});
        this.tableGuestRooms.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("GuestRooms_GuestRoom", new global::System.Data.DataColumn[] {
                    this.tableGuestRooms.GuestRooms_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableGuestRoom.GuestRooms_IdColumn});
        this.tableGuestRoom.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("GuestRoom_TypeRoom", new global::System.Data.DataColumn[] {
                    this.tableGuestRoom.GuestRoom_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTypeRoom.GuestRoom_IdColumn});
        this.tableTypeRoom.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("GuestRoom_Amenities", new global::System.Data.DataColumn[] {
                    this.tableGuestRoom.GuestRoom_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAmenities.GuestRoom_IdColumn});
        this.tableAmenities.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("Amenities_Amenity", new global::System.Data.DataColumn[] {
                    this.tableAmenities.Amenities_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAmenity.Amenities_IdColumn});
        this.tableAmenity.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("GuestRoom_Features", new global::System.Data.DataColumn[] {
                    this.tableGuestRoom.GuestRoom_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableFeatures.GuestRoom_IdColumn});
        this.tableFeatures.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("Features_Feature", new global::System.Data.DataColumn[] {
                    this.tableFeatures.Features_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableFeature.Features_IdColumn});
        this.tableFeature.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelDescriptiveContent_Policies", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePolicies.HotelDescriptiveContent_IdColumn});
        this.tablePolicies.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("Policies_Policy", new global::System.Data.DataColumn[] {
                    this.tablePolicies.Policies_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePolicy.Policies_IdColumn});
        this.tablePolicy.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("Policy_PolicyInfoCodes", new global::System.Data.DataColumn[] {
                    this.tablePolicy.Policy_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePolicyInfoCodes.Policy_IdColumn});
        this.tablePolicyInfoCodes.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("PolicyInfoCodes_PolicyInfoCode", new global::System.Data.DataColumn[] {
                    this.tablePolicyInfoCodes.PolicyInfoCodes_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePolicyInfoCode.PolicyInfoCodes_IdColumn});
        this.tablePolicyInfoCode.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("Policy_PolicyInfo", new global::System.Data.DataColumn[] {
                    this.tablePolicy.Policy_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePolicyInfo.Policy_IdColumn});
        this.tablePolicyInfo.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelDescriptiveContent_AreaInfo", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAreaInfo.HotelDescriptiveContent_IdColumn});
        this.tableAreaInfo.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("AreaInfo_RefPoints", new global::System.Data.DataColumn[] {
                    this.tableAreaInfo.AreaInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableRefPoints.AreaInfo_IdColumn});
        this.tableRefPoints.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("RefPoints_RefPoint", new global::System.Data.DataColumn[] {
                    this.tableRefPoints.RefPoints_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableRefPoint.RefPoints_IdColumn});
        this.tableRefPoint.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelDescriptiveContent_AffiliationInfo", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAffiliationInfo.HotelDescriptiveContent_IdColumn});
        this.tableAffiliationInfo.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("AffiliationInfo_Awards", new global::System.Data.DataColumn[] {
                    this.tableAffiliationInfo.AffiliationInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAwards.AffiliationInfo_IdColumn});
        this.tableAwards.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("Awards_Award", new global::System.Data.DataColumn[] {
                    this.tableAwards.Awards_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAward.Awards_IdColumn});
        this.tableAward.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("HotelDescriptiveContent_MultimediaDescriptions", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableMultimediaDescriptions.HotelDescriptiveContent_IdColumn});
        this.tableMultimediaDescriptions.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("MultimediaDescriptions_MultimediaDescription", new global::System.Data.DataColumn[] {
                    this.tableMultimediaDescriptions.MultimediaDescriptions_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableMultimediaDescription.MultimediaDescriptions_IdColumn});
        this.tableMultimediaDescription.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("MultimediaDescription_TextItems", new global::System.Data.DataColumn[] {
                    this.tableMultimediaDescription.MultimediaDescription_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTextItems.MultimediaDescription_IdColumn});
        this.tableTextItems.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("TextItems_TextItem", new global::System.Data.DataColumn[] {
                    this.tableTextItems.TextItems_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTextItem.TextItems_IdColumn});
        this.tableTextItem.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("MultimediaDescription_ImageItems", new global::System.Data.DataColumn[] {
                    this.tableMultimediaDescription.MultimediaDescription_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableImageItems.MultimediaDescription_IdColumn});
        this.tableImageItems.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("ImageItems_ImageItem", new global::System.Data.DataColumn[] {
                    this.tableImageItems.ImageItems_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableImageItem.ImageItems_IdColumn});
        this.tableImageItem.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        fkc = new global::System.Data.ForeignKeyConstraint("ImageItem_ImageFormat", new global::System.Data.DataColumn[] {
                    this.tableImageItem.ImageItem_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableImageFormat.ImageItem_IdColumn});
        this.tableImageFormat.Constraints.Add(fkc);
        fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
        fkc.DeleteRule = global::System.Data.Rule.Cascade;
        fkc.UpdateRule = global::System.Data.Rule.Cascade;
        this.relationAddress_TPA_Extensions = new global::System.Data.DataRelation("Address_TPA_Extensions", new global::System.Data.DataColumn[] {
                    this.tableAddress.Address_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.Address_IdColumn}, false);
        this.relationAddress_TPA_Extensions.Nested = true;
        this.Relations.Add(this.relationAddress_TPA_Extensions);
        this.relationGuestRoom_TPA_Extensions = new global::System.Data.DataRelation("GuestRoom_TPA_Extensions", new global::System.Data.DataColumn[] {
                    this.tableGuestRoom.GuestRoom_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.GuestRoom_IdColumn}, false);
        this.relationGuestRoom_TPA_Extensions.Nested = true;
        this.Relations.Add(this.relationGuestRoom_TPA_Extensions);
        this.relationImageItem_TPA_Extensions = new global::System.Data.DataRelation("ImageItem_TPA_Extensions", new global::System.Data.DataColumn[] {
                    this.tableImageItem.ImageItem_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.ImageItem_IdColumn}, false);
        this.relationImageItem_TPA_Extensions.Nested = true;
        this.Relations.Add(this.relationImageItem_TPA_Extensions);
        this.relationHotelDescriptiveContent_TPA_Extensions = new global::System.Data.DataRelation("HotelDescriptiveContent_TPA_Extensions", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.HotelDescriptiveContent_IdColumn}, false);
        this.relationHotelDescriptiveContent_TPA_Extensions.Nested = true;
        this.Relations.Add(this.relationHotelDescriptiveContent_TPA_Extensions);
        this.relationTPA_Extensions_RoadCross = new global::System.Data.DataRelation("TPA_Extensions_RoadCross", new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.TPA_Extensions_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableRoadCross.TPA_Extensions_IdColumn}, false);
        this.relationTPA_Extensions_RoadCross.Nested = true;
        this.Relations.Add(this.relationTPA_Extensions_RoadCross);
        this.relationTPA_Extensions_TPA_Extension = new global::System.Data.DataRelation("TPA_Extensions_TPA_Extension", new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.TPA_Extensions_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTPA_Extension.TPA_Extensions_IdColumn}, false);
        this.relationTPA_Extensions_TPA_Extension.Nested = true;
        this.Relations.Add(this.relationTPA_Extensions_TPA_Extension);
        this.relationTPA_Extensions_ThemeCategory = new global::System.Data.DataRelation("TPA_Extensions_ThemeCategory", new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.TPA_Extensions_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableThemeCategory.TPA_Extensions_IdColumn}, false);
        this.relationTPA_Extensions_ThemeCategory.Nested = true;
        this.Relations.Add(this.relationTPA_Extensions_ThemeCategory);
        this.relationThemeCategory_ThemeCategoryType = new global::System.Data.DataRelation("ThemeCategory_ThemeCategoryType", new global::System.Data.DataColumn[] {
                    this.tableThemeCategory.ThemeCategory_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableThemeCategoryType.ThemeCategory_IdColumn}, false);
        this.relationThemeCategory_ThemeCategoryType.Nested = true;
        this.Relations.Add(this.relationThemeCategory_ThemeCategoryType);
        this.relationTPA_Extensions_CityImportantMessage = new global::System.Data.DataRelation("TPA_Extensions_CityImportantMessage", new global::System.Data.DataColumn[] {
                    this.tableTPA_Extensions.TPA_Extensions_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableCityImportantMessage.TPA_Extensions_IdColumn}, false);
        this.relationTPA_Extensions_CityImportantMessage.Nested = true;
        this.Relations.Add(this.relationTPA_Extensions_CityImportantMessage);
        this.relationCityImportantMessage_CityImportantMessageType = new global::System.Data.DataRelation("CityImportantMessage_CityImportantMessageType", new global::System.Data.DataColumn[] {
                    this.tableCityImportantMessage.CityImportantMessage_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableCityImportantMessageType.CityImportantMessage_IdColumn}, false);
        this.relationCityImportantMessage_CityImportantMessageType.Nested = true;
        this.Relations.Add(this.relationCityImportantMessage_CityImportantMessageType);
        this.relationPolicyInfoCode_Description = new global::System.Data.DataRelation("PolicyInfoCode_Description", new global::System.Data.DataColumn[] {
                    this.tablePolicyInfoCode.PolicyInfoCode_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableDescription.PolicyInfoCode_IdColumn}, false);
        this.relationPolicyInfoCode_Description.Nested = true;
        this.Relations.Add(this.relationPolicyInfoCode_Description);
        this.relationImageItem_Description = new global::System.Data.DataRelation("ImageItem_Description", new global::System.Data.DataColumn[] {
                    this.tableImageItem.ImageItem_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableDescription.ImageItem_IdColumn}, false);
        this.relationImageItem_Description.Nested = true;
        this.Relations.Add(this.relationImageItem_Description);
        this.relationOTA_HotelDescriptiveInfoRS_HotelDescriptiveContents = new global::System.Data.DataRelation("OTA_HotelDescriptiveInfoRS_HotelDescriptiveContents", new global::System.Data.DataColumn[] {
                    this.tableOTA_HotelDescriptiveInfoRS.OTA_HotelDescriptiveInfoRS_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContents.OTA_HotelDescriptiveInfoRS_IdColumn}, false);
        this.relationOTA_HotelDescriptiveInfoRS_HotelDescriptiveContents.Nested = true;
        this.Relations.Add(this.relationOTA_HotelDescriptiveInfoRS_HotelDescriptiveContents);
        this.relationHotelDescriptiveContents_HotelDescriptiveContent = new global::System.Data.DataRelation("HotelDescriptiveContents_HotelDescriptiveContent", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContents.HotelDescriptiveContents_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContents_IdColumn}, false);
        this.relationHotelDescriptiveContents_HotelDescriptiveContent.Nested = true;
        this.Relations.Add(this.relationHotelDescriptiveContents_HotelDescriptiveContent);
        this.relationHotelDescriptiveContent_HotelInfo = new global::System.Data.DataRelation("HotelDescriptiveContent_HotelInfo", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableHotelInfo.HotelDescriptiveContent_IdColumn}, false);
        this.relationHotelDescriptiveContent_HotelInfo.Nested = true;
        this.Relations.Add(this.relationHotelDescriptiveContent_HotelInfo);
        this.relationHotelInfo_CategoryCodes = new global::System.Data.DataRelation("HotelInfo_CategoryCodes", new global::System.Data.DataColumn[] {
                    this.tableHotelInfo.HotelInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableCategoryCodes.HotelInfo_IdColumn}, false);
        this.relationHotelInfo_CategoryCodes.Nested = true;
        this.Relations.Add(this.relationHotelInfo_CategoryCodes);
        this.relationCategoryCodes_SegmentCategory = new global::System.Data.DataRelation("CategoryCodes_SegmentCategory", new global::System.Data.DataColumn[] {
                    this.tableCategoryCodes.CategoryCodes_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableSegmentCategory.CategoryCodes_IdColumn}, false);
        this.relationCategoryCodes_SegmentCategory.Nested = true;
        this.Relations.Add(this.relationCategoryCodes_SegmentCategory);
        this.relationHotelInfo_Position = new global::System.Data.DataRelation("HotelInfo_Position", new global::System.Data.DataColumn[] {
                    this.tableHotelInfo.HotelInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePosition.HotelInfo_IdColumn}, false);
        this.relationHotelInfo_Position.Nested = true;
        this.Relations.Add(this.relationHotelInfo_Position);
        this.relationHotelInfo_Address = new global::System.Data.DataRelation("HotelInfo_Address", new global::System.Data.DataColumn[] {
                    this.tableHotelInfo.HotelInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAddress.HotelInfo_IdColumn}, false);
        this.relationHotelInfo_Address.Nested = true;
        this.Relations.Add(this.relationHotelInfo_Address);
        this.relationAddress_Zone = new global::System.Data.DataRelation("Address_Zone", new global::System.Data.DataColumn[] {
                    this.tableAddress.Address_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableZone.Address_IdColumn}, false);
        this.relationAddress_Zone.Nested = true;
        this.Relations.Add(this.relationAddress_Zone);
        this.relationHotelInfo_Services = new global::System.Data.DataRelation("HotelInfo_Services", new global::System.Data.DataColumn[] {
                    this.tableHotelInfo.HotelInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableServices.HotelInfo_IdColumn}, false);
        this.relationHotelInfo_Services.Nested = true;
        this.Relations.Add(this.relationHotelInfo_Services);
        this.relationServices_Service = new global::System.Data.DataRelation("Services_Service", new global::System.Data.DataColumn[] {
                    this.tableServices.Services_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableService.Services_IdColumn}, false);
        this.relationServices_Service.Nested = true;
        this.Relations.Add(this.relationServices_Service);
        this.relationHotelDescriptiveContent_FacilityInfo = new global::System.Data.DataRelation("HotelDescriptiveContent_FacilityInfo", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableFacilityInfo.HotelDescriptiveContent_IdColumn}, false);
        this.relationHotelDescriptiveContent_FacilityInfo.Nested = true;
        this.Relations.Add(this.relationHotelDescriptiveContent_FacilityInfo);
        this.relationFacilityInfo_GuestRooms = new global::System.Data.DataRelation("FacilityInfo_GuestRooms", new global::System.Data.DataColumn[] {
                    this.tableFacilityInfo.FacilityInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableGuestRooms.FacilityInfo_IdColumn}, false);
        this.relationFacilityInfo_GuestRooms.Nested = true;
        this.Relations.Add(this.relationFacilityInfo_GuestRooms);
        this.relationGuestRooms_GuestRoom = new global::System.Data.DataRelation("GuestRooms_GuestRoom", new global::System.Data.DataColumn[] {
                    this.tableGuestRooms.GuestRooms_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableGuestRoom.GuestRooms_IdColumn}, false);
        this.relationGuestRooms_GuestRoom.Nested = true;
        this.Relations.Add(this.relationGuestRooms_GuestRoom);
        this.relationGuestRoom_TypeRoom = new global::System.Data.DataRelation("GuestRoom_TypeRoom", new global::System.Data.DataColumn[] {
                    this.tableGuestRoom.GuestRoom_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTypeRoom.GuestRoom_IdColumn}, false);
        this.relationGuestRoom_TypeRoom.Nested = true;
        this.Relations.Add(this.relationGuestRoom_TypeRoom);
        this.relationGuestRoom_Amenities = new global::System.Data.DataRelation("GuestRoom_Amenities", new global::System.Data.DataColumn[] {
                    this.tableGuestRoom.GuestRoom_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAmenities.GuestRoom_IdColumn}, false);
        this.relationGuestRoom_Amenities.Nested = true;
        this.Relations.Add(this.relationGuestRoom_Amenities);
        this.relationAmenities_Amenity = new global::System.Data.DataRelation("Amenities_Amenity", new global::System.Data.DataColumn[] {
                    this.tableAmenities.Amenities_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAmenity.Amenities_IdColumn}, false);
        this.relationAmenities_Amenity.Nested = true;
        this.Relations.Add(this.relationAmenities_Amenity);
        this.relationGuestRoom_Features = new global::System.Data.DataRelation("GuestRoom_Features", new global::System.Data.DataColumn[] {
                    this.tableGuestRoom.GuestRoom_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableFeatures.GuestRoom_IdColumn}, false);
        this.relationGuestRoom_Features.Nested = true;
        this.Relations.Add(this.relationGuestRoom_Features);
        this.relationFeatures_Feature = new global::System.Data.DataRelation("Features_Feature", new global::System.Data.DataColumn[] {
                    this.tableFeatures.Features_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableFeature.Features_IdColumn}, false);
        this.relationFeatures_Feature.Nested = true;
        this.Relations.Add(this.relationFeatures_Feature);
        this.relationHotelDescriptiveContent_Policies = new global::System.Data.DataRelation("HotelDescriptiveContent_Policies", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePolicies.HotelDescriptiveContent_IdColumn}, false);
        this.relationHotelDescriptiveContent_Policies.Nested = true;
        this.Relations.Add(this.relationHotelDescriptiveContent_Policies);
        this.relationPolicies_Policy = new global::System.Data.DataRelation("Policies_Policy", new global::System.Data.DataColumn[] {
                    this.tablePolicies.Policies_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePolicy.Policies_IdColumn}, false);
        this.relationPolicies_Policy.Nested = true;
        this.Relations.Add(this.relationPolicies_Policy);
        this.relationPolicy_PolicyInfoCodes = new global::System.Data.DataRelation("Policy_PolicyInfoCodes", new global::System.Data.DataColumn[] {
                    this.tablePolicy.Policy_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePolicyInfoCodes.Policy_IdColumn}, false);
        this.relationPolicy_PolicyInfoCodes.Nested = true;
        this.Relations.Add(this.relationPolicy_PolicyInfoCodes);
        this.relationPolicyInfoCodes_PolicyInfoCode = new global::System.Data.DataRelation("PolicyInfoCodes_PolicyInfoCode", new global::System.Data.DataColumn[] {
                    this.tablePolicyInfoCodes.PolicyInfoCodes_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePolicyInfoCode.PolicyInfoCodes_IdColumn}, false);
        this.relationPolicyInfoCodes_PolicyInfoCode.Nested = true;
        this.Relations.Add(this.relationPolicyInfoCodes_PolicyInfoCode);
        this.relationPolicy_PolicyInfo = new global::System.Data.DataRelation("Policy_PolicyInfo", new global::System.Data.DataColumn[] {
                    this.tablePolicy.Policy_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePolicyInfo.Policy_IdColumn}, false);
        this.relationPolicy_PolicyInfo.Nested = true;
        this.Relations.Add(this.relationPolicy_PolicyInfo);
        this.relationHotelDescriptiveContent_AreaInfo = new global::System.Data.DataRelation("HotelDescriptiveContent_AreaInfo", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAreaInfo.HotelDescriptiveContent_IdColumn}, false);
        this.relationHotelDescriptiveContent_AreaInfo.Nested = true;
        this.Relations.Add(this.relationHotelDescriptiveContent_AreaInfo);
        this.relationAreaInfo_RefPoints = new global::System.Data.DataRelation("AreaInfo_RefPoints", new global::System.Data.DataColumn[] {
                    this.tableAreaInfo.AreaInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableRefPoints.AreaInfo_IdColumn}, false);
        this.relationAreaInfo_RefPoints.Nested = true;
        this.Relations.Add(this.relationAreaInfo_RefPoints);
        this.relationRefPoints_RefPoint = new global::System.Data.DataRelation("RefPoints_RefPoint", new global::System.Data.DataColumn[] {
                    this.tableRefPoints.RefPoints_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableRefPoint.RefPoints_IdColumn}, false);
        this.relationRefPoints_RefPoint.Nested = true;
        this.Relations.Add(this.relationRefPoints_RefPoint);
        this.relationHotelDescriptiveContent_AffiliationInfo = new global::System.Data.DataRelation("HotelDescriptiveContent_AffiliationInfo", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAffiliationInfo.HotelDescriptiveContent_IdColumn}, false);
        this.relationHotelDescriptiveContent_AffiliationInfo.Nested = true;
        this.Relations.Add(this.relationHotelDescriptiveContent_AffiliationInfo);
        this.relationAffiliationInfo_Awards = new global::System.Data.DataRelation("AffiliationInfo_Awards", new global::System.Data.DataColumn[] {
                    this.tableAffiliationInfo.AffiliationInfo_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAwards.AffiliationInfo_IdColumn}, false);
        this.relationAffiliationInfo_Awards.Nested = true;
        this.Relations.Add(this.relationAffiliationInfo_Awards);
        this.relationAwards_Award = new global::System.Data.DataRelation("Awards_Award", new global::System.Data.DataColumn[] {
                    this.tableAwards.Awards_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableAward.Awards_IdColumn}, false);
        this.relationAwards_Award.Nested = true;
        this.Relations.Add(this.relationAwards_Award);
        this.relationHotelDescriptiveContent_MultimediaDescriptions = new global::System.Data.DataRelation("HotelDescriptiveContent_MultimediaDescriptions", new global::System.Data.DataColumn[] {
                    this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableMultimediaDescriptions.HotelDescriptiveContent_IdColumn}, false);
        this.relationHotelDescriptiveContent_MultimediaDescriptions.Nested = true;
        this.Relations.Add(this.relationHotelDescriptiveContent_MultimediaDescriptions);
        this.relationMultimediaDescriptions_MultimediaDescription = new global::System.Data.DataRelation("MultimediaDescriptions_MultimediaDescription", new global::System.Data.DataColumn[] {
                    this.tableMultimediaDescriptions.MultimediaDescriptions_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableMultimediaDescription.MultimediaDescriptions_IdColumn}, false);
        this.relationMultimediaDescriptions_MultimediaDescription.Nested = true;
        this.Relations.Add(this.relationMultimediaDescriptions_MultimediaDescription);
        this.relationMultimediaDescription_TextItems = new global::System.Data.DataRelation("MultimediaDescription_TextItems", new global::System.Data.DataColumn[] {
                    this.tableMultimediaDescription.MultimediaDescription_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTextItems.MultimediaDescription_IdColumn}, false);
        this.relationMultimediaDescription_TextItems.Nested = true;
        this.Relations.Add(this.relationMultimediaDescription_TextItems);
        this.relationTextItems_TextItem = new global::System.Data.DataRelation("TextItems_TextItem", new global::System.Data.DataColumn[] {
                    this.tableTextItems.TextItems_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableTextItem.TextItems_IdColumn}, false);
        this.relationTextItems_TextItem.Nested = true;
        this.Relations.Add(this.relationTextItems_TextItem);
        this.relationMultimediaDescription_ImageItems = new global::System.Data.DataRelation("MultimediaDescription_ImageItems", new global::System.Data.DataColumn[] {
                    this.tableMultimediaDescription.MultimediaDescription_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableImageItems.MultimediaDescription_IdColumn}, false);
        this.relationMultimediaDescription_ImageItems.Nested = true;
        this.Relations.Add(this.relationMultimediaDescription_ImageItems);
        this.relationImageItems_ImageItem = new global::System.Data.DataRelation("ImageItems_ImageItem", new global::System.Data.DataColumn[] {
                    this.tableImageItems.ImageItems_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableImageItem.ImageItems_IdColumn}, false);
        this.relationImageItems_ImageItem.Nested = true;
        this.Relations.Add(this.relationImageItems_ImageItem);
        this.relationImageItem_ImageFormat = new global::System.Data.DataRelation("ImageItem_ImageFormat", new global::System.Data.DataColumn[] {
                    this.tableImageItem.ImageItem_IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableImageFormat.ImageItem_IdColumn}, false);
        this.relationImageItem_ImageFormat.Nested = true;
        this.Relations.Add(this.relationImageItem_ImageFormat);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeTPA_Extensions() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeRoadCross() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeTPA_Extension() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeThemeCategory() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeThemeCategoryType() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeCityImportantMessage() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeCityImportantMessageType() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeDescription() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeOTA_HotelDescriptiveInfoRS() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeHotelDescriptiveContents() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeHotelDescriptiveContent() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeHotelInfo() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeCategoryCodes() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeSegmentCategory() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializePosition() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeAddress() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeZone() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeServices() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeService() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeFacilityInfo() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeGuestRooms() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeGuestRoom() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeTypeRoom() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeAmenities() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeAmenity() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeFeatures() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeFeature() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializePolicies() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializePolicy() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializePolicyInfoCodes() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializePolicyInfoCode() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializePolicyInfo() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeAreaInfo() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeRefPoints() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeRefPoint() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeAffiliationInfo() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeAwards() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeAward() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeMultimediaDescriptions() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeMultimediaDescription() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeTextItems() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeTextItem() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeImageItems() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeImageItem() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private bool ShouldSerializeImageFormat() {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
        if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
            this.InitVars();
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
        NewDataSet ds = new NewDataSet();
        global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
        global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
        global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
        any.Namespace = ds.Namespace;
        sequence.Items.Add(any);
        type.Particle = sequence;
        global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
        if (xs.Contains(dsSchema.TargetNamespace)) {
            global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
            global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
            try {
                global::System.Xml.Schema.XmlSchema schema = null;
                dsSchema.Write(s1);
                for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                    schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                    s2.SetLength(0);
                    schema.Write(s2);
                    if ((s1.Length == s2.Length)) {
                        s1.Position = 0;
                        s2.Position = 0;
                        for (; ((s1.Position != s1.Length) 
                                    && (s1.ReadByte() == s2.ReadByte())); ) {
                            ;
                        }
                        if ((s1.Position == s1.Length)) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if ((s1 != null)) {
                    s1.Close();
                }
                if ((s2 != null)) {
                    s2.Close();
                }
            }
        }
        xs.Add(dsSchema);
        return type;
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void TPA_ExtensionsRowChangeEventHandler(object sender, TPA_ExtensionsRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void RoadCrossRowChangeEventHandler(object sender, RoadCrossRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void TPA_ExtensionRowChangeEventHandler(object sender, TPA_ExtensionRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void ThemeCategoryRowChangeEventHandler(object sender, ThemeCategoryRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void ThemeCategoryTypeRowChangeEventHandler(object sender, ThemeCategoryTypeRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void CityImportantMessageRowChangeEventHandler(object sender, CityImportantMessageRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void CityImportantMessageTypeRowChangeEventHandler(object sender, CityImportantMessageTypeRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void DescriptionRowChangeEventHandler(object sender, DescriptionRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void OTA_HotelDescriptiveInfoRSRowChangeEventHandler(object sender, OTA_HotelDescriptiveInfoRSRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void HotelDescriptiveContentsRowChangeEventHandler(object sender, HotelDescriptiveContentsRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void HotelDescriptiveContentRowChangeEventHandler(object sender, HotelDescriptiveContentRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void HotelInfoRowChangeEventHandler(object sender, HotelInfoRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void CategoryCodesRowChangeEventHandler(object sender, CategoryCodesRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void SegmentCategoryRowChangeEventHandler(object sender, SegmentCategoryRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void PositionRowChangeEventHandler(object sender, PositionRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void AddressRowChangeEventHandler(object sender, AddressRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void ZoneRowChangeEventHandler(object sender, ZoneRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void ServicesRowChangeEventHandler(object sender, ServicesRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void ServiceRowChangeEventHandler(object sender, ServiceRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void FacilityInfoRowChangeEventHandler(object sender, FacilityInfoRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void GuestRoomsRowChangeEventHandler(object sender, GuestRoomsRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void GuestRoomRowChangeEventHandler(object sender, GuestRoomRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void TypeRoomRowChangeEventHandler(object sender, TypeRoomRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void AmenitiesRowChangeEventHandler(object sender, AmenitiesRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void AmenityRowChangeEventHandler(object sender, AmenityRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void FeaturesRowChangeEventHandler(object sender, FeaturesRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void FeatureRowChangeEventHandler(object sender, FeatureRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void PoliciesRowChangeEventHandler(object sender, PoliciesRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void PolicyRowChangeEventHandler(object sender, PolicyRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void PolicyInfoCodesRowChangeEventHandler(object sender, PolicyInfoCodesRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void PolicyInfoCodeRowChangeEventHandler(object sender, PolicyInfoCodeRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void PolicyInfoRowChangeEventHandler(object sender, PolicyInfoRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void AreaInfoRowChangeEventHandler(object sender, AreaInfoRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void RefPointsRowChangeEventHandler(object sender, RefPointsRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void RefPointRowChangeEventHandler(object sender, RefPointRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void AffiliationInfoRowChangeEventHandler(object sender, AffiliationInfoRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void AwardsRowChangeEventHandler(object sender, AwardsRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void AwardRowChangeEventHandler(object sender, AwardRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void MultimediaDescriptionsRowChangeEventHandler(object sender, MultimediaDescriptionsRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void MultimediaDescriptionRowChangeEventHandler(object sender, MultimediaDescriptionRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void TextItemsRowChangeEventHandler(object sender, TextItemsRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void TextItemRowChangeEventHandler(object sender, TextItemRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void ImageItemsRowChangeEventHandler(object sender, ImageItemsRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void ImageItemRowChangeEventHandler(object sender, ImageItemRowChangeEvent e);
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public delegate void ImageFormatRowChangeEventHandler(object sender, ImageFormatRowChangeEvent e);
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class TPA_ExtensionsDataTable : global::System.Data.TypedTableBase<TPA_ExtensionsRow> {
        
        private global::System.Data.DataColumn columnInvBlockCode;
        
        private global::System.Data.DataColumn columnRoomquantity;
        
        private global::System.Data.DataColumn columnTPA_Extensions_Id;
        
        private global::System.Data.DataColumn columnAddress_Id;
        
        private global::System.Data.DataColumn columnGuestRoom_Id;
        
        private global::System.Data.DataColumn columnImageItem_Id;
        
        private global::System.Data.DataColumn columnHotelDescriptiveContent_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsDataTable() {
            this.TableName = "TPA_Extensions";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TPA_ExtensionsDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TPA_ExtensionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn InvBlockCodeColumn {
            get {
                return this.columnInvBlockCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RoomquantityColumn {
            get {
                return this.columnRoomquantity;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TPA_Extensions_IdColumn {
            get {
                return this.columnTPA_Extensions_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Address_IdColumn {
            get {
                return this.columnAddress_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn GuestRoom_IdColumn {
            get {
                return this.columnGuestRoom_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ImageItem_IdColumn {
            get {
                return this.columnImageItem_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelDescriptiveContent_IdColumn {
            get {
                return this.columnHotelDescriptiveContent_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow this[int index] {
            get {
                return ((TPA_ExtensionsRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TPA_ExtensionsRowChangeEventHandler TPA_ExtensionsRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TPA_ExtensionsRowChangeEventHandler TPA_ExtensionsRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TPA_ExtensionsRowChangeEventHandler TPA_ExtensionsRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TPA_ExtensionsRowChangeEventHandler TPA_ExtensionsRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddTPA_ExtensionsRow(TPA_ExtensionsRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow AddTPA_ExtensionsRow(string InvBlockCode, string Roomquantity, AddressRow parentAddressRowByAddress_TPA_Extensions, GuestRoomRow parentGuestRoomRowByGuestRoom_TPA_Extensions, ImageItemRow parentImageItemRowByImageItem_TPA_Extensions, HotelDescriptiveContentRow parentHotelDescriptiveContentRowByHotelDescriptiveContent_TPA_Extensions) {
            TPA_ExtensionsRow rowTPA_ExtensionsRow = ((TPA_ExtensionsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    InvBlockCode,
                    Roomquantity,
                    null,
                    null,
                    null,
                    null,
                    null};
            if ((parentAddressRowByAddress_TPA_Extensions != null)) {
                columnValuesArray[3] = parentAddressRowByAddress_TPA_Extensions[3];
            }
            if ((parentGuestRoomRowByGuestRoom_TPA_Extensions != null)) {
                columnValuesArray[4] = parentGuestRoomRowByGuestRoom_TPA_Extensions[1];
            }
            if ((parentImageItemRowByImageItem_TPA_Extensions != null)) {
                columnValuesArray[5] = parentImageItemRowByImageItem_TPA_Extensions[1];
            }
            if ((parentHotelDescriptiveContentRowByHotelDescriptiveContent_TPA_Extensions != null)) {
                columnValuesArray[6] = parentHotelDescriptiveContentRowByHotelDescriptiveContent_TPA_Extensions[5];
            }
            rowTPA_ExtensionsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowTPA_ExtensionsRow);
            return rowTPA_ExtensionsRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            TPA_ExtensionsDataTable cln = ((TPA_ExtensionsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new TPA_ExtensionsDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnInvBlockCode = base.Columns["InvBlockCode"];
            this.columnRoomquantity = base.Columns["Roomquantity"];
            this.columnTPA_Extensions_Id = base.Columns["TPA_Extensions_Id"];
            this.columnAddress_Id = base.Columns["Address_Id"];
            this.columnGuestRoom_Id = base.Columns["GuestRoom_Id"];
            this.columnImageItem_Id = base.Columns["ImageItem_Id"];
            this.columnHotelDescriptiveContent_Id = base.Columns["HotelDescriptiveContent_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnInvBlockCode = new global::System.Data.DataColumn("InvBlockCode", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnInvBlockCode);
            this.columnRoomquantity = new global::System.Data.DataColumn("Roomquantity", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnRoomquantity);
            this.columnTPA_Extensions_Id = new global::System.Data.DataColumn("TPA_Extensions_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnTPA_Extensions_Id);
            this.columnAddress_Id = new global::System.Data.DataColumn("Address_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnAddress_Id);
            this.columnGuestRoom_Id = new global::System.Data.DataColumn("GuestRoom_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnGuestRoom_Id);
            this.columnImageItem_Id = new global::System.Data.DataColumn("ImageItem_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnImageItem_Id);
            this.columnHotelDescriptiveContent_Id = new global::System.Data.DataColumn("HotelDescriptiveContent_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelDescriptiveContent_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnTPA_Extensions_Id}, true));
            this.columnTPA_Extensions_Id.AutoIncrement = true;
            this.columnTPA_Extensions_Id.AllowDBNull = false;
            this.columnTPA_Extensions_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow NewTPA_ExtensionsRow() {
            return ((TPA_ExtensionsRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new TPA_ExtensionsRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(TPA_ExtensionsRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.TPA_ExtensionsRowChanged != null)) {
                this.TPA_ExtensionsRowChanged(this, new TPA_ExtensionsRowChangeEvent(((TPA_ExtensionsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.TPA_ExtensionsRowChanging != null)) {
                this.TPA_ExtensionsRowChanging(this, new TPA_ExtensionsRowChangeEvent(((TPA_ExtensionsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.TPA_ExtensionsRowDeleted != null)) {
                this.TPA_ExtensionsRowDeleted(this, new TPA_ExtensionsRowChangeEvent(((TPA_ExtensionsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.TPA_ExtensionsRowDeleting != null)) {
                this.TPA_ExtensionsRowDeleting(this, new TPA_ExtensionsRowChangeEvent(((TPA_ExtensionsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveTPA_ExtensionsRow(TPA_ExtensionsRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "TPA_ExtensionsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class RoadCrossDataTable : global::System.Data.TypedTableBase<RoadCrossRow> {
        
        private global::System.Data.DataColumn columnDescriptionText;
        
        private global::System.Data.DataColumn columnTPA_Extensions_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RoadCrossDataTable() {
            this.TableName = "RoadCross";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RoadCrossDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RoadCrossDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DescriptionTextColumn {
            get {
                return this.columnDescriptionText;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TPA_Extensions_IdColumn {
            get {
                return this.columnTPA_Extensions_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RoadCrossRow this[int index] {
            get {
                return ((RoadCrossRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RoadCrossRowChangeEventHandler RoadCrossRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RoadCrossRowChangeEventHandler RoadCrossRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RoadCrossRowChangeEventHandler RoadCrossRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RoadCrossRowChangeEventHandler RoadCrossRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddRoadCrossRow(RoadCrossRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RoadCrossRow AddRoadCrossRow(string DescriptionText, TPA_ExtensionsRow parentTPA_ExtensionsRowByTPA_Extensions_RoadCross) {
            RoadCrossRow rowRoadCrossRow = ((RoadCrossRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    DescriptionText,
                    null};
            if ((parentTPA_ExtensionsRowByTPA_Extensions_RoadCross != null)) {
                columnValuesArray[1] = parentTPA_ExtensionsRowByTPA_Extensions_RoadCross[2];
            }
            rowRoadCrossRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowRoadCrossRow);
            return rowRoadCrossRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            RoadCrossDataTable cln = ((RoadCrossDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new RoadCrossDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnDescriptionText = base.Columns["DescriptionText"];
            this.columnTPA_Extensions_Id = base.Columns["TPA_Extensions_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnDescriptionText = new global::System.Data.DataColumn("DescriptionText", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnDescriptionText);
            this.columnTPA_Extensions_Id = new global::System.Data.DataColumn("TPA_Extensions_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnTPA_Extensions_Id);
            this.columnDescriptionText.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RoadCrossRow NewRoadCrossRow() {
            return ((RoadCrossRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new RoadCrossRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(RoadCrossRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.RoadCrossRowChanged != null)) {
                this.RoadCrossRowChanged(this, new RoadCrossRowChangeEvent(((RoadCrossRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.RoadCrossRowChanging != null)) {
                this.RoadCrossRowChanging(this, new RoadCrossRowChangeEvent(((RoadCrossRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.RoadCrossRowDeleted != null)) {
                this.RoadCrossRowDeleted(this, new RoadCrossRowChangeEvent(((RoadCrossRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.RoadCrossRowDeleting != null)) {
                this.RoadCrossRowDeleting(this, new RoadCrossRowChangeEvent(((RoadCrossRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveRoadCrossRow(RoadCrossRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "RoadCrossDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class TPA_ExtensionDataTable : global::System.Data.TypedTableBase<TPA_ExtensionRow> {
        
        private global::System.Data.DataColumn columnFacilityName;
        
        private global::System.Data.DataColumn columnFTypeName;
        
        private global::System.Data.DataColumn columnFacilityValue;
        
        private global::System.Data.DataColumn columnTPA_Extensions_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionDataTable() {
            this.TableName = "TPA_Extension";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TPA_ExtensionDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TPA_ExtensionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FacilityNameColumn {
            get {
                return this.columnFacilityName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FTypeNameColumn {
            get {
                return this.columnFTypeName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FacilityValueColumn {
            get {
                return this.columnFacilityValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TPA_Extensions_IdColumn {
            get {
                return this.columnTPA_Extensions_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionRow this[int index] {
            get {
                return ((TPA_ExtensionRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TPA_ExtensionRowChangeEventHandler TPA_ExtensionRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TPA_ExtensionRowChangeEventHandler TPA_ExtensionRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TPA_ExtensionRowChangeEventHandler TPA_ExtensionRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TPA_ExtensionRowChangeEventHandler TPA_ExtensionRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddTPA_ExtensionRow(TPA_ExtensionRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionRow AddTPA_ExtensionRow(string FacilityName, string FTypeName, string FacilityValue, TPA_ExtensionsRow parentTPA_ExtensionsRowByTPA_Extensions_TPA_Extension) {
            TPA_ExtensionRow rowTPA_ExtensionRow = ((TPA_ExtensionRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    FacilityName,
                    FTypeName,
                    FacilityValue,
                    null};
            if ((parentTPA_ExtensionsRowByTPA_Extensions_TPA_Extension != null)) {
                columnValuesArray[3] = parentTPA_ExtensionsRowByTPA_Extensions_TPA_Extension[2];
            }
            rowTPA_ExtensionRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowTPA_ExtensionRow);
            return rowTPA_ExtensionRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            TPA_ExtensionDataTable cln = ((TPA_ExtensionDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new TPA_ExtensionDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnFacilityName = base.Columns["FacilityName"];
            this.columnFTypeName = base.Columns["FTypeName"];
            this.columnFacilityValue = base.Columns["FacilityValue"];
            this.columnTPA_Extensions_Id = base.Columns["TPA_Extensions_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnFacilityName = new global::System.Data.DataColumn("FacilityName", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFacilityName);
            this.columnFTypeName = new global::System.Data.DataColumn("FTypeName", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFTypeName);
            this.columnFacilityValue = new global::System.Data.DataColumn("FacilityValue", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFacilityValue);
            this.columnTPA_Extensions_Id = new global::System.Data.DataColumn("TPA_Extensions_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnTPA_Extensions_Id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionRow NewTPA_ExtensionRow() {
            return ((TPA_ExtensionRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new TPA_ExtensionRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(TPA_ExtensionRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.TPA_ExtensionRowChanged != null)) {
                this.TPA_ExtensionRowChanged(this, new TPA_ExtensionRowChangeEvent(((TPA_ExtensionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.TPA_ExtensionRowChanging != null)) {
                this.TPA_ExtensionRowChanging(this, new TPA_ExtensionRowChangeEvent(((TPA_ExtensionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.TPA_ExtensionRowDeleted != null)) {
                this.TPA_ExtensionRowDeleted(this, new TPA_ExtensionRowChangeEvent(((TPA_ExtensionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.TPA_ExtensionRowDeleting != null)) {
                this.TPA_ExtensionRowDeleting(this, new TPA_ExtensionRowChangeEvent(((TPA_ExtensionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveTPA_ExtensionRow(TPA_ExtensionRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "TPA_ExtensionDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ThemeCategoryDataTable : global::System.Data.TypedTableBase<ThemeCategoryRow> {
        
        private global::System.Data.DataColumn columnThemeCategory_Id;
        
        private global::System.Data.DataColumn columnTPA_Extensions_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryDataTable() {
            this.TableName = "ThemeCategory";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ThemeCategoryDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ThemeCategoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ThemeCategory_IdColumn {
            get {
                return this.columnThemeCategory_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TPA_Extensions_IdColumn {
            get {
                return this.columnTPA_Extensions_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryRow this[int index] {
            get {
                return ((ThemeCategoryRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ThemeCategoryRowChangeEventHandler ThemeCategoryRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ThemeCategoryRowChangeEventHandler ThemeCategoryRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ThemeCategoryRowChangeEventHandler ThemeCategoryRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ThemeCategoryRowChangeEventHandler ThemeCategoryRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddThemeCategoryRow(ThemeCategoryRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryRow AddThemeCategoryRow(TPA_ExtensionsRow parentTPA_ExtensionsRowByTPA_Extensions_ThemeCategory) {
            ThemeCategoryRow rowThemeCategoryRow = ((ThemeCategoryRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentTPA_ExtensionsRowByTPA_Extensions_ThemeCategory != null)) {
                columnValuesArray[1] = parentTPA_ExtensionsRowByTPA_Extensions_ThemeCategory[2];
            }
            rowThemeCategoryRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowThemeCategoryRow);
            return rowThemeCategoryRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            ThemeCategoryDataTable cln = ((ThemeCategoryDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new ThemeCategoryDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnThemeCategory_Id = base.Columns["ThemeCategory_Id"];
            this.columnTPA_Extensions_Id = base.Columns["TPA_Extensions_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnThemeCategory_Id = new global::System.Data.DataColumn("ThemeCategory_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnThemeCategory_Id);
            this.columnTPA_Extensions_Id = new global::System.Data.DataColumn("TPA_Extensions_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnTPA_Extensions_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnThemeCategory_Id}, true));
            this.columnThemeCategory_Id.AutoIncrement = true;
            this.columnThemeCategory_Id.AllowDBNull = false;
            this.columnThemeCategory_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryRow NewThemeCategoryRow() {
            return ((ThemeCategoryRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new ThemeCategoryRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(ThemeCategoryRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.ThemeCategoryRowChanged != null)) {
                this.ThemeCategoryRowChanged(this, new ThemeCategoryRowChangeEvent(((ThemeCategoryRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.ThemeCategoryRowChanging != null)) {
                this.ThemeCategoryRowChanging(this, new ThemeCategoryRowChangeEvent(((ThemeCategoryRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.ThemeCategoryRowDeleted != null)) {
                this.ThemeCategoryRowDeleted(this, new ThemeCategoryRowChangeEvent(((ThemeCategoryRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.ThemeCategoryRowDeleting != null)) {
                this.ThemeCategoryRowDeleting(this, new ThemeCategoryRowChangeEvent(((ThemeCategoryRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveThemeCategoryRow(ThemeCategoryRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ThemeCategoryDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ThemeCategoryTypeDataTable : global::System.Data.TypedTableBase<ThemeCategoryTypeRow> {
        
        private global::System.Data.DataColumn columnCode;
        
        private global::System.Data.DataColumn columnThemeCategory_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryTypeDataTable() {
            this.TableName = "ThemeCategoryType";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ThemeCategoryTypeDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ThemeCategoryTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CodeColumn {
            get {
                return this.columnCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ThemeCategory_IdColumn {
            get {
                return this.columnThemeCategory_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryTypeRow this[int index] {
            get {
                return ((ThemeCategoryTypeRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ThemeCategoryTypeRowChangeEventHandler ThemeCategoryTypeRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ThemeCategoryTypeRowChangeEventHandler ThemeCategoryTypeRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ThemeCategoryTypeRowChangeEventHandler ThemeCategoryTypeRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ThemeCategoryTypeRowChangeEventHandler ThemeCategoryTypeRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddThemeCategoryTypeRow(ThemeCategoryTypeRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryTypeRow AddThemeCategoryTypeRow(string Code, ThemeCategoryRow parentThemeCategoryRowByThemeCategory_ThemeCategoryType) {
            ThemeCategoryTypeRow rowThemeCategoryTypeRow = ((ThemeCategoryTypeRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    Code,
                    null};
            if ((parentThemeCategoryRowByThemeCategory_ThemeCategoryType != null)) {
                columnValuesArray[1] = parentThemeCategoryRowByThemeCategory_ThemeCategoryType[0];
            }
            rowThemeCategoryTypeRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowThemeCategoryTypeRow);
            return rowThemeCategoryTypeRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            ThemeCategoryTypeDataTable cln = ((ThemeCategoryTypeDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new ThemeCategoryTypeDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnCode = base.Columns["Code"];
            this.columnThemeCategory_Id = base.Columns["ThemeCategory_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnCode);
            this.columnThemeCategory_Id = new global::System.Data.DataColumn("ThemeCategory_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnThemeCategory_Id);
            this.columnCode.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryTypeRow NewThemeCategoryTypeRow() {
            return ((ThemeCategoryTypeRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new ThemeCategoryTypeRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(ThemeCategoryTypeRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.ThemeCategoryTypeRowChanged != null)) {
                this.ThemeCategoryTypeRowChanged(this, new ThemeCategoryTypeRowChangeEvent(((ThemeCategoryTypeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.ThemeCategoryTypeRowChanging != null)) {
                this.ThemeCategoryTypeRowChanging(this, new ThemeCategoryTypeRowChangeEvent(((ThemeCategoryTypeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.ThemeCategoryTypeRowDeleted != null)) {
                this.ThemeCategoryTypeRowDeleted(this, new ThemeCategoryTypeRowChangeEvent(((ThemeCategoryTypeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.ThemeCategoryTypeRowDeleting != null)) {
                this.ThemeCategoryTypeRowDeleting(this, new ThemeCategoryTypeRowChangeEvent(((ThemeCategoryTypeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveThemeCategoryTypeRow(ThemeCategoryTypeRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ThemeCategoryTypeDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class CityImportantMessageDataTable : global::System.Data.TypedTableBase<CityImportantMessageRow> {
        
        private global::System.Data.DataColumn columnCityImportantMessage_Id;
        
        private global::System.Data.DataColumn columnTPA_Extensions_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageDataTable() {
            this.TableName = "CityImportantMessage";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal CityImportantMessageDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected CityImportantMessageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CityImportantMessage_IdColumn {
            get {
                return this.columnCityImportantMessage_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TPA_Extensions_IdColumn {
            get {
                return this.columnTPA_Extensions_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageRow this[int index] {
            get {
                return ((CityImportantMessageRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CityImportantMessageRowChangeEventHandler CityImportantMessageRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CityImportantMessageRowChangeEventHandler CityImportantMessageRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CityImportantMessageRowChangeEventHandler CityImportantMessageRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CityImportantMessageRowChangeEventHandler CityImportantMessageRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddCityImportantMessageRow(CityImportantMessageRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageRow AddCityImportantMessageRow(TPA_ExtensionsRow parentTPA_ExtensionsRowByTPA_Extensions_CityImportantMessage) {
            CityImportantMessageRow rowCityImportantMessageRow = ((CityImportantMessageRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentTPA_ExtensionsRowByTPA_Extensions_CityImportantMessage != null)) {
                columnValuesArray[1] = parentTPA_ExtensionsRowByTPA_Extensions_CityImportantMessage[2];
            }
            rowCityImportantMessageRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowCityImportantMessageRow);
            return rowCityImportantMessageRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            CityImportantMessageDataTable cln = ((CityImportantMessageDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new CityImportantMessageDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnCityImportantMessage_Id = base.Columns["CityImportantMessage_Id"];
            this.columnTPA_Extensions_Id = base.Columns["TPA_Extensions_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnCityImportantMessage_Id = new global::System.Data.DataColumn("CityImportantMessage_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnCityImportantMessage_Id);
            this.columnTPA_Extensions_Id = new global::System.Data.DataColumn("TPA_Extensions_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnTPA_Extensions_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnCityImportantMessage_Id}, true));
            this.columnCityImportantMessage_Id.AutoIncrement = true;
            this.columnCityImportantMessage_Id.AllowDBNull = false;
            this.columnCityImportantMessage_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageRow NewCityImportantMessageRow() {
            return ((CityImportantMessageRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new CityImportantMessageRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(CityImportantMessageRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.CityImportantMessageRowChanged != null)) {
                this.CityImportantMessageRowChanged(this, new CityImportantMessageRowChangeEvent(((CityImportantMessageRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.CityImportantMessageRowChanging != null)) {
                this.CityImportantMessageRowChanging(this, new CityImportantMessageRowChangeEvent(((CityImportantMessageRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.CityImportantMessageRowDeleted != null)) {
                this.CityImportantMessageRowDeleted(this, new CityImportantMessageRowChangeEvent(((CityImportantMessageRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.CityImportantMessageRowDeleting != null)) {
                this.CityImportantMessageRowDeleting(this, new CityImportantMessageRowChangeEvent(((CityImportantMessageRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveCityImportantMessageRow(CityImportantMessageRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "CityImportantMessageDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class CityImportantMessageTypeDataTable : global::System.Data.TypedTableBase<CityImportantMessageTypeRow> {
        
        private global::System.Data.DataColumn columnMessageContent;
        
        private global::System.Data.DataColumn columnStartDate;
        
        private global::System.Data.DataColumn columnEndDate;
        
        private global::System.Data.DataColumn columnCityImportantMessage_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageTypeDataTable() {
            this.TableName = "CityImportantMessageType";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal CityImportantMessageTypeDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected CityImportantMessageTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MessageContentColumn {
            get {
                return this.columnMessageContent;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn StartDateColumn {
            get {
                return this.columnStartDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn EndDateColumn {
            get {
                return this.columnEndDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CityImportantMessage_IdColumn {
            get {
                return this.columnCityImportantMessage_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageTypeRow this[int index] {
            get {
                return ((CityImportantMessageTypeRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CityImportantMessageTypeRowChangeEventHandler CityImportantMessageTypeRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CityImportantMessageTypeRowChangeEventHandler CityImportantMessageTypeRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CityImportantMessageTypeRowChangeEventHandler CityImportantMessageTypeRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CityImportantMessageTypeRowChangeEventHandler CityImportantMessageTypeRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddCityImportantMessageTypeRow(CityImportantMessageTypeRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageTypeRow AddCityImportantMessageTypeRow(string MessageContent, string StartDate, string EndDate, CityImportantMessageRow parentCityImportantMessageRowByCityImportantMessage_CityImportantMessageType) {
            CityImportantMessageTypeRow rowCityImportantMessageTypeRow = ((CityImportantMessageTypeRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    MessageContent,
                    StartDate,
                    EndDate,
                    null};
            if ((parentCityImportantMessageRowByCityImportantMessage_CityImportantMessageType != null)) {
                columnValuesArray[3] = parentCityImportantMessageRowByCityImportantMessage_CityImportantMessageType[0];
            }
            rowCityImportantMessageTypeRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowCityImportantMessageTypeRow);
            return rowCityImportantMessageTypeRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            CityImportantMessageTypeDataTable cln = ((CityImportantMessageTypeDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new CityImportantMessageTypeDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnMessageContent = base.Columns["MessageContent"];
            this.columnStartDate = base.Columns["StartDate"];
            this.columnEndDate = base.Columns["EndDate"];
            this.columnCityImportantMessage_Id = base.Columns["CityImportantMessage_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnMessageContent = new global::System.Data.DataColumn("MessageContent", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnMessageContent);
            this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnStartDate);
            this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnEndDate);
            this.columnCityImportantMessage_Id = new global::System.Data.DataColumn("CityImportantMessage_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnCityImportantMessage_Id);
            this.columnStartDate.Namespace = "";
            this.columnEndDate.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageTypeRow NewCityImportantMessageTypeRow() {
            return ((CityImportantMessageTypeRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new CityImportantMessageTypeRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(CityImportantMessageTypeRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.CityImportantMessageTypeRowChanged != null)) {
                this.CityImportantMessageTypeRowChanged(this, new CityImportantMessageTypeRowChangeEvent(((CityImportantMessageTypeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.CityImportantMessageTypeRowChanging != null)) {
                this.CityImportantMessageTypeRowChanging(this, new CityImportantMessageTypeRowChangeEvent(((CityImportantMessageTypeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.CityImportantMessageTypeRowDeleted != null)) {
                this.CityImportantMessageTypeRowDeleted(this, new CityImportantMessageTypeRowChangeEvent(((CityImportantMessageTypeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.CityImportantMessageTypeRowDeleting != null)) {
                this.CityImportantMessageTypeRowDeleting(this, new CityImportantMessageTypeRowChangeEvent(((CityImportantMessageTypeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveCityImportantMessageTypeRow(CityImportantMessageTypeRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "CityImportantMessageTypeDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class DescriptionDataTable : global::System.Data.TypedTableBase<DescriptionRow> {
        
        private global::System.Data.DataColumn columnText;
        
        private global::System.Data.DataColumn columnName;
        
        private global::System.Data.DataColumn columnCaption;
        
        private global::System.Data.DataColumn columnPolicyInfoCode_Id;
        
        private global::System.Data.DataColumn columnImageItem_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DescriptionDataTable() {
            this.TableName = "Description";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal DescriptionDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DescriptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TextColumn {
            get {
                return this.columnText;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NameColumn {
            get {
                return this.columnName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CaptionColumn {
            get {
                return this.columnCaption;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PolicyInfoCode_IdColumn {
            get {
                return this.columnPolicyInfoCode_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ImageItem_IdColumn {
            get {
                return this.columnImageItem_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DescriptionRow this[int index] {
            get {
                return ((DescriptionRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DescriptionRowChangeEventHandler DescriptionRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DescriptionRowChangeEventHandler DescriptionRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DescriptionRowChangeEventHandler DescriptionRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event DescriptionRowChangeEventHandler DescriptionRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddDescriptionRow(DescriptionRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DescriptionRow AddDescriptionRow(string Text, string Name, string Caption, PolicyInfoCodeRow parentPolicyInfoCodeRowByPolicyInfoCode_Description, ImageItemRow parentImageItemRowByImageItem_Description) {
            DescriptionRow rowDescriptionRow = ((DescriptionRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    Text,
                    Name,
                    Caption,
                    null,
                    null};
            if ((parentPolicyInfoCodeRowByPolicyInfoCode_Description != null)) {
                columnValuesArray[3] = parentPolicyInfoCodeRowByPolicyInfoCode_Description[1];
            }
            if ((parentImageItemRowByImageItem_Description != null)) {
                columnValuesArray[4] = parentImageItemRowByImageItem_Description[1];
            }
            rowDescriptionRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowDescriptionRow);
            return rowDescriptionRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            DescriptionDataTable cln = ((DescriptionDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new DescriptionDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnText = base.Columns["Text"];
            this.columnName = base.Columns["Name"];
            this.columnCaption = base.Columns["Caption"];
            this.columnPolicyInfoCode_Id = base.Columns["PolicyInfoCode_Id"];
            this.columnImageItem_Id = base.Columns["ImageItem_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnText = new global::System.Data.DataColumn("Text", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnText);
            this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnName);
            this.columnCaption = new global::System.Data.DataColumn("Caption", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnCaption);
            this.columnPolicyInfoCode_Id = new global::System.Data.DataColumn("PolicyInfoCode_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnPolicyInfoCode_Id);
            this.columnImageItem_Id = new global::System.Data.DataColumn("ImageItem_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnImageItem_Id);
            this.columnName.Namespace = "";
            this.columnCaption.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DescriptionRow NewDescriptionRow() {
            return ((DescriptionRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new DescriptionRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(DescriptionRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.DescriptionRowChanged != null)) {
                this.DescriptionRowChanged(this, new DescriptionRowChangeEvent(((DescriptionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.DescriptionRowChanging != null)) {
                this.DescriptionRowChanging(this, new DescriptionRowChangeEvent(((DescriptionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.DescriptionRowDeleted != null)) {
                this.DescriptionRowDeleted(this, new DescriptionRowChangeEvent(((DescriptionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.DescriptionRowDeleting != null)) {
                this.DescriptionRowDeleting(this, new DescriptionRowChangeEvent(((DescriptionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveDescriptionRow(DescriptionRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "DescriptionDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class OTA_HotelDescriptiveInfoRSDataTable : global::System.Data.TypedTableBase<OTA_HotelDescriptiveInfoRSRow> {
        
        private global::System.Data.DataColumn columnTimeStamp;
        
        private global::System.Data.DataColumn columnSuccess;
        
        private global::System.Data.DataColumn columnVersion;
        
        private global::System.Data.DataColumn columnPrimaryLangID;
        
        private global::System.Data.DataColumn columnOTA_HotelDescriptiveInfoRS_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OTA_HotelDescriptiveInfoRSDataTable() {
            this.TableName = "OTA_HotelDescriptiveInfoRS";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal OTA_HotelDescriptiveInfoRSDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected OTA_HotelDescriptiveInfoRSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TimeStampColumn {
            get {
                return this.columnTimeStamp;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn SuccessColumn {
            get {
                return this.columnSuccess;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn VersionColumn {
            get {
                return this.columnVersion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PrimaryLangIDColumn {
            get {
                return this.columnPrimaryLangID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn OTA_HotelDescriptiveInfoRS_IdColumn {
            get {
                return this.columnOTA_HotelDescriptiveInfoRS_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OTA_HotelDescriptiveInfoRSRow this[int index] {
            get {
                return ((OTA_HotelDescriptiveInfoRSRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event OTA_HotelDescriptiveInfoRSRowChangeEventHandler OTA_HotelDescriptiveInfoRSRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event OTA_HotelDescriptiveInfoRSRowChangeEventHandler OTA_HotelDescriptiveInfoRSRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event OTA_HotelDescriptiveInfoRSRowChangeEventHandler OTA_HotelDescriptiveInfoRSRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event OTA_HotelDescriptiveInfoRSRowChangeEventHandler OTA_HotelDescriptiveInfoRSRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddOTA_HotelDescriptiveInfoRSRow(OTA_HotelDescriptiveInfoRSRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OTA_HotelDescriptiveInfoRSRow AddOTA_HotelDescriptiveInfoRSRow(string TimeStamp, string Success, string Version, string PrimaryLangID) {
            OTA_HotelDescriptiveInfoRSRow rowOTA_HotelDescriptiveInfoRSRow = ((OTA_HotelDescriptiveInfoRSRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    TimeStamp,
                    Success,
                    Version,
                    PrimaryLangID,
                    null};
            rowOTA_HotelDescriptiveInfoRSRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowOTA_HotelDescriptiveInfoRSRow);
            return rowOTA_HotelDescriptiveInfoRSRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            OTA_HotelDescriptiveInfoRSDataTable cln = ((OTA_HotelDescriptiveInfoRSDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new OTA_HotelDescriptiveInfoRSDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnTimeStamp = base.Columns["TimeStamp"];
            this.columnSuccess = base.Columns["Success"];
            this.columnVersion = base.Columns["Version"];
            this.columnPrimaryLangID = base.Columns["PrimaryLangID"];
            this.columnOTA_HotelDescriptiveInfoRS_Id = base.Columns["OTA_HotelDescriptiveInfoRS_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnTimeStamp = new global::System.Data.DataColumn("TimeStamp", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnTimeStamp);
            this.columnSuccess = new global::System.Data.DataColumn("Success", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnSuccess);
            this.columnVersion = new global::System.Data.DataColumn("Version", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnVersion);
            this.columnPrimaryLangID = new global::System.Data.DataColumn("PrimaryLangID", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnPrimaryLangID);
            this.columnOTA_HotelDescriptiveInfoRS_Id = new global::System.Data.DataColumn("OTA_HotelDescriptiveInfoRS_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnOTA_HotelDescriptiveInfoRS_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnOTA_HotelDescriptiveInfoRS_Id}, true));
            this.columnTimeStamp.Namespace = "";
            this.columnVersion.Namespace = "";
            this.columnPrimaryLangID.Namespace = "";
            this.columnOTA_HotelDescriptiveInfoRS_Id.AutoIncrement = true;
            this.columnOTA_HotelDescriptiveInfoRS_Id.AllowDBNull = false;
            this.columnOTA_HotelDescriptiveInfoRS_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OTA_HotelDescriptiveInfoRSRow NewOTA_HotelDescriptiveInfoRSRow() {
            return ((OTA_HotelDescriptiveInfoRSRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new OTA_HotelDescriptiveInfoRSRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(OTA_HotelDescriptiveInfoRSRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.OTA_HotelDescriptiveInfoRSRowChanged != null)) {
                this.OTA_HotelDescriptiveInfoRSRowChanged(this, new OTA_HotelDescriptiveInfoRSRowChangeEvent(((OTA_HotelDescriptiveInfoRSRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.OTA_HotelDescriptiveInfoRSRowChanging != null)) {
                this.OTA_HotelDescriptiveInfoRSRowChanging(this, new OTA_HotelDescriptiveInfoRSRowChangeEvent(((OTA_HotelDescriptiveInfoRSRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.OTA_HotelDescriptiveInfoRSRowDeleted != null)) {
                this.OTA_HotelDescriptiveInfoRSRowDeleted(this, new OTA_HotelDescriptiveInfoRSRowChangeEvent(((OTA_HotelDescriptiveInfoRSRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.OTA_HotelDescriptiveInfoRSRowDeleting != null)) {
                this.OTA_HotelDescriptiveInfoRSRowDeleting(this, new OTA_HotelDescriptiveInfoRSRowChangeEvent(((OTA_HotelDescriptiveInfoRSRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveOTA_HotelDescriptiveInfoRSRow(OTA_HotelDescriptiveInfoRSRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "OTA_HotelDescriptiveInfoRSDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class HotelDescriptiveContentsDataTable : global::System.Data.TypedTableBase<HotelDescriptiveContentsRow> {
        
        private global::System.Data.DataColumn columnHotelDescriptiveContents_Id;
        
        private global::System.Data.DataColumn columnOTA_HotelDescriptiveInfoRS_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentsDataTable() {
            this.TableName = "HotelDescriptiveContents";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal HotelDescriptiveContentsDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected HotelDescriptiveContentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelDescriptiveContents_IdColumn {
            get {
                return this.columnHotelDescriptiveContents_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn OTA_HotelDescriptiveInfoRS_IdColumn {
            get {
                return this.columnOTA_HotelDescriptiveInfoRS_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentsRow this[int index] {
            get {
                return ((HotelDescriptiveContentsRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelDescriptiveContentsRowChangeEventHandler HotelDescriptiveContentsRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelDescriptiveContentsRowChangeEventHandler HotelDescriptiveContentsRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelDescriptiveContentsRowChangeEventHandler HotelDescriptiveContentsRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelDescriptiveContentsRowChangeEventHandler HotelDescriptiveContentsRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddHotelDescriptiveContentsRow(HotelDescriptiveContentsRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentsRow AddHotelDescriptiveContentsRow(OTA_HotelDescriptiveInfoRSRow parentOTA_HotelDescriptiveInfoRSRowByOTA_HotelDescriptiveInfoRS_HotelDescriptiveContents) {
            HotelDescriptiveContentsRow rowHotelDescriptiveContentsRow = ((HotelDescriptiveContentsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentOTA_HotelDescriptiveInfoRSRowByOTA_HotelDescriptiveInfoRS_HotelDescriptiveContents != null)) {
                columnValuesArray[1] = parentOTA_HotelDescriptiveInfoRSRowByOTA_HotelDescriptiveInfoRS_HotelDescriptiveContents[4];
            }
            rowHotelDescriptiveContentsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowHotelDescriptiveContentsRow);
            return rowHotelDescriptiveContentsRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            HotelDescriptiveContentsDataTable cln = ((HotelDescriptiveContentsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new HotelDescriptiveContentsDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnHotelDescriptiveContents_Id = base.Columns["HotelDescriptiveContents_Id"];
            this.columnOTA_HotelDescriptiveInfoRS_Id = base.Columns["OTA_HotelDescriptiveInfoRS_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnHotelDescriptiveContents_Id = new global::System.Data.DataColumn("HotelDescriptiveContents_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelDescriptiveContents_Id);
            this.columnOTA_HotelDescriptiveInfoRS_Id = new global::System.Data.DataColumn("OTA_HotelDescriptiveInfoRS_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnOTA_HotelDescriptiveInfoRS_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnHotelDescriptiveContents_Id}, true));
            this.columnHotelDescriptiveContents_Id.AutoIncrement = true;
            this.columnHotelDescriptiveContents_Id.AllowDBNull = false;
            this.columnHotelDescriptiveContents_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentsRow NewHotelDescriptiveContentsRow() {
            return ((HotelDescriptiveContentsRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new HotelDescriptiveContentsRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(HotelDescriptiveContentsRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.HotelDescriptiveContentsRowChanged != null)) {
                this.HotelDescriptiveContentsRowChanged(this, new HotelDescriptiveContentsRowChangeEvent(((HotelDescriptiveContentsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.HotelDescriptiveContentsRowChanging != null)) {
                this.HotelDescriptiveContentsRowChanging(this, new HotelDescriptiveContentsRowChangeEvent(((HotelDescriptiveContentsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.HotelDescriptiveContentsRowDeleted != null)) {
                this.HotelDescriptiveContentsRowDeleted(this, new HotelDescriptiveContentsRowChangeEvent(((HotelDescriptiveContentsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.HotelDescriptiveContentsRowDeleting != null)) {
                this.HotelDescriptiveContentsRowDeleting(this, new HotelDescriptiveContentsRowChangeEvent(((HotelDescriptiveContentsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveHotelDescriptiveContentsRow(HotelDescriptiveContentsRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "HotelDescriptiveContentsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class HotelDescriptiveContentDataTable : global::System.Data.TypedTableBase<HotelDescriptiveContentRow> {
        
        private global::System.Data.DataColumn columnBrandCode;
        
        private global::System.Data.DataColumn columnHotelCode;
        
        private global::System.Data.DataColumn columnHotelCityCode;
        
        private global::System.Data.DataColumn columnHotelName;
        
        private global::System.Data.DataColumn columnAreaID;
        
        private global::System.Data.DataColumn columnHotelDescriptiveContent_Id;
        
        private global::System.Data.DataColumn columnHotelDescriptiveContents_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentDataTable() {
            this.TableName = "HotelDescriptiveContent";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal HotelDescriptiveContentDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected HotelDescriptiveContentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BrandCodeColumn {
            get {
                return this.columnBrandCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelCodeColumn {
            get {
                return this.columnHotelCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelCityCodeColumn {
            get {
                return this.columnHotelCityCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelNameColumn {
            get {
                return this.columnHotelName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn AreaIDColumn {
            get {
                return this.columnAreaID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelDescriptiveContent_IdColumn {
            get {
                return this.columnHotelDescriptiveContent_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelDescriptiveContents_IdColumn {
            get {
                return this.columnHotelDescriptiveContents_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow this[int index] {
            get {
                return ((HotelDescriptiveContentRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelDescriptiveContentRowChangeEventHandler HotelDescriptiveContentRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelDescriptiveContentRowChangeEventHandler HotelDescriptiveContentRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelDescriptiveContentRowChangeEventHandler HotelDescriptiveContentRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelDescriptiveContentRowChangeEventHandler HotelDescriptiveContentRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddHotelDescriptiveContentRow(HotelDescriptiveContentRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow AddHotelDescriptiveContentRow(string BrandCode, string HotelCode, string HotelCityCode, string HotelName, string AreaID, HotelDescriptiveContentsRow parentHotelDescriptiveContentsRowByHotelDescriptiveContents_HotelDescriptiveContent) {
            HotelDescriptiveContentRow rowHotelDescriptiveContentRow = ((HotelDescriptiveContentRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    BrandCode,
                    HotelCode,
                    HotelCityCode,
                    HotelName,
                    AreaID,
                    null,
                    null};
            if ((parentHotelDescriptiveContentsRowByHotelDescriptiveContents_HotelDescriptiveContent != null)) {
                columnValuesArray[6] = parentHotelDescriptiveContentsRowByHotelDescriptiveContents_HotelDescriptiveContent[0];
            }
            rowHotelDescriptiveContentRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowHotelDescriptiveContentRow);
            return rowHotelDescriptiveContentRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            HotelDescriptiveContentDataTable cln = ((HotelDescriptiveContentDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new HotelDescriptiveContentDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnBrandCode = base.Columns["BrandCode"];
            this.columnHotelCode = base.Columns["HotelCode"];
            this.columnHotelCityCode = base.Columns["HotelCityCode"];
            this.columnHotelName = base.Columns["HotelName"];
            this.columnAreaID = base.Columns["AreaID"];
            this.columnHotelDescriptiveContent_Id = base.Columns["HotelDescriptiveContent_Id"];
            this.columnHotelDescriptiveContents_Id = base.Columns["HotelDescriptiveContents_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnBrandCode = new global::System.Data.DataColumn("BrandCode", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnBrandCode);
            this.columnHotelCode = new global::System.Data.DataColumn("HotelCode", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnHotelCode);
            this.columnHotelCityCode = new global::System.Data.DataColumn("HotelCityCode", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnHotelCityCode);
            this.columnHotelName = new global::System.Data.DataColumn("HotelName", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnHotelName);
            this.columnAreaID = new global::System.Data.DataColumn("AreaID", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnAreaID);
            this.columnHotelDescriptiveContent_Id = new global::System.Data.DataColumn("HotelDescriptiveContent_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelDescriptiveContent_Id);
            this.columnHotelDescriptiveContents_Id = new global::System.Data.DataColumn("HotelDescriptiveContents_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelDescriptiveContents_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnHotelDescriptiveContent_Id}, true));
            this.columnBrandCode.Namespace = "";
            this.columnHotelCode.Namespace = "";
            this.columnHotelCityCode.Namespace = "";
            this.columnHotelName.Namespace = "";
            this.columnAreaID.Namespace = "";
            this.columnHotelDescriptiveContent_Id.AutoIncrement = true;
            this.columnHotelDescriptiveContent_Id.AllowDBNull = false;
            this.columnHotelDescriptiveContent_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow NewHotelDescriptiveContentRow() {
            return ((HotelDescriptiveContentRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new HotelDescriptiveContentRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(HotelDescriptiveContentRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.HotelDescriptiveContentRowChanged != null)) {
                this.HotelDescriptiveContentRowChanged(this, new HotelDescriptiveContentRowChangeEvent(((HotelDescriptiveContentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.HotelDescriptiveContentRowChanging != null)) {
                this.HotelDescriptiveContentRowChanging(this, new HotelDescriptiveContentRowChangeEvent(((HotelDescriptiveContentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.HotelDescriptiveContentRowDeleted != null)) {
                this.HotelDescriptiveContentRowDeleted(this, new HotelDescriptiveContentRowChangeEvent(((HotelDescriptiveContentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.HotelDescriptiveContentRowDeleting != null)) {
                this.HotelDescriptiveContentRowDeleting(this, new HotelDescriptiveContentRowChangeEvent(((HotelDescriptiveContentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveHotelDescriptiveContentRow(HotelDescriptiveContentRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "HotelDescriptiveContentDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class HotelInfoDataTable : global::System.Data.TypedTableBase<HotelInfoRow> {
        
        private global::System.Data.DataColumn columnWhenBuilt;
        
        private global::System.Data.DataColumn columnLastUpdated;
        
        private global::System.Data.DataColumn columnHotelInfo_Id;
        
        private global::System.Data.DataColumn columnHotelDescriptiveContent_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelInfoDataTable() {
            this.TableName = "HotelInfo";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal HotelInfoDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected HotelInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn WhenBuiltColumn {
            get {
                return this.columnWhenBuilt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LastUpdatedColumn {
            get {
                return this.columnLastUpdated;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelInfo_IdColumn {
            get {
                return this.columnHotelInfo_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelDescriptiveContent_IdColumn {
            get {
                return this.columnHotelDescriptiveContent_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelInfoRow this[int index] {
            get {
                return ((HotelInfoRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelInfoRowChangeEventHandler HotelInfoRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelInfoRowChangeEventHandler HotelInfoRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelInfoRowChangeEventHandler HotelInfoRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event HotelInfoRowChangeEventHandler HotelInfoRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddHotelInfoRow(HotelInfoRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelInfoRow AddHotelInfoRow(string WhenBuilt, string LastUpdated, HotelDescriptiveContentRow parentHotelDescriptiveContentRowByHotelDescriptiveContent_HotelInfo) {
            HotelInfoRow rowHotelInfoRow = ((HotelInfoRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    WhenBuilt,
                    LastUpdated,
                    null,
                    null};
            if ((parentHotelDescriptiveContentRowByHotelDescriptiveContent_HotelInfo != null)) {
                columnValuesArray[3] = parentHotelDescriptiveContentRowByHotelDescriptiveContent_HotelInfo[5];
            }
            rowHotelInfoRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowHotelInfoRow);
            return rowHotelInfoRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            HotelInfoDataTable cln = ((HotelInfoDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new HotelInfoDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnWhenBuilt = base.Columns["WhenBuilt"];
            this.columnLastUpdated = base.Columns["LastUpdated"];
            this.columnHotelInfo_Id = base.Columns["HotelInfo_Id"];
            this.columnHotelDescriptiveContent_Id = base.Columns["HotelDescriptiveContent_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnWhenBuilt = new global::System.Data.DataColumn("WhenBuilt", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnWhenBuilt);
            this.columnLastUpdated = new global::System.Data.DataColumn("LastUpdated", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnLastUpdated);
            this.columnHotelInfo_Id = new global::System.Data.DataColumn("HotelInfo_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelInfo_Id);
            this.columnHotelDescriptiveContent_Id = new global::System.Data.DataColumn("HotelDescriptiveContent_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelDescriptiveContent_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnHotelInfo_Id}, true));
            this.columnWhenBuilt.Namespace = "";
            this.columnLastUpdated.Namespace = "";
            this.columnHotelInfo_Id.AutoIncrement = true;
            this.columnHotelInfo_Id.AllowDBNull = false;
            this.columnHotelInfo_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelInfoRow NewHotelInfoRow() {
            return ((HotelInfoRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new HotelInfoRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(HotelInfoRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.HotelInfoRowChanged != null)) {
                this.HotelInfoRowChanged(this, new HotelInfoRowChangeEvent(((HotelInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.HotelInfoRowChanging != null)) {
                this.HotelInfoRowChanging(this, new HotelInfoRowChangeEvent(((HotelInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.HotelInfoRowDeleted != null)) {
                this.HotelInfoRowDeleted(this, new HotelInfoRowChangeEvent(((HotelInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.HotelInfoRowDeleting != null)) {
                this.HotelInfoRowDeleting(this, new HotelInfoRowChangeEvent(((HotelInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveHotelInfoRow(HotelInfoRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "HotelInfoDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class CategoryCodesDataTable : global::System.Data.TypedTableBase<CategoryCodesRow> {
        
        private global::System.Data.DataColumn columnCategoryCodes_Id;
        
        private global::System.Data.DataColumn columnHotelInfo_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CategoryCodesDataTable() {
            this.TableName = "CategoryCodes";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal CategoryCodesDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected CategoryCodesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CategoryCodes_IdColumn {
            get {
                return this.columnCategoryCodes_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelInfo_IdColumn {
            get {
                return this.columnHotelInfo_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CategoryCodesRow this[int index] {
            get {
                return ((CategoryCodesRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CategoryCodesRowChangeEventHandler CategoryCodesRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CategoryCodesRowChangeEventHandler CategoryCodesRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CategoryCodesRowChangeEventHandler CategoryCodesRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event CategoryCodesRowChangeEventHandler CategoryCodesRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddCategoryCodesRow(CategoryCodesRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CategoryCodesRow AddCategoryCodesRow(HotelInfoRow parentHotelInfoRowByHotelInfo_CategoryCodes) {
            CategoryCodesRow rowCategoryCodesRow = ((CategoryCodesRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentHotelInfoRowByHotelInfo_CategoryCodes != null)) {
                columnValuesArray[1] = parentHotelInfoRowByHotelInfo_CategoryCodes[2];
            }
            rowCategoryCodesRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowCategoryCodesRow);
            return rowCategoryCodesRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            CategoryCodesDataTable cln = ((CategoryCodesDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new CategoryCodesDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnCategoryCodes_Id = base.Columns["CategoryCodes_Id"];
            this.columnHotelInfo_Id = base.Columns["HotelInfo_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnCategoryCodes_Id = new global::System.Data.DataColumn("CategoryCodes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnCategoryCodes_Id);
            this.columnHotelInfo_Id = new global::System.Data.DataColumn("HotelInfo_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelInfo_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnCategoryCodes_Id}, true));
            this.columnCategoryCodes_Id.AutoIncrement = true;
            this.columnCategoryCodes_Id.AllowDBNull = false;
            this.columnCategoryCodes_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CategoryCodesRow NewCategoryCodesRow() {
            return ((CategoryCodesRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new CategoryCodesRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(CategoryCodesRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.CategoryCodesRowChanged != null)) {
                this.CategoryCodesRowChanged(this, new CategoryCodesRowChangeEvent(((CategoryCodesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.CategoryCodesRowChanging != null)) {
                this.CategoryCodesRowChanging(this, new CategoryCodesRowChangeEvent(((CategoryCodesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.CategoryCodesRowDeleted != null)) {
                this.CategoryCodesRowDeleted(this, new CategoryCodesRowChangeEvent(((CategoryCodesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.CategoryCodesRowDeleting != null)) {
                this.CategoryCodesRowDeleting(this, new CategoryCodesRowChangeEvent(((CategoryCodesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveCategoryCodesRow(CategoryCodesRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "CategoryCodesDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class SegmentCategoryDataTable : global::System.Data.TypedTableBase<SegmentCategoryRow> {
        
        private global::System.Data.DataColumn columnCode;
        
        private global::System.Data.DataColumn columnCategoryCodes_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SegmentCategoryDataTable() {
            this.TableName = "SegmentCategory";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal SegmentCategoryDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SegmentCategoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CodeColumn {
            get {
                return this.columnCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CategoryCodes_IdColumn {
            get {
                return this.columnCategoryCodes_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SegmentCategoryRow this[int index] {
            get {
                return ((SegmentCategoryRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event SegmentCategoryRowChangeEventHandler SegmentCategoryRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event SegmentCategoryRowChangeEventHandler SegmentCategoryRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event SegmentCategoryRowChangeEventHandler SegmentCategoryRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event SegmentCategoryRowChangeEventHandler SegmentCategoryRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddSegmentCategoryRow(SegmentCategoryRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SegmentCategoryRow AddSegmentCategoryRow(string Code, CategoryCodesRow parentCategoryCodesRowByCategoryCodes_SegmentCategory) {
            SegmentCategoryRow rowSegmentCategoryRow = ((SegmentCategoryRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    Code,
                    null};
            if ((parentCategoryCodesRowByCategoryCodes_SegmentCategory != null)) {
                columnValuesArray[1] = parentCategoryCodesRowByCategoryCodes_SegmentCategory[0];
            }
            rowSegmentCategoryRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowSegmentCategoryRow);
            return rowSegmentCategoryRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            SegmentCategoryDataTable cln = ((SegmentCategoryDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new SegmentCategoryDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnCode = base.Columns["Code"];
            this.columnCategoryCodes_Id = base.Columns["CategoryCodes_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnCode);
            this.columnCategoryCodes_Id = new global::System.Data.DataColumn("CategoryCodes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnCategoryCodes_Id);
            this.columnCode.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SegmentCategoryRow NewSegmentCategoryRow() {
            return ((SegmentCategoryRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new SegmentCategoryRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(SegmentCategoryRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.SegmentCategoryRowChanged != null)) {
                this.SegmentCategoryRowChanged(this, new SegmentCategoryRowChangeEvent(((SegmentCategoryRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.SegmentCategoryRowChanging != null)) {
                this.SegmentCategoryRowChanging(this, new SegmentCategoryRowChangeEvent(((SegmentCategoryRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.SegmentCategoryRowDeleted != null)) {
                this.SegmentCategoryRowDeleted(this, new SegmentCategoryRowChangeEvent(((SegmentCategoryRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.SegmentCategoryRowDeleting != null)) {
                this.SegmentCategoryRowDeleting(this, new SegmentCategoryRowChangeEvent(((SegmentCategoryRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveSegmentCategoryRow(SegmentCategoryRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "SegmentCategoryDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class PositionDataTable : global::System.Data.TypedTableBase<PositionRow> {
        
        private global::System.Data.DataColumn columnLatitude;
        
        private global::System.Data.DataColumn columnLongitude;
        
        private global::System.Data.DataColumn columnPositionTypeCode;
        
        private global::System.Data.DataColumn columnHotelInfo_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PositionDataTable() {
            this.TableName = "Position";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PositionDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected PositionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LatitudeColumn {
            get {
                return this.columnLatitude;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LongitudeColumn {
            get {
                return this.columnLongitude;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PositionTypeCodeColumn {
            get {
                return this.columnPositionTypeCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelInfo_IdColumn {
            get {
                return this.columnHotelInfo_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PositionRow this[int index] {
            get {
                return ((PositionRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PositionRowChangeEventHandler PositionRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PositionRowChangeEventHandler PositionRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PositionRowChangeEventHandler PositionRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PositionRowChangeEventHandler PositionRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddPositionRow(PositionRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PositionRow AddPositionRow(string Latitude, string Longitude, string PositionTypeCode, HotelInfoRow parentHotelInfoRowByHotelInfo_Position) {
            PositionRow rowPositionRow = ((PositionRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    Latitude,
                    Longitude,
                    PositionTypeCode,
                    null};
            if ((parentHotelInfoRowByHotelInfo_Position != null)) {
                columnValuesArray[3] = parentHotelInfoRowByHotelInfo_Position[2];
            }
            rowPositionRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowPositionRow);
            return rowPositionRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            PositionDataTable cln = ((PositionDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new PositionDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnLatitude = base.Columns["Latitude"];
            this.columnLongitude = base.Columns["Longitude"];
            this.columnPositionTypeCode = base.Columns["PositionTypeCode"];
            this.columnHotelInfo_Id = base.Columns["HotelInfo_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnLatitude = new global::System.Data.DataColumn("Latitude", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnLatitude);
            this.columnLongitude = new global::System.Data.DataColumn("Longitude", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnLongitude);
            this.columnPositionTypeCode = new global::System.Data.DataColumn("PositionTypeCode", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnPositionTypeCode);
            this.columnHotelInfo_Id = new global::System.Data.DataColumn("HotelInfo_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelInfo_Id);
            this.columnLatitude.Namespace = "";
            this.columnLongitude.Namespace = "";
            this.columnPositionTypeCode.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PositionRow NewPositionRow() {
            return ((PositionRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new PositionRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(PositionRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.PositionRowChanged != null)) {
                this.PositionRowChanged(this, new PositionRowChangeEvent(((PositionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.PositionRowChanging != null)) {
                this.PositionRowChanging(this, new PositionRowChangeEvent(((PositionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.PositionRowDeleted != null)) {
                this.PositionRowDeleted(this, new PositionRowChangeEvent(((PositionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.PositionRowDeleting != null)) {
                this.PositionRowDeleting(this, new PositionRowChangeEvent(((PositionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemovePositionRow(PositionRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "PositionDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class AddressDataTable : global::System.Data.TypedTableBase<AddressRow> {
        
        private global::System.Data.DataColumn columnAddressLine;
        
        private global::System.Data.DataColumn columnCityName;
        
        private global::System.Data.DataColumn columnPostalCode;
        
        private global::System.Data.DataColumn columnAddress_Id;
        
        private global::System.Data.DataColumn columnHotelInfo_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressDataTable() {
            this.TableName = "Address";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AddressDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AddressDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn AddressLineColumn {
            get {
                return this.columnAddressLine;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CityNameColumn {
            get {
                return this.columnCityName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PostalCodeColumn {
            get {
                return this.columnPostalCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Address_IdColumn {
            get {
                return this.columnAddress_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelInfo_IdColumn {
            get {
                return this.columnHotelInfo_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow this[int index] {
            get {
                return ((AddressRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AddressRowChangeEventHandler AddressRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AddressRowChangeEventHandler AddressRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AddressRowChangeEventHandler AddressRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AddressRowChangeEventHandler AddressRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddAddressRow(AddressRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow AddAddressRow(string AddressLine, string CityName, string PostalCode, HotelInfoRow parentHotelInfoRowByHotelInfo_Address) {
            AddressRow rowAddressRow = ((AddressRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    AddressLine,
                    CityName,
                    PostalCode,
                    null,
                    null};
            if ((parentHotelInfoRowByHotelInfo_Address != null)) {
                columnValuesArray[4] = parentHotelInfoRowByHotelInfo_Address[2];
            }
            rowAddressRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowAddressRow);
            return rowAddressRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            AddressDataTable cln = ((AddressDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new AddressDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnAddressLine = base.Columns["AddressLine"];
            this.columnCityName = base.Columns["CityName"];
            this.columnPostalCode = base.Columns["PostalCode"];
            this.columnAddress_Id = base.Columns["Address_Id"];
            this.columnHotelInfo_Id = base.Columns["HotelInfo_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnAddressLine = new global::System.Data.DataColumn("AddressLine", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnAddressLine);
            this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnCityName);
            this.columnPostalCode = new global::System.Data.DataColumn("PostalCode", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPostalCode);
            this.columnAddress_Id = new global::System.Data.DataColumn("Address_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnAddress_Id);
            this.columnHotelInfo_Id = new global::System.Data.DataColumn("HotelInfo_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelInfo_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnAddress_Id}, true));
            this.columnAddress_Id.AutoIncrement = true;
            this.columnAddress_Id.AllowDBNull = false;
            this.columnAddress_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow NewAddressRow() {
            return ((AddressRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new AddressRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(AddressRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.AddressRowChanged != null)) {
                this.AddressRowChanged(this, new AddressRowChangeEvent(((AddressRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.AddressRowChanging != null)) {
                this.AddressRowChanging(this, new AddressRowChangeEvent(((AddressRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.AddressRowDeleted != null)) {
                this.AddressRowDeleted(this, new AddressRowChangeEvent(((AddressRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.AddressRowDeleting != null)) {
                this.AddressRowDeleting(this, new AddressRowChangeEvent(((AddressRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveAddressRow(AddressRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "AddressDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ZoneDataTable : global::System.Data.TypedTableBase<ZoneRow> {
        
        private global::System.Data.DataColumn columnZoneCode;
        
        private global::System.Data.DataColumn columnZoneName;
        
        private global::System.Data.DataColumn columnAddress_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ZoneDataTable() {
            this.TableName = "Zone";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ZoneDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ZoneDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ZoneCodeColumn {
            get {
                return this.columnZoneCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ZoneNameColumn {
            get {
                return this.columnZoneName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Address_IdColumn {
            get {
                return this.columnAddress_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ZoneRow this[int index] {
            get {
                return ((ZoneRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ZoneRowChangeEventHandler ZoneRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ZoneRowChangeEventHandler ZoneRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ZoneRowChangeEventHandler ZoneRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ZoneRowChangeEventHandler ZoneRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddZoneRow(ZoneRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ZoneRow AddZoneRow(string ZoneCode, string ZoneName, AddressRow parentAddressRowByAddress_Zone) {
            ZoneRow rowZoneRow = ((ZoneRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    ZoneCode,
                    ZoneName,
                    null};
            if ((parentAddressRowByAddress_Zone != null)) {
                columnValuesArray[2] = parentAddressRowByAddress_Zone[3];
            }
            rowZoneRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowZoneRow);
            return rowZoneRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            ZoneDataTable cln = ((ZoneDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new ZoneDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnZoneCode = base.Columns["ZoneCode"];
            this.columnZoneName = base.Columns["ZoneName"];
            this.columnAddress_Id = base.Columns["Address_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnZoneCode = new global::System.Data.DataColumn("ZoneCode", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnZoneCode);
            this.columnZoneName = new global::System.Data.DataColumn("ZoneName", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnZoneName);
            this.columnAddress_Id = new global::System.Data.DataColumn("Address_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnAddress_Id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ZoneRow NewZoneRow() {
            return ((ZoneRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new ZoneRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(ZoneRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.ZoneRowChanged != null)) {
                this.ZoneRowChanged(this, new ZoneRowChangeEvent(((ZoneRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.ZoneRowChanging != null)) {
                this.ZoneRowChanging(this, new ZoneRowChangeEvent(((ZoneRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.ZoneRowDeleted != null)) {
                this.ZoneRowDeleted(this, new ZoneRowChangeEvent(((ZoneRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.ZoneRowDeleting != null)) {
                this.ZoneRowDeleting(this, new ZoneRowChangeEvent(((ZoneRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveZoneRow(ZoneRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ZoneDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ServicesDataTable : global::System.Data.TypedTableBase<ServicesRow> {
        
        private global::System.Data.DataColumn columnServices_Id;
        
        private global::System.Data.DataColumn columnHotelInfo_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServicesDataTable() {
            this.TableName = "Services";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ServicesDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ServicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Services_IdColumn {
            get {
                return this.columnServices_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelInfo_IdColumn {
            get {
                return this.columnHotelInfo_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServicesRow this[int index] {
            get {
                return ((ServicesRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ServicesRowChangeEventHandler ServicesRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ServicesRowChangeEventHandler ServicesRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ServicesRowChangeEventHandler ServicesRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ServicesRowChangeEventHandler ServicesRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddServicesRow(ServicesRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServicesRow AddServicesRow(HotelInfoRow parentHotelInfoRowByHotelInfo_Services) {
            ServicesRow rowServicesRow = ((ServicesRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentHotelInfoRowByHotelInfo_Services != null)) {
                columnValuesArray[1] = parentHotelInfoRowByHotelInfo_Services[2];
            }
            rowServicesRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowServicesRow);
            return rowServicesRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            ServicesDataTable cln = ((ServicesDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new ServicesDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnServices_Id = base.Columns["Services_Id"];
            this.columnHotelInfo_Id = base.Columns["HotelInfo_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnServices_Id = new global::System.Data.DataColumn("Services_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnServices_Id);
            this.columnHotelInfo_Id = new global::System.Data.DataColumn("HotelInfo_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelInfo_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnServices_Id}, true));
            this.columnServices_Id.AutoIncrement = true;
            this.columnServices_Id.AllowDBNull = false;
            this.columnServices_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServicesRow NewServicesRow() {
            return ((ServicesRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new ServicesRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(ServicesRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.ServicesRowChanged != null)) {
                this.ServicesRowChanged(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.ServicesRowChanging != null)) {
                this.ServicesRowChanging(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.ServicesRowDeleted != null)) {
                this.ServicesRowDeleted(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.ServicesRowDeleting != null)) {
                this.ServicesRowDeleting(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveServicesRow(ServicesRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ServicesDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ServiceDataTable : global::System.Data.TypedTableBase<ServiceRow> {
        
        private global::System.Data.DataColumn columnDescriptiveText;
        
        private global::System.Data.DataColumn columnCode;
        
        private global::System.Data.DataColumn columnID;
        
        private global::System.Data.DataColumn columnServices_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServiceDataTable() {
            this.TableName = "Service";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ServiceDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ServiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DescriptiveTextColumn {
            get {
                return this.columnDescriptiveText;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CodeColumn {
            get {
                return this.columnCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn IDColumn {
            get {
                return this.columnID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Services_IdColumn {
            get {
                return this.columnServices_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServiceRow this[int index] {
            get {
                return ((ServiceRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ServiceRowChangeEventHandler ServiceRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ServiceRowChangeEventHandler ServiceRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ServiceRowChangeEventHandler ServiceRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ServiceRowChangeEventHandler ServiceRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddServiceRow(ServiceRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServiceRow AddServiceRow(string DescriptiveText, string Code, string ID, ServicesRow parentServicesRowByServices_Service) {
            ServiceRow rowServiceRow = ((ServiceRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    DescriptiveText,
                    Code,
                    ID,
                    null};
            if ((parentServicesRowByServices_Service != null)) {
                columnValuesArray[3] = parentServicesRowByServices_Service[0];
            }
            rowServiceRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowServiceRow);
            return rowServiceRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            ServiceDataTable cln = ((ServiceDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new ServiceDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnDescriptiveText = base.Columns["DescriptiveText"];
            this.columnCode = base.Columns["Code"];
            this.columnID = base.Columns["ID"];
            this.columnServices_Id = base.Columns["Services_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnDescriptiveText = new global::System.Data.DataColumn("DescriptiveText", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDescriptiveText);
            this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnCode);
            this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnID);
            this.columnServices_Id = new global::System.Data.DataColumn("Services_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnServices_Id);
            this.columnCode.Namespace = "";
            this.columnID.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServiceRow NewServiceRow() {
            return ((ServiceRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new ServiceRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(ServiceRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.ServiceRowChanged != null)) {
                this.ServiceRowChanged(this, new ServiceRowChangeEvent(((ServiceRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.ServiceRowChanging != null)) {
                this.ServiceRowChanging(this, new ServiceRowChangeEvent(((ServiceRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.ServiceRowDeleted != null)) {
                this.ServiceRowDeleted(this, new ServiceRowChangeEvent(((ServiceRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.ServiceRowDeleting != null)) {
                this.ServiceRowDeleting(this, new ServiceRowChangeEvent(((ServiceRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveServiceRow(ServiceRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ServiceDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class FacilityInfoDataTable : global::System.Data.TypedTableBase<FacilityInfoRow> {
        
        private global::System.Data.DataColumn columnFacilityInfo_Id;
        
        private global::System.Data.DataColumn columnHotelDescriptiveContent_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FacilityInfoDataTable() {
            this.TableName = "FacilityInfo";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal FacilityInfoDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected FacilityInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FacilityInfo_IdColumn {
            get {
                return this.columnFacilityInfo_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelDescriptiveContent_IdColumn {
            get {
                return this.columnHotelDescriptiveContent_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FacilityInfoRow this[int index] {
            get {
                return ((FacilityInfoRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FacilityInfoRowChangeEventHandler FacilityInfoRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FacilityInfoRowChangeEventHandler FacilityInfoRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FacilityInfoRowChangeEventHandler FacilityInfoRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FacilityInfoRowChangeEventHandler FacilityInfoRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddFacilityInfoRow(FacilityInfoRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FacilityInfoRow AddFacilityInfoRow(HotelDescriptiveContentRow parentHotelDescriptiveContentRowByHotelDescriptiveContent_FacilityInfo) {
            FacilityInfoRow rowFacilityInfoRow = ((FacilityInfoRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentHotelDescriptiveContentRowByHotelDescriptiveContent_FacilityInfo != null)) {
                columnValuesArray[1] = parentHotelDescriptiveContentRowByHotelDescriptiveContent_FacilityInfo[5];
            }
            rowFacilityInfoRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowFacilityInfoRow);
            return rowFacilityInfoRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            FacilityInfoDataTable cln = ((FacilityInfoDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new FacilityInfoDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnFacilityInfo_Id = base.Columns["FacilityInfo_Id"];
            this.columnHotelDescriptiveContent_Id = base.Columns["HotelDescriptiveContent_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnFacilityInfo_Id = new global::System.Data.DataColumn("FacilityInfo_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnFacilityInfo_Id);
            this.columnHotelDescriptiveContent_Id = new global::System.Data.DataColumn("HotelDescriptiveContent_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelDescriptiveContent_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnFacilityInfo_Id}, true));
            this.columnFacilityInfo_Id.AutoIncrement = true;
            this.columnFacilityInfo_Id.AllowDBNull = false;
            this.columnFacilityInfo_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FacilityInfoRow NewFacilityInfoRow() {
            return ((FacilityInfoRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new FacilityInfoRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(FacilityInfoRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.FacilityInfoRowChanged != null)) {
                this.FacilityInfoRowChanged(this, new FacilityInfoRowChangeEvent(((FacilityInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.FacilityInfoRowChanging != null)) {
                this.FacilityInfoRowChanging(this, new FacilityInfoRowChangeEvent(((FacilityInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.FacilityInfoRowDeleted != null)) {
                this.FacilityInfoRowDeleted(this, new FacilityInfoRowChangeEvent(((FacilityInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.FacilityInfoRowDeleting != null)) {
                this.FacilityInfoRowDeleting(this, new FacilityInfoRowChangeEvent(((FacilityInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveFacilityInfoRow(FacilityInfoRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "FacilityInfoDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class GuestRoomsDataTable : global::System.Data.TypedTableBase<GuestRoomsRow> {
        
        private global::System.Data.DataColumn columnGuestRooms_Id;
        
        private global::System.Data.DataColumn columnFacilityInfo_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomsDataTable() {
            this.TableName = "GuestRooms";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal GuestRoomsDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected GuestRoomsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn GuestRooms_IdColumn {
            get {
                return this.columnGuestRooms_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FacilityInfo_IdColumn {
            get {
                return this.columnFacilityInfo_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomsRow this[int index] {
            get {
                return ((GuestRoomsRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event GuestRoomsRowChangeEventHandler GuestRoomsRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event GuestRoomsRowChangeEventHandler GuestRoomsRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event GuestRoomsRowChangeEventHandler GuestRoomsRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event GuestRoomsRowChangeEventHandler GuestRoomsRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddGuestRoomsRow(GuestRoomsRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomsRow AddGuestRoomsRow(FacilityInfoRow parentFacilityInfoRowByFacilityInfo_GuestRooms) {
            GuestRoomsRow rowGuestRoomsRow = ((GuestRoomsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentFacilityInfoRowByFacilityInfo_GuestRooms != null)) {
                columnValuesArray[1] = parentFacilityInfoRowByFacilityInfo_GuestRooms[0];
            }
            rowGuestRoomsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowGuestRoomsRow);
            return rowGuestRoomsRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            GuestRoomsDataTable cln = ((GuestRoomsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new GuestRoomsDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnGuestRooms_Id = base.Columns["GuestRooms_Id"];
            this.columnFacilityInfo_Id = base.Columns["FacilityInfo_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnGuestRooms_Id = new global::System.Data.DataColumn("GuestRooms_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnGuestRooms_Id);
            this.columnFacilityInfo_Id = new global::System.Data.DataColumn("FacilityInfo_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnFacilityInfo_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnGuestRooms_Id}, true));
            this.columnGuestRooms_Id.AutoIncrement = true;
            this.columnGuestRooms_Id.AllowDBNull = false;
            this.columnGuestRooms_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomsRow NewGuestRoomsRow() {
            return ((GuestRoomsRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new GuestRoomsRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(GuestRoomsRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.GuestRoomsRowChanged != null)) {
                this.GuestRoomsRowChanged(this, new GuestRoomsRowChangeEvent(((GuestRoomsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.GuestRoomsRowChanging != null)) {
                this.GuestRoomsRowChanging(this, new GuestRoomsRowChangeEvent(((GuestRoomsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.GuestRoomsRowDeleted != null)) {
                this.GuestRoomsRowDeleted(this, new GuestRoomsRowChangeEvent(((GuestRoomsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.GuestRoomsRowDeleting != null)) {
                this.GuestRoomsRowDeleting(this, new GuestRoomsRowChangeEvent(((GuestRoomsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveGuestRoomsRow(GuestRoomsRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "GuestRoomsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class GuestRoomDataTable : global::System.Data.TypedTableBase<GuestRoomRow> {
        
        private global::System.Data.DataColumn columnRoomTypeName;
        
        private global::System.Data.DataColumn columnGuestRoom_Id;
        
        private global::System.Data.DataColumn columnGuestRooms_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomDataTable() {
            this.TableName = "GuestRoom";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal GuestRoomDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected GuestRoomDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RoomTypeNameColumn {
            get {
                return this.columnRoomTypeName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn GuestRoom_IdColumn {
            get {
                return this.columnGuestRoom_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn GuestRooms_IdColumn {
            get {
                return this.columnGuestRooms_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomRow this[int index] {
            get {
                return ((GuestRoomRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event GuestRoomRowChangeEventHandler GuestRoomRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event GuestRoomRowChangeEventHandler GuestRoomRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event GuestRoomRowChangeEventHandler GuestRoomRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event GuestRoomRowChangeEventHandler GuestRoomRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddGuestRoomRow(GuestRoomRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomRow AddGuestRoomRow(string RoomTypeName, GuestRoomsRow parentGuestRoomsRowByGuestRooms_GuestRoom) {
            GuestRoomRow rowGuestRoomRow = ((GuestRoomRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    RoomTypeName,
                    null,
                    null};
            if ((parentGuestRoomsRowByGuestRooms_GuestRoom != null)) {
                columnValuesArray[2] = parentGuestRoomsRowByGuestRooms_GuestRoom[0];
            }
            rowGuestRoomRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowGuestRoomRow);
            return rowGuestRoomRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            GuestRoomDataTable cln = ((GuestRoomDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new GuestRoomDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnRoomTypeName = base.Columns["RoomTypeName"];
            this.columnGuestRoom_Id = base.Columns["GuestRoom_Id"];
            this.columnGuestRooms_Id = base.Columns["GuestRooms_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnRoomTypeName = new global::System.Data.DataColumn("RoomTypeName", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnRoomTypeName);
            this.columnGuestRoom_Id = new global::System.Data.DataColumn("GuestRoom_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnGuestRoom_Id);
            this.columnGuestRooms_Id = new global::System.Data.DataColumn("GuestRooms_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnGuestRooms_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnGuestRoom_Id}, true));
            this.columnRoomTypeName.Namespace = "";
            this.columnGuestRoom_Id.AutoIncrement = true;
            this.columnGuestRoom_Id.AllowDBNull = false;
            this.columnGuestRoom_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomRow NewGuestRoomRow() {
            return ((GuestRoomRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new GuestRoomRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(GuestRoomRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.GuestRoomRowChanged != null)) {
                this.GuestRoomRowChanged(this, new GuestRoomRowChangeEvent(((GuestRoomRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.GuestRoomRowChanging != null)) {
                this.GuestRoomRowChanging(this, new GuestRoomRowChangeEvent(((GuestRoomRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.GuestRoomRowDeleted != null)) {
                this.GuestRoomRowDeleted(this, new GuestRoomRowChangeEvent(((GuestRoomRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.GuestRoomRowDeleting != null)) {
                this.GuestRoomRowDeleting(this, new GuestRoomRowChangeEvent(((GuestRoomRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveGuestRoomRow(GuestRoomRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "GuestRoomDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class TypeRoomDataTable : global::System.Data.TypedTableBase<TypeRoomRow> {
        
        private global::System.Data.DataColumn columnStandardOccupancy;
        
        private global::System.Data.DataColumn columnSize;
        
        private global::System.Data.DataColumn columnName;
        
        private global::System.Data.DataColumn columnRoomTypeCode;
        
        private global::System.Data.DataColumn columnFloor;
        
        private global::System.Data.DataColumn columnInvBlockCode;
        
        private global::System.Data.DataColumn columnBedTypeCode;
        
        private global::System.Data.DataColumn columnNonSmoking;
        
        private global::System.Data.DataColumn columnHasWindow;
        
        private global::System.Data.DataColumn columnQuantity;
        
        private global::System.Data.DataColumn columnRoomSize;
        
        private global::System.Data.DataColumn columnGuestRoom_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TypeRoomDataTable() {
            this.TableName = "TypeRoom";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TypeRoomDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TypeRoomDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn StandardOccupancyColumn {
            get {
                return this.columnStandardOccupancy;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn SizeColumn {
            get {
                return this.columnSize;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NameColumn {
            get {
                return this.columnName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RoomTypeCodeColumn {
            get {
                return this.columnRoomTypeCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn FloorColumn {
            get {
                return this.columnFloor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn InvBlockCodeColumn {
            get {
                return this.columnInvBlockCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn BedTypeCodeColumn {
            get {
                return this.columnBedTypeCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NonSmokingColumn {
            get {
                return this.columnNonSmoking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HasWindowColumn {
            get {
                return this.columnHasWindow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn QuantityColumn {
            get {
                return this.columnQuantity;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RoomSizeColumn {
            get {
                return this.columnRoomSize;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn GuestRoom_IdColumn {
            get {
                return this.columnGuestRoom_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TypeRoomRow this[int index] {
            get {
                return ((TypeRoomRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TypeRoomRowChangeEventHandler TypeRoomRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TypeRoomRowChangeEventHandler TypeRoomRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TypeRoomRowChangeEventHandler TypeRoomRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TypeRoomRowChangeEventHandler TypeRoomRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddTypeRoomRow(TypeRoomRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TypeRoomRow AddTypeRoomRow(string StandardOccupancy, string Size, string Name, string RoomTypeCode, string Floor, string InvBlockCode, string BedTypeCode, string NonSmoking, string HasWindow, string Quantity, string RoomSize, GuestRoomRow parentGuestRoomRowByGuestRoom_TypeRoom) {
            TypeRoomRow rowTypeRoomRow = ((TypeRoomRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    StandardOccupancy,
                    Size,
                    Name,
                    RoomTypeCode,
                    Floor,
                    InvBlockCode,
                    BedTypeCode,
                    NonSmoking,
                    HasWindow,
                    Quantity,
                    RoomSize,
                    null};
            if ((parentGuestRoomRowByGuestRoom_TypeRoom != null)) {
                columnValuesArray[11] = parentGuestRoomRowByGuestRoom_TypeRoom[1];
            }
            rowTypeRoomRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowTypeRoomRow);
            return rowTypeRoomRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            TypeRoomDataTable cln = ((TypeRoomDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new TypeRoomDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnStandardOccupancy = base.Columns["StandardOccupancy"];
            this.columnSize = base.Columns["Size"];
            this.columnName = base.Columns["Name"];
            this.columnRoomTypeCode = base.Columns["RoomTypeCode"];
            this.columnFloor = base.Columns["Floor"];
            this.columnInvBlockCode = base.Columns["InvBlockCode"];
            this.columnBedTypeCode = base.Columns["BedTypeCode"];
            this.columnNonSmoking = base.Columns["NonSmoking"];
            this.columnHasWindow = base.Columns["HasWindow"];
            this.columnQuantity = base.Columns["Quantity"];
            this.columnRoomSize = base.Columns["RoomSize"];
            this.columnGuestRoom_Id = base.Columns["GuestRoom_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnStandardOccupancy = new global::System.Data.DataColumn("StandardOccupancy", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnStandardOccupancy);
            this.columnSize = new global::System.Data.DataColumn("Size", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnSize);
            this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnName);
            this.columnRoomTypeCode = new global::System.Data.DataColumn("RoomTypeCode", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnRoomTypeCode);
            this.columnFloor = new global::System.Data.DataColumn("Floor", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnFloor);
            this.columnInvBlockCode = new global::System.Data.DataColumn("InvBlockCode", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnInvBlockCode);
            this.columnBedTypeCode = new global::System.Data.DataColumn("BedTypeCode", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnBedTypeCode);
            this.columnNonSmoking = new global::System.Data.DataColumn("NonSmoking", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnNonSmoking);
            this.columnHasWindow = new global::System.Data.DataColumn("HasWindow", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnHasWindow);
            this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnQuantity);
            this.columnRoomSize = new global::System.Data.DataColumn("RoomSize", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnRoomSize);
            this.columnGuestRoom_Id = new global::System.Data.DataColumn("GuestRoom_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnGuestRoom_Id);
            this.columnStandardOccupancy.Namespace = "";
            this.columnSize.Namespace = "";
            this.columnName.Namespace = "";
            this.columnRoomTypeCode.Namespace = "";
            this.columnFloor.Namespace = "";
            this.columnInvBlockCode.Namespace = "";
            this.columnBedTypeCode.Namespace = "";
            this.columnNonSmoking.Namespace = "";
            this.columnHasWindow.Namespace = "";
            this.columnQuantity.Namespace = "";
            this.columnRoomSize.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TypeRoomRow NewTypeRoomRow() {
            return ((TypeRoomRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new TypeRoomRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(TypeRoomRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.TypeRoomRowChanged != null)) {
                this.TypeRoomRowChanged(this, new TypeRoomRowChangeEvent(((TypeRoomRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.TypeRoomRowChanging != null)) {
                this.TypeRoomRowChanging(this, new TypeRoomRowChangeEvent(((TypeRoomRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.TypeRoomRowDeleted != null)) {
                this.TypeRoomRowDeleted(this, new TypeRoomRowChangeEvent(((TypeRoomRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.TypeRoomRowDeleting != null)) {
                this.TypeRoomRowDeleting(this, new TypeRoomRowChangeEvent(((TypeRoomRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveTypeRoomRow(TypeRoomRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "TypeRoomDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class AmenitiesDataTable : global::System.Data.TypedTableBase<AmenitiesRow> {
        
        private global::System.Data.DataColumn columnAmenities_Id;
        
        private global::System.Data.DataColumn columnGuestRoom_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenitiesDataTable() {
            this.TableName = "Amenities";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AmenitiesDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AmenitiesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Amenities_IdColumn {
            get {
                return this.columnAmenities_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn GuestRoom_IdColumn {
            get {
                return this.columnGuestRoom_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenitiesRow this[int index] {
            get {
                return ((AmenitiesRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AmenitiesRowChangeEventHandler AmenitiesRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AmenitiesRowChangeEventHandler AmenitiesRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AmenitiesRowChangeEventHandler AmenitiesRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AmenitiesRowChangeEventHandler AmenitiesRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddAmenitiesRow(AmenitiesRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenitiesRow AddAmenitiesRow(GuestRoomRow parentGuestRoomRowByGuestRoom_Amenities) {
            AmenitiesRow rowAmenitiesRow = ((AmenitiesRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentGuestRoomRowByGuestRoom_Amenities != null)) {
                columnValuesArray[1] = parentGuestRoomRowByGuestRoom_Amenities[1];
            }
            rowAmenitiesRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowAmenitiesRow);
            return rowAmenitiesRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            AmenitiesDataTable cln = ((AmenitiesDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new AmenitiesDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnAmenities_Id = base.Columns["Amenities_Id"];
            this.columnGuestRoom_Id = base.Columns["GuestRoom_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnAmenities_Id = new global::System.Data.DataColumn("Amenities_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnAmenities_Id);
            this.columnGuestRoom_Id = new global::System.Data.DataColumn("GuestRoom_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnGuestRoom_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnAmenities_Id}, true));
            this.columnAmenities_Id.AutoIncrement = true;
            this.columnAmenities_Id.AllowDBNull = false;
            this.columnAmenities_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenitiesRow NewAmenitiesRow() {
            return ((AmenitiesRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new AmenitiesRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(AmenitiesRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.AmenitiesRowChanged != null)) {
                this.AmenitiesRowChanged(this, new AmenitiesRowChangeEvent(((AmenitiesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.AmenitiesRowChanging != null)) {
                this.AmenitiesRowChanging(this, new AmenitiesRowChangeEvent(((AmenitiesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.AmenitiesRowDeleted != null)) {
                this.AmenitiesRowDeleted(this, new AmenitiesRowChangeEvent(((AmenitiesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.AmenitiesRowDeleting != null)) {
                this.AmenitiesRowDeleting(this, new AmenitiesRowChangeEvent(((AmenitiesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveAmenitiesRow(AmenitiesRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "AmenitiesDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class AmenityDataTable : global::System.Data.TypedTableBase<AmenityRow> {
        
        private global::System.Data.DataColumn columnDescriptiveText;
        
        private global::System.Data.DataColumn columnRoomAmenityCode;
        
        private global::System.Data.DataColumn columnAmenities_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenityDataTable() {
            this.TableName = "Amenity";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AmenityDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AmenityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DescriptiveTextColumn {
            get {
                return this.columnDescriptiveText;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RoomAmenityCodeColumn {
            get {
                return this.columnRoomAmenityCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Amenities_IdColumn {
            get {
                return this.columnAmenities_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenityRow this[int index] {
            get {
                return ((AmenityRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AmenityRowChangeEventHandler AmenityRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AmenityRowChangeEventHandler AmenityRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AmenityRowChangeEventHandler AmenityRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AmenityRowChangeEventHandler AmenityRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddAmenityRow(AmenityRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenityRow AddAmenityRow(string DescriptiveText, string RoomAmenityCode, AmenitiesRow parentAmenitiesRowByAmenities_Amenity) {
            AmenityRow rowAmenityRow = ((AmenityRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    DescriptiveText,
                    RoomAmenityCode,
                    null};
            if ((parentAmenitiesRowByAmenities_Amenity != null)) {
                columnValuesArray[2] = parentAmenitiesRowByAmenities_Amenity[0];
            }
            rowAmenityRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowAmenityRow);
            return rowAmenityRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            AmenityDataTable cln = ((AmenityDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new AmenityDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnDescriptiveText = base.Columns["DescriptiveText"];
            this.columnRoomAmenityCode = base.Columns["RoomAmenityCode"];
            this.columnAmenities_Id = base.Columns["Amenities_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnDescriptiveText = new global::System.Data.DataColumn("DescriptiveText", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDescriptiveText);
            this.columnRoomAmenityCode = new global::System.Data.DataColumn("RoomAmenityCode", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnRoomAmenityCode);
            this.columnAmenities_Id = new global::System.Data.DataColumn("Amenities_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnAmenities_Id);
            this.columnRoomAmenityCode.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenityRow NewAmenityRow() {
            return ((AmenityRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new AmenityRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(AmenityRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.AmenityRowChanged != null)) {
                this.AmenityRowChanged(this, new AmenityRowChangeEvent(((AmenityRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.AmenityRowChanging != null)) {
                this.AmenityRowChanging(this, new AmenityRowChangeEvent(((AmenityRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.AmenityRowDeleted != null)) {
                this.AmenityRowDeleted(this, new AmenityRowChangeEvent(((AmenityRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.AmenityRowDeleting != null)) {
                this.AmenityRowDeleting(this, new AmenityRowChangeEvent(((AmenityRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveAmenityRow(AmenityRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "AmenityDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class FeaturesDataTable : global::System.Data.TypedTableBase<FeaturesRow> {
        
        private global::System.Data.DataColumn columnFeatures_Id;
        
        private global::System.Data.DataColumn columnGuestRoom_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeaturesDataTable() {
            this.TableName = "Features";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal FeaturesDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected FeaturesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Features_IdColumn {
            get {
                return this.columnFeatures_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn GuestRoom_IdColumn {
            get {
                return this.columnGuestRoom_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeaturesRow this[int index] {
            get {
                return ((FeaturesRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FeaturesRowChangeEventHandler FeaturesRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FeaturesRowChangeEventHandler FeaturesRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FeaturesRowChangeEventHandler FeaturesRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FeaturesRowChangeEventHandler FeaturesRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddFeaturesRow(FeaturesRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeaturesRow AddFeaturesRow(GuestRoomRow parentGuestRoomRowByGuestRoom_Features) {
            FeaturesRow rowFeaturesRow = ((FeaturesRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentGuestRoomRowByGuestRoom_Features != null)) {
                columnValuesArray[1] = parentGuestRoomRowByGuestRoom_Features[1];
            }
            rowFeaturesRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowFeaturesRow);
            return rowFeaturesRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            FeaturesDataTable cln = ((FeaturesDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new FeaturesDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnFeatures_Id = base.Columns["Features_Id"];
            this.columnGuestRoom_Id = base.Columns["GuestRoom_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnFeatures_Id = new global::System.Data.DataColumn("Features_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnFeatures_Id);
            this.columnGuestRoom_Id = new global::System.Data.DataColumn("GuestRoom_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnGuestRoom_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnFeatures_Id}, true));
            this.columnFeatures_Id.AutoIncrement = true;
            this.columnFeatures_Id.AllowDBNull = false;
            this.columnFeatures_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeaturesRow NewFeaturesRow() {
            return ((FeaturesRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new FeaturesRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(FeaturesRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.FeaturesRowChanged != null)) {
                this.FeaturesRowChanged(this, new FeaturesRowChangeEvent(((FeaturesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.FeaturesRowChanging != null)) {
                this.FeaturesRowChanging(this, new FeaturesRowChangeEvent(((FeaturesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.FeaturesRowDeleted != null)) {
                this.FeaturesRowDeleted(this, new FeaturesRowChangeEvent(((FeaturesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.FeaturesRowDeleting != null)) {
                this.FeaturesRowDeleting(this, new FeaturesRowChangeEvent(((FeaturesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveFeaturesRow(FeaturesRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "FeaturesDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class FeatureDataTable : global::System.Data.TypedTableBase<FeatureRow> {
        
        private global::System.Data.DataColumn columnDescriptiveText;
        
        private global::System.Data.DataColumn columnFeatures_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeatureDataTable() {
            this.TableName = "Feature";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal FeatureDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected FeatureDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DescriptiveTextColumn {
            get {
                return this.columnDescriptiveText;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Features_IdColumn {
            get {
                return this.columnFeatures_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeatureRow this[int index] {
            get {
                return ((FeatureRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FeatureRowChangeEventHandler FeatureRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FeatureRowChangeEventHandler FeatureRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FeatureRowChangeEventHandler FeatureRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event FeatureRowChangeEventHandler FeatureRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddFeatureRow(FeatureRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeatureRow AddFeatureRow(string DescriptiveText, FeaturesRow parentFeaturesRowByFeatures_Feature) {
            FeatureRow rowFeatureRow = ((FeatureRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    DescriptiveText,
                    null};
            if ((parentFeaturesRowByFeatures_Feature != null)) {
                columnValuesArray[1] = parentFeaturesRowByFeatures_Feature[0];
            }
            rowFeatureRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowFeatureRow);
            return rowFeatureRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            FeatureDataTable cln = ((FeatureDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new FeatureDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnDescriptiveText = base.Columns["DescriptiveText"];
            this.columnFeatures_Id = base.Columns["Features_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnDescriptiveText = new global::System.Data.DataColumn("DescriptiveText", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDescriptiveText);
            this.columnFeatures_Id = new global::System.Data.DataColumn("Features_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnFeatures_Id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeatureRow NewFeatureRow() {
            return ((FeatureRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new FeatureRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(FeatureRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.FeatureRowChanged != null)) {
                this.FeatureRowChanged(this, new FeatureRowChangeEvent(((FeatureRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.FeatureRowChanging != null)) {
                this.FeatureRowChanging(this, new FeatureRowChangeEvent(((FeatureRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.FeatureRowDeleted != null)) {
                this.FeatureRowDeleted(this, new FeatureRowChangeEvent(((FeatureRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.FeatureRowDeleting != null)) {
                this.FeatureRowDeleting(this, new FeatureRowChangeEvent(((FeatureRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveFeatureRow(FeatureRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "FeatureDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class PoliciesDataTable : global::System.Data.TypedTableBase<PoliciesRow> {
        
        private global::System.Data.DataColumn columnPolicies_Id;
        
        private global::System.Data.DataColumn columnHotelDescriptiveContent_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PoliciesDataTable() {
            this.TableName = "Policies";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PoliciesDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected PoliciesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Policies_IdColumn {
            get {
                return this.columnPolicies_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelDescriptiveContent_IdColumn {
            get {
                return this.columnHotelDescriptiveContent_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PoliciesRow this[int index] {
            get {
                return ((PoliciesRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PoliciesRowChangeEventHandler PoliciesRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PoliciesRowChangeEventHandler PoliciesRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PoliciesRowChangeEventHandler PoliciesRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PoliciesRowChangeEventHandler PoliciesRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddPoliciesRow(PoliciesRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PoliciesRow AddPoliciesRow(HotelDescriptiveContentRow parentHotelDescriptiveContentRowByHotelDescriptiveContent_Policies) {
            PoliciesRow rowPoliciesRow = ((PoliciesRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentHotelDescriptiveContentRowByHotelDescriptiveContent_Policies != null)) {
                columnValuesArray[1] = parentHotelDescriptiveContentRowByHotelDescriptiveContent_Policies[5];
            }
            rowPoliciesRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowPoliciesRow);
            return rowPoliciesRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            PoliciesDataTable cln = ((PoliciesDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new PoliciesDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnPolicies_Id = base.Columns["Policies_Id"];
            this.columnHotelDescriptiveContent_Id = base.Columns["HotelDescriptiveContent_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnPolicies_Id = new global::System.Data.DataColumn("Policies_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnPolicies_Id);
            this.columnHotelDescriptiveContent_Id = new global::System.Data.DataColumn("HotelDescriptiveContent_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelDescriptiveContent_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnPolicies_Id}, true));
            this.columnPolicies_Id.AutoIncrement = true;
            this.columnPolicies_Id.AllowDBNull = false;
            this.columnPolicies_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PoliciesRow NewPoliciesRow() {
            return ((PoliciesRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new PoliciesRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(PoliciesRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.PoliciesRowChanged != null)) {
                this.PoliciesRowChanged(this, new PoliciesRowChangeEvent(((PoliciesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.PoliciesRowChanging != null)) {
                this.PoliciesRowChanging(this, new PoliciesRowChangeEvent(((PoliciesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.PoliciesRowDeleted != null)) {
                this.PoliciesRowDeleted(this, new PoliciesRowChangeEvent(((PoliciesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.PoliciesRowDeleting != null)) {
                this.PoliciesRowDeleting(this, new PoliciesRowChangeEvent(((PoliciesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemovePoliciesRow(PoliciesRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "PoliciesDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class PolicyDataTable : global::System.Data.TypedTableBase<PolicyRow> {
        
        private global::System.Data.DataColumn columnPolicy_Id;
        
        private global::System.Data.DataColumn columnPolicies_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyDataTable() {
            this.TableName = "Policy";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PolicyDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected PolicyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Policy_IdColumn {
            get {
                return this.columnPolicy_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Policies_IdColumn {
            get {
                return this.columnPolicies_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyRow this[int index] {
            get {
                return ((PolicyRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyRowChangeEventHandler PolicyRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyRowChangeEventHandler PolicyRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyRowChangeEventHandler PolicyRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyRowChangeEventHandler PolicyRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddPolicyRow(PolicyRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyRow AddPolicyRow(PoliciesRow parentPoliciesRowByPolicies_Policy) {
            PolicyRow rowPolicyRow = ((PolicyRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentPoliciesRowByPolicies_Policy != null)) {
                columnValuesArray[1] = parentPoliciesRowByPolicies_Policy[0];
            }
            rowPolicyRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowPolicyRow);
            return rowPolicyRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            PolicyDataTable cln = ((PolicyDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new PolicyDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnPolicy_Id = base.Columns["Policy_Id"];
            this.columnPolicies_Id = base.Columns["Policies_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnPolicy_Id = new global::System.Data.DataColumn("Policy_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnPolicy_Id);
            this.columnPolicies_Id = new global::System.Data.DataColumn("Policies_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnPolicies_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnPolicy_Id}, true));
            this.columnPolicy_Id.AutoIncrement = true;
            this.columnPolicy_Id.AllowDBNull = false;
            this.columnPolicy_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyRow NewPolicyRow() {
            return ((PolicyRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new PolicyRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(PolicyRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.PolicyRowChanged != null)) {
                this.PolicyRowChanged(this, new PolicyRowChangeEvent(((PolicyRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.PolicyRowChanging != null)) {
                this.PolicyRowChanging(this, new PolicyRowChangeEvent(((PolicyRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.PolicyRowDeleted != null)) {
                this.PolicyRowDeleted(this, new PolicyRowChangeEvent(((PolicyRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.PolicyRowDeleting != null)) {
                this.PolicyRowDeleting(this, new PolicyRowChangeEvent(((PolicyRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemovePolicyRow(PolicyRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "PolicyDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class PolicyInfoCodesDataTable : global::System.Data.TypedTableBase<PolicyInfoCodesRow> {
        
        private global::System.Data.DataColumn columnPolicyInfoCodes_Id;
        
        private global::System.Data.DataColumn columnPolicy_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodesDataTable() {
            this.TableName = "PolicyInfoCodes";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PolicyInfoCodesDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected PolicyInfoCodesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PolicyInfoCodes_IdColumn {
            get {
                return this.columnPolicyInfoCodes_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Policy_IdColumn {
            get {
                return this.columnPolicy_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodesRow this[int index] {
            get {
                return ((PolicyInfoCodesRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoCodesRowChangeEventHandler PolicyInfoCodesRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoCodesRowChangeEventHandler PolicyInfoCodesRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoCodesRowChangeEventHandler PolicyInfoCodesRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoCodesRowChangeEventHandler PolicyInfoCodesRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddPolicyInfoCodesRow(PolicyInfoCodesRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodesRow AddPolicyInfoCodesRow(PolicyRow parentPolicyRowByPolicy_PolicyInfoCodes) {
            PolicyInfoCodesRow rowPolicyInfoCodesRow = ((PolicyInfoCodesRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentPolicyRowByPolicy_PolicyInfoCodes != null)) {
                columnValuesArray[1] = parentPolicyRowByPolicy_PolicyInfoCodes[0];
            }
            rowPolicyInfoCodesRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowPolicyInfoCodesRow);
            return rowPolicyInfoCodesRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            PolicyInfoCodesDataTable cln = ((PolicyInfoCodesDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new PolicyInfoCodesDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnPolicyInfoCodes_Id = base.Columns["PolicyInfoCodes_Id"];
            this.columnPolicy_Id = base.Columns["Policy_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnPolicyInfoCodes_Id = new global::System.Data.DataColumn("PolicyInfoCodes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnPolicyInfoCodes_Id);
            this.columnPolicy_Id = new global::System.Data.DataColumn("Policy_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnPolicy_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnPolicyInfoCodes_Id}, true));
            this.columnPolicyInfoCodes_Id.AutoIncrement = true;
            this.columnPolicyInfoCodes_Id.AllowDBNull = false;
            this.columnPolicyInfoCodes_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodesRow NewPolicyInfoCodesRow() {
            return ((PolicyInfoCodesRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new PolicyInfoCodesRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(PolicyInfoCodesRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.PolicyInfoCodesRowChanged != null)) {
                this.PolicyInfoCodesRowChanged(this, new PolicyInfoCodesRowChangeEvent(((PolicyInfoCodesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.PolicyInfoCodesRowChanging != null)) {
                this.PolicyInfoCodesRowChanging(this, new PolicyInfoCodesRowChangeEvent(((PolicyInfoCodesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.PolicyInfoCodesRowDeleted != null)) {
                this.PolicyInfoCodesRowDeleted(this, new PolicyInfoCodesRowChangeEvent(((PolicyInfoCodesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.PolicyInfoCodesRowDeleting != null)) {
                this.PolicyInfoCodesRowDeleting(this, new PolicyInfoCodesRowChangeEvent(((PolicyInfoCodesRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemovePolicyInfoCodesRow(PolicyInfoCodesRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "PolicyInfoCodesDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class PolicyInfoCodeDataTable : global::System.Data.TypedTableBase<PolicyInfoCodeRow> {
        
        private global::System.Data.DataColumn columnCode;
        
        private global::System.Data.DataColumn columnPolicyInfoCode_Id;
        
        private global::System.Data.DataColumn columnPolicyInfoCodes_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodeDataTable() {
            this.TableName = "PolicyInfoCode";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PolicyInfoCodeDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected PolicyInfoCodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CodeColumn {
            get {
                return this.columnCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PolicyInfoCode_IdColumn {
            get {
                return this.columnPolicyInfoCode_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn PolicyInfoCodes_IdColumn {
            get {
                return this.columnPolicyInfoCodes_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodeRow this[int index] {
            get {
                return ((PolicyInfoCodeRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoCodeRowChangeEventHandler PolicyInfoCodeRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoCodeRowChangeEventHandler PolicyInfoCodeRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoCodeRowChangeEventHandler PolicyInfoCodeRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoCodeRowChangeEventHandler PolicyInfoCodeRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddPolicyInfoCodeRow(PolicyInfoCodeRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodeRow AddPolicyInfoCodeRow(string Code, PolicyInfoCodesRow parentPolicyInfoCodesRowByPolicyInfoCodes_PolicyInfoCode) {
            PolicyInfoCodeRow rowPolicyInfoCodeRow = ((PolicyInfoCodeRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    Code,
                    null,
                    null};
            if ((parentPolicyInfoCodesRowByPolicyInfoCodes_PolicyInfoCode != null)) {
                columnValuesArray[2] = parentPolicyInfoCodesRowByPolicyInfoCodes_PolicyInfoCode[0];
            }
            rowPolicyInfoCodeRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowPolicyInfoCodeRow);
            return rowPolicyInfoCodeRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            PolicyInfoCodeDataTable cln = ((PolicyInfoCodeDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new PolicyInfoCodeDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnCode = base.Columns["Code"];
            this.columnPolicyInfoCode_Id = base.Columns["PolicyInfoCode_Id"];
            this.columnPolicyInfoCodes_Id = base.Columns["PolicyInfoCodes_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnCode);
            this.columnPolicyInfoCode_Id = new global::System.Data.DataColumn("PolicyInfoCode_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnPolicyInfoCode_Id);
            this.columnPolicyInfoCodes_Id = new global::System.Data.DataColumn("PolicyInfoCodes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnPolicyInfoCodes_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnPolicyInfoCode_Id}, true));
            this.columnCode.Namespace = "";
            this.columnPolicyInfoCode_Id.AutoIncrement = true;
            this.columnPolicyInfoCode_Id.AllowDBNull = false;
            this.columnPolicyInfoCode_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodeRow NewPolicyInfoCodeRow() {
            return ((PolicyInfoCodeRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new PolicyInfoCodeRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(PolicyInfoCodeRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.PolicyInfoCodeRowChanged != null)) {
                this.PolicyInfoCodeRowChanged(this, new PolicyInfoCodeRowChangeEvent(((PolicyInfoCodeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.PolicyInfoCodeRowChanging != null)) {
                this.PolicyInfoCodeRowChanging(this, new PolicyInfoCodeRowChangeEvent(((PolicyInfoCodeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.PolicyInfoCodeRowDeleted != null)) {
                this.PolicyInfoCodeRowDeleted(this, new PolicyInfoCodeRowChangeEvent(((PolicyInfoCodeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.PolicyInfoCodeRowDeleting != null)) {
                this.PolicyInfoCodeRowDeleting(this, new PolicyInfoCodeRowChangeEvent(((PolicyInfoCodeRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemovePolicyInfoCodeRow(PolicyInfoCodeRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "PolicyInfoCodeDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class PolicyInfoDataTable : global::System.Data.TypedTableBase<PolicyInfoRow> {
        
        private global::System.Data.DataColumn columnCheckInTime;
        
        private global::System.Data.DataColumn columnCheckOutTime;
        
        private global::System.Data.DataColumn columnPolicy_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoDataTable() {
            this.TableName = "PolicyInfo";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PolicyInfoDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected PolicyInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CheckInTimeColumn {
            get {
                return this.columnCheckInTime;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CheckOutTimeColumn {
            get {
                return this.columnCheckOutTime;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Policy_IdColumn {
            get {
                return this.columnPolicy_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoRow this[int index] {
            get {
                return ((PolicyInfoRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoRowChangeEventHandler PolicyInfoRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoRowChangeEventHandler PolicyInfoRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoRowChangeEventHandler PolicyInfoRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event PolicyInfoRowChangeEventHandler PolicyInfoRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddPolicyInfoRow(PolicyInfoRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoRow AddPolicyInfoRow(string CheckInTime, string CheckOutTime, PolicyRow parentPolicyRowByPolicy_PolicyInfo) {
            PolicyInfoRow rowPolicyInfoRow = ((PolicyInfoRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    CheckInTime,
                    CheckOutTime,
                    null};
            if ((parentPolicyRowByPolicy_PolicyInfo != null)) {
                columnValuesArray[2] = parentPolicyRowByPolicy_PolicyInfo[0];
            }
            rowPolicyInfoRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowPolicyInfoRow);
            return rowPolicyInfoRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            PolicyInfoDataTable cln = ((PolicyInfoDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new PolicyInfoDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnCheckInTime = base.Columns["CheckInTime"];
            this.columnCheckOutTime = base.Columns["CheckOutTime"];
            this.columnPolicy_Id = base.Columns["Policy_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnCheckInTime = new global::System.Data.DataColumn("CheckInTime", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnCheckInTime);
            this.columnCheckOutTime = new global::System.Data.DataColumn("CheckOutTime", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnCheckOutTime);
            this.columnPolicy_Id = new global::System.Data.DataColumn("Policy_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnPolicy_Id);
            this.columnCheckInTime.Namespace = "";
            this.columnCheckOutTime.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoRow NewPolicyInfoRow() {
            return ((PolicyInfoRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new PolicyInfoRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(PolicyInfoRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.PolicyInfoRowChanged != null)) {
                this.PolicyInfoRowChanged(this, new PolicyInfoRowChangeEvent(((PolicyInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.PolicyInfoRowChanging != null)) {
                this.PolicyInfoRowChanging(this, new PolicyInfoRowChangeEvent(((PolicyInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.PolicyInfoRowDeleted != null)) {
                this.PolicyInfoRowDeleted(this, new PolicyInfoRowChangeEvent(((PolicyInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.PolicyInfoRowDeleting != null)) {
                this.PolicyInfoRowDeleting(this, new PolicyInfoRowChangeEvent(((PolicyInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemovePolicyInfoRow(PolicyInfoRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "PolicyInfoDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class AreaInfoDataTable : global::System.Data.TypedTableBase<AreaInfoRow> {
        
        private global::System.Data.DataColumn columnAreaInfo_Id;
        
        private global::System.Data.DataColumn columnHotelDescriptiveContent_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AreaInfoDataTable() {
            this.TableName = "AreaInfo";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AreaInfoDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AreaInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn AreaInfo_IdColumn {
            get {
                return this.columnAreaInfo_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelDescriptiveContent_IdColumn {
            get {
                return this.columnHotelDescriptiveContent_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AreaInfoRow this[int index] {
            get {
                return ((AreaInfoRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AreaInfoRowChangeEventHandler AreaInfoRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AreaInfoRowChangeEventHandler AreaInfoRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AreaInfoRowChangeEventHandler AreaInfoRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AreaInfoRowChangeEventHandler AreaInfoRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddAreaInfoRow(AreaInfoRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AreaInfoRow AddAreaInfoRow(HotelDescriptiveContentRow parentHotelDescriptiveContentRowByHotelDescriptiveContent_AreaInfo) {
            AreaInfoRow rowAreaInfoRow = ((AreaInfoRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentHotelDescriptiveContentRowByHotelDescriptiveContent_AreaInfo != null)) {
                columnValuesArray[1] = parentHotelDescriptiveContentRowByHotelDescriptiveContent_AreaInfo[5];
            }
            rowAreaInfoRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowAreaInfoRow);
            return rowAreaInfoRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            AreaInfoDataTable cln = ((AreaInfoDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new AreaInfoDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnAreaInfo_Id = base.Columns["AreaInfo_Id"];
            this.columnHotelDescriptiveContent_Id = base.Columns["HotelDescriptiveContent_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnAreaInfo_Id = new global::System.Data.DataColumn("AreaInfo_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnAreaInfo_Id);
            this.columnHotelDescriptiveContent_Id = new global::System.Data.DataColumn("HotelDescriptiveContent_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelDescriptiveContent_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnAreaInfo_Id}, true));
            this.columnAreaInfo_Id.AutoIncrement = true;
            this.columnAreaInfo_Id.AllowDBNull = false;
            this.columnAreaInfo_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AreaInfoRow NewAreaInfoRow() {
            return ((AreaInfoRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new AreaInfoRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(AreaInfoRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.AreaInfoRowChanged != null)) {
                this.AreaInfoRowChanged(this, new AreaInfoRowChangeEvent(((AreaInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.AreaInfoRowChanging != null)) {
                this.AreaInfoRowChanging(this, new AreaInfoRowChangeEvent(((AreaInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.AreaInfoRowDeleted != null)) {
                this.AreaInfoRowDeleted(this, new AreaInfoRowChangeEvent(((AreaInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.AreaInfoRowDeleting != null)) {
                this.AreaInfoRowDeleting(this, new AreaInfoRowChangeEvent(((AreaInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveAreaInfoRow(AreaInfoRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "AreaInfoDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class RefPointsDataTable : global::System.Data.TypedTableBase<RefPointsRow> {
        
        private global::System.Data.DataColumn columnRefPoints_Id;
        
        private global::System.Data.DataColumn columnAreaInfo_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointsDataTable() {
            this.TableName = "RefPoints";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RefPointsDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RefPointsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RefPoints_IdColumn {
            get {
                return this.columnRefPoints_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn AreaInfo_IdColumn {
            get {
                return this.columnAreaInfo_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointsRow this[int index] {
            get {
                return ((RefPointsRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RefPointsRowChangeEventHandler RefPointsRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RefPointsRowChangeEventHandler RefPointsRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RefPointsRowChangeEventHandler RefPointsRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RefPointsRowChangeEventHandler RefPointsRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddRefPointsRow(RefPointsRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointsRow AddRefPointsRow(AreaInfoRow parentAreaInfoRowByAreaInfo_RefPoints) {
            RefPointsRow rowRefPointsRow = ((RefPointsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentAreaInfoRowByAreaInfo_RefPoints != null)) {
                columnValuesArray[1] = parentAreaInfoRowByAreaInfo_RefPoints[0];
            }
            rowRefPointsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowRefPointsRow);
            return rowRefPointsRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            RefPointsDataTable cln = ((RefPointsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new RefPointsDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnRefPoints_Id = base.Columns["RefPoints_Id"];
            this.columnAreaInfo_Id = base.Columns["AreaInfo_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnRefPoints_Id = new global::System.Data.DataColumn("RefPoints_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnRefPoints_Id);
            this.columnAreaInfo_Id = new global::System.Data.DataColumn("AreaInfo_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnAreaInfo_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnRefPoints_Id}, true));
            this.columnRefPoints_Id.AutoIncrement = true;
            this.columnRefPoints_Id.AllowDBNull = false;
            this.columnRefPoints_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointsRow NewRefPointsRow() {
            return ((RefPointsRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new RefPointsRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(RefPointsRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.RefPointsRowChanged != null)) {
                this.RefPointsRowChanged(this, new RefPointsRowChangeEvent(((RefPointsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.RefPointsRowChanging != null)) {
                this.RefPointsRowChanging(this, new RefPointsRowChangeEvent(((RefPointsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.RefPointsRowDeleted != null)) {
                this.RefPointsRowDeleted(this, new RefPointsRowChangeEvent(((RefPointsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.RefPointsRowDeleting != null)) {
                this.RefPointsRowDeleting(this, new RefPointsRowChangeEvent(((RefPointsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveRefPointsRow(RefPointsRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "RefPointsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class RefPointDataTable : global::System.Data.TypedTableBase<RefPointRow> {
        
        private global::System.Data.DataColumn columnDescriptiveText;
        
        private global::System.Data.DataColumn columnDistance;
        
        private global::System.Data.DataColumn columnUnitOfMeasureCode;
        
        private global::System.Data.DataColumn columnName;
        
        private global::System.Data.DataColumn columnLatitude;
        
        private global::System.Data.DataColumn columnLongitude;
        
        private global::System.Data.DataColumn columnRefPointCategoryCode;
        
        private global::System.Data.DataColumn columnRefPointName;
        
        private global::System.Data.DataColumn columnRefPoints_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointDataTable() {
            this.TableName = "RefPoint";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RefPointDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RefPointDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DescriptiveTextColumn {
            get {
                return this.columnDescriptiveText;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DistanceColumn {
            get {
                return this.columnDistance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn UnitOfMeasureCodeColumn {
            get {
                return this.columnUnitOfMeasureCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn NameColumn {
            get {
                return this.columnName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LatitudeColumn {
            get {
                return this.columnLatitude;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn LongitudeColumn {
            get {
                return this.columnLongitude;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RefPointCategoryCodeColumn {
            get {
                return this.columnRefPointCategoryCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RefPointNameColumn {
            get {
                return this.columnRefPointName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RefPoints_IdColumn {
            get {
                return this.columnRefPoints_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointRow this[int index] {
            get {
                return ((RefPointRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RefPointRowChangeEventHandler RefPointRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RefPointRowChangeEventHandler RefPointRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RefPointRowChangeEventHandler RefPointRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event RefPointRowChangeEventHandler RefPointRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddRefPointRow(RefPointRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointRow AddRefPointRow(string DescriptiveText, string Distance, string UnitOfMeasureCode, string Name, string Latitude, string Longitude, string RefPointCategoryCode, string RefPointName, RefPointsRow parentRefPointsRowByRefPoints_RefPoint) {
            RefPointRow rowRefPointRow = ((RefPointRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    DescriptiveText,
                    Distance,
                    UnitOfMeasureCode,
                    Name,
                    Latitude,
                    Longitude,
                    RefPointCategoryCode,
                    RefPointName,
                    null};
            if ((parentRefPointsRowByRefPoints_RefPoint != null)) {
                columnValuesArray[8] = parentRefPointsRowByRefPoints_RefPoint[0];
            }
            rowRefPointRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowRefPointRow);
            return rowRefPointRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            RefPointDataTable cln = ((RefPointDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new RefPointDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnDescriptiveText = base.Columns["DescriptiveText"];
            this.columnDistance = base.Columns["Distance"];
            this.columnUnitOfMeasureCode = base.Columns["UnitOfMeasureCode"];
            this.columnName = base.Columns["Name"];
            this.columnLatitude = base.Columns["Latitude"];
            this.columnLongitude = base.Columns["Longitude"];
            this.columnRefPointCategoryCode = base.Columns["RefPointCategoryCode"];
            this.columnRefPointName = base.Columns["RefPointName"];
            this.columnRefPoints_Id = base.Columns["RefPoints_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnDescriptiveText = new global::System.Data.DataColumn("DescriptiveText", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDescriptiveText);
            this.columnDistance = new global::System.Data.DataColumn("Distance", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnDistance);
            this.columnUnitOfMeasureCode = new global::System.Data.DataColumn("UnitOfMeasureCode", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnUnitOfMeasureCode);
            this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnName);
            this.columnLatitude = new global::System.Data.DataColumn("Latitude", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnLatitude);
            this.columnLongitude = new global::System.Data.DataColumn("Longitude", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnLongitude);
            this.columnRefPointCategoryCode = new global::System.Data.DataColumn("RefPointCategoryCode", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnRefPointCategoryCode);
            this.columnRefPointName = new global::System.Data.DataColumn("RefPointName", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnRefPointName);
            this.columnRefPoints_Id = new global::System.Data.DataColumn("RefPoints_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnRefPoints_Id);
            this.columnDistance.Namespace = "";
            this.columnUnitOfMeasureCode.Namespace = "";
            this.columnName.Namespace = "";
            this.columnLatitude.Namespace = "";
            this.columnLongitude.Namespace = "";
            this.columnRefPointCategoryCode.Namespace = "";
            this.columnRefPointName.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointRow NewRefPointRow() {
            return ((RefPointRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new RefPointRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(RefPointRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.RefPointRowChanged != null)) {
                this.RefPointRowChanged(this, new RefPointRowChangeEvent(((RefPointRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.RefPointRowChanging != null)) {
                this.RefPointRowChanging(this, new RefPointRowChangeEvent(((RefPointRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.RefPointRowDeleted != null)) {
                this.RefPointRowDeleted(this, new RefPointRowChangeEvent(((RefPointRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.RefPointRowDeleting != null)) {
                this.RefPointRowDeleting(this, new RefPointRowChangeEvent(((RefPointRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveRefPointRow(RefPointRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "RefPointDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class AffiliationInfoDataTable : global::System.Data.TypedTableBase<AffiliationInfoRow> {
        
        private global::System.Data.DataColumn columnAffiliationInfo_Id;
        
        private global::System.Data.DataColumn columnHotelDescriptiveContent_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AffiliationInfoDataTable() {
            this.TableName = "AffiliationInfo";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AffiliationInfoDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AffiliationInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn AffiliationInfo_IdColumn {
            get {
                return this.columnAffiliationInfo_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelDescriptiveContent_IdColumn {
            get {
                return this.columnHotelDescriptiveContent_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AffiliationInfoRow this[int index] {
            get {
                return ((AffiliationInfoRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AffiliationInfoRowChangeEventHandler AffiliationInfoRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AffiliationInfoRowChangeEventHandler AffiliationInfoRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AffiliationInfoRowChangeEventHandler AffiliationInfoRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AffiliationInfoRowChangeEventHandler AffiliationInfoRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddAffiliationInfoRow(AffiliationInfoRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AffiliationInfoRow AddAffiliationInfoRow(HotelDescriptiveContentRow parentHotelDescriptiveContentRowByHotelDescriptiveContent_AffiliationInfo) {
            AffiliationInfoRow rowAffiliationInfoRow = ((AffiliationInfoRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentHotelDescriptiveContentRowByHotelDescriptiveContent_AffiliationInfo != null)) {
                columnValuesArray[1] = parentHotelDescriptiveContentRowByHotelDescriptiveContent_AffiliationInfo[5];
            }
            rowAffiliationInfoRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowAffiliationInfoRow);
            return rowAffiliationInfoRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            AffiliationInfoDataTable cln = ((AffiliationInfoDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new AffiliationInfoDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnAffiliationInfo_Id = base.Columns["AffiliationInfo_Id"];
            this.columnHotelDescriptiveContent_Id = base.Columns["HotelDescriptiveContent_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnAffiliationInfo_Id = new global::System.Data.DataColumn("AffiliationInfo_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnAffiliationInfo_Id);
            this.columnHotelDescriptiveContent_Id = new global::System.Data.DataColumn("HotelDescriptiveContent_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelDescriptiveContent_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnAffiliationInfo_Id}, true));
            this.columnAffiliationInfo_Id.AutoIncrement = true;
            this.columnAffiliationInfo_Id.AllowDBNull = false;
            this.columnAffiliationInfo_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AffiliationInfoRow NewAffiliationInfoRow() {
            return ((AffiliationInfoRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new AffiliationInfoRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(AffiliationInfoRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.AffiliationInfoRowChanged != null)) {
                this.AffiliationInfoRowChanged(this, new AffiliationInfoRowChangeEvent(((AffiliationInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.AffiliationInfoRowChanging != null)) {
                this.AffiliationInfoRowChanging(this, new AffiliationInfoRowChangeEvent(((AffiliationInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.AffiliationInfoRowDeleted != null)) {
                this.AffiliationInfoRowDeleted(this, new AffiliationInfoRowChangeEvent(((AffiliationInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.AffiliationInfoRowDeleting != null)) {
                this.AffiliationInfoRowDeleting(this, new AffiliationInfoRowChangeEvent(((AffiliationInfoRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveAffiliationInfoRow(AffiliationInfoRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "AffiliationInfoDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class AwardsDataTable : global::System.Data.TypedTableBase<AwardsRow> {
        
        private global::System.Data.DataColumn columnAwards_Id;
        
        private global::System.Data.DataColumn columnAffiliationInfo_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardsDataTable() {
            this.TableName = "Awards";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AwardsDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AwardsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Awards_IdColumn {
            get {
                return this.columnAwards_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn AffiliationInfo_IdColumn {
            get {
                return this.columnAffiliationInfo_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardsRow this[int index] {
            get {
                return ((AwardsRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AwardsRowChangeEventHandler AwardsRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AwardsRowChangeEventHandler AwardsRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AwardsRowChangeEventHandler AwardsRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AwardsRowChangeEventHandler AwardsRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddAwardsRow(AwardsRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardsRow AddAwardsRow(AffiliationInfoRow parentAffiliationInfoRowByAffiliationInfo_Awards) {
            AwardsRow rowAwardsRow = ((AwardsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentAffiliationInfoRowByAffiliationInfo_Awards != null)) {
                columnValuesArray[1] = parentAffiliationInfoRowByAffiliationInfo_Awards[0];
            }
            rowAwardsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowAwardsRow);
            return rowAwardsRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            AwardsDataTable cln = ((AwardsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new AwardsDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnAwards_Id = base.Columns["Awards_Id"];
            this.columnAffiliationInfo_Id = base.Columns["AffiliationInfo_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnAwards_Id = new global::System.Data.DataColumn("Awards_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnAwards_Id);
            this.columnAffiliationInfo_Id = new global::System.Data.DataColumn("AffiliationInfo_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnAffiliationInfo_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnAwards_Id}, true));
            this.columnAwards_Id.AutoIncrement = true;
            this.columnAwards_Id.AllowDBNull = false;
            this.columnAwards_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardsRow NewAwardsRow() {
            return ((AwardsRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new AwardsRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(AwardsRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.AwardsRowChanged != null)) {
                this.AwardsRowChanged(this, new AwardsRowChangeEvent(((AwardsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.AwardsRowChanging != null)) {
                this.AwardsRowChanging(this, new AwardsRowChangeEvent(((AwardsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.AwardsRowDeleted != null)) {
                this.AwardsRowDeleted(this, new AwardsRowChangeEvent(((AwardsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.AwardsRowDeleting != null)) {
                this.AwardsRowDeleting(this, new AwardsRowChangeEvent(((AwardsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveAwardsRow(AwardsRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "AwardsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class AwardDataTable : global::System.Data.TypedTableBase<AwardRow> {
        
        private global::System.Data.DataColumn columnProvider;
        
        private global::System.Data.DataColumn columnRating;
        
        private global::System.Data.DataColumn columnAwards_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardDataTable() {
            this.TableName = "Award";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AwardDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AwardDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ProviderColumn {
            get {
                return this.columnProvider;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn RatingColumn {
            get {
                return this.columnRating;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn Awards_IdColumn {
            get {
                return this.columnAwards_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardRow this[int index] {
            get {
                return ((AwardRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AwardRowChangeEventHandler AwardRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AwardRowChangeEventHandler AwardRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AwardRowChangeEventHandler AwardRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event AwardRowChangeEventHandler AwardRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddAwardRow(AwardRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardRow AddAwardRow(string Provider, string Rating, AwardsRow parentAwardsRowByAwards_Award) {
            AwardRow rowAwardRow = ((AwardRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    Provider,
                    Rating,
                    null};
            if ((parentAwardsRowByAwards_Award != null)) {
                columnValuesArray[2] = parentAwardsRowByAwards_Award[0];
            }
            rowAwardRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowAwardRow);
            return rowAwardRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            AwardDataTable cln = ((AwardDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new AwardDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnProvider = base.Columns["Provider"];
            this.columnRating = base.Columns["Rating"];
            this.columnAwards_Id = base.Columns["Awards_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnProvider = new global::System.Data.DataColumn("Provider", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnProvider);
            this.columnRating = new global::System.Data.DataColumn("Rating", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnRating);
            this.columnAwards_Id = new global::System.Data.DataColumn("Awards_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnAwards_Id);
            this.columnProvider.Namespace = "";
            this.columnRating.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardRow NewAwardRow() {
            return ((AwardRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new AwardRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(AwardRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.AwardRowChanged != null)) {
                this.AwardRowChanged(this, new AwardRowChangeEvent(((AwardRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.AwardRowChanging != null)) {
                this.AwardRowChanging(this, new AwardRowChangeEvent(((AwardRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.AwardRowDeleted != null)) {
                this.AwardRowDeleted(this, new AwardRowChangeEvent(((AwardRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.AwardRowDeleting != null)) {
                this.AwardRowDeleting(this, new AwardRowChangeEvent(((AwardRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveAwardRow(AwardRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "AwardDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class MultimediaDescriptionsDataTable : global::System.Data.TypedTableBase<MultimediaDescriptionsRow> {
        
        private global::System.Data.DataColumn columnMultimediaDescriptions_Id;
        
        private global::System.Data.DataColumn columnHotelDescriptiveContent_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionsDataTable() {
            this.TableName = "MultimediaDescriptions";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal MultimediaDescriptionsDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected MultimediaDescriptionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MultimediaDescriptions_IdColumn {
            get {
                return this.columnMultimediaDescriptions_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn HotelDescriptiveContent_IdColumn {
            get {
                return this.columnHotelDescriptiveContent_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionsRow this[int index] {
            get {
                return ((MultimediaDescriptionsRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event MultimediaDescriptionsRowChangeEventHandler MultimediaDescriptionsRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event MultimediaDescriptionsRowChangeEventHandler MultimediaDescriptionsRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event MultimediaDescriptionsRowChangeEventHandler MultimediaDescriptionsRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event MultimediaDescriptionsRowChangeEventHandler MultimediaDescriptionsRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddMultimediaDescriptionsRow(MultimediaDescriptionsRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionsRow AddMultimediaDescriptionsRow(HotelDescriptiveContentRow parentHotelDescriptiveContentRowByHotelDescriptiveContent_MultimediaDescriptions) {
            MultimediaDescriptionsRow rowMultimediaDescriptionsRow = ((MultimediaDescriptionsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentHotelDescriptiveContentRowByHotelDescriptiveContent_MultimediaDescriptions != null)) {
                columnValuesArray[1] = parentHotelDescriptiveContentRowByHotelDescriptiveContent_MultimediaDescriptions[5];
            }
            rowMultimediaDescriptionsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowMultimediaDescriptionsRow);
            return rowMultimediaDescriptionsRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            MultimediaDescriptionsDataTable cln = ((MultimediaDescriptionsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new MultimediaDescriptionsDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnMultimediaDescriptions_Id = base.Columns["MultimediaDescriptions_Id"];
            this.columnHotelDescriptiveContent_Id = base.Columns["HotelDescriptiveContent_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnMultimediaDescriptions_Id = new global::System.Data.DataColumn("MultimediaDescriptions_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnMultimediaDescriptions_Id);
            this.columnHotelDescriptiveContent_Id = new global::System.Data.DataColumn("HotelDescriptiveContent_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnHotelDescriptiveContent_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnMultimediaDescriptions_Id}, true));
            this.columnMultimediaDescriptions_Id.AutoIncrement = true;
            this.columnMultimediaDescriptions_Id.AllowDBNull = false;
            this.columnMultimediaDescriptions_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionsRow NewMultimediaDescriptionsRow() {
            return ((MultimediaDescriptionsRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new MultimediaDescriptionsRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(MultimediaDescriptionsRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.MultimediaDescriptionsRowChanged != null)) {
                this.MultimediaDescriptionsRowChanged(this, new MultimediaDescriptionsRowChangeEvent(((MultimediaDescriptionsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.MultimediaDescriptionsRowChanging != null)) {
                this.MultimediaDescriptionsRowChanging(this, new MultimediaDescriptionsRowChangeEvent(((MultimediaDescriptionsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.MultimediaDescriptionsRowDeleted != null)) {
                this.MultimediaDescriptionsRowDeleted(this, new MultimediaDescriptionsRowChangeEvent(((MultimediaDescriptionsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.MultimediaDescriptionsRowDeleting != null)) {
                this.MultimediaDescriptionsRowDeleting(this, new MultimediaDescriptionsRowChangeEvent(((MultimediaDescriptionsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveMultimediaDescriptionsRow(MultimediaDescriptionsRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "MultimediaDescriptionsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class MultimediaDescriptionDataTable : global::System.Data.TypedTableBase<MultimediaDescriptionRow> {
        
        private global::System.Data.DataColumn columnMultimediaDescription_Id;
        
        private global::System.Data.DataColumn columnMultimediaDescriptions_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionDataTable() {
            this.TableName = "MultimediaDescription";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal MultimediaDescriptionDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected MultimediaDescriptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MultimediaDescription_IdColumn {
            get {
                return this.columnMultimediaDescription_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MultimediaDescriptions_IdColumn {
            get {
                return this.columnMultimediaDescriptions_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionRow this[int index] {
            get {
                return ((MultimediaDescriptionRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event MultimediaDescriptionRowChangeEventHandler MultimediaDescriptionRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event MultimediaDescriptionRowChangeEventHandler MultimediaDescriptionRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event MultimediaDescriptionRowChangeEventHandler MultimediaDescriptionRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event MultimediaDescriptionRowChangeEventHandler MultimediaDescriptionRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddMultimediaDescriptionRow(MultimediaDescriptionRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionRow AddMultimediaDescriptionRow(MultimediaDescriptionsRow parentMultimediaDescriptionsRowByMultimediaDescriptions_MultimediaDescription) {
            MultimediaDescriptionRow rowMultimediaDescriptionRow = ((MultimediaDescriptionRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentMultimediaDescriptionsRowByMultimediaDescriptions_MultimediaDescription != null)) {
                columnValuesArray[1] = parentMultimediaDescriptionsRowByMultimediaDescriptions_MultimediaDescription[0];
            }
            rowMultimediaDescriptionRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowMultimediaDescriptionRow);
            return rowMultimediaDescriptionRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            MultimediaDescriptionDataTable cln = ((MultimediaDescriptionDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new MultimediaDescriptionDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnMultimediaDescription_Id = base.Columns["MultimediaDescription_Id"];
            this.columnMultimediaDescriptions_Id = base.Columns["MultimediaDescriptions_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnMultimediaDescription_Id = new global::System.Data.DataColumn("MultimediaDescription_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnMultimediaDescription_Id);
            this.columnMultimediaDescriptions_Id = new global::System.Data.DataColumn("MultimediaDescriptions_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnMultimediaDescriptions_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnMultimediaDescription_Id}, true));
            this.columnMultimediaDescription_Id.AutoIncrement = true;
            this.columnMultimediaDescription_Id.AllowDBNull = false;
            this.columnMultimediaDescription_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionRow NewMultimediaDescriptionRow() {
            return ((MultimediaDescriptionRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new MultimediaDescriptionRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(MultimediaDescriptionRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.MultimediaDescriptionRowChanged != null)) {
                this.MultimediaDescriptionRowChanged(this, new MultimediaDescriptionRowChangeEvent(((MultimediaDescriptionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.MultimediaDescriptionRowChanging != null)) {
                this.MultimediaDescriptionRowChanging(this, new MultimediaDescriptionRowChangeEvent(((MultimediaDescriptionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.MultimediaDescriptionRowDeleted != null)) {
                this.MultimediaDescriptionRowDeleted(this, new MultimediaDescriptionRowChangeEvent(((MultimediaDescriptionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.MultimediaDescriptionRowDeleting != null)) {
                this.MultimediaDescriptionRowDeleting(this, new MultimediaDescriptionRowChangeEvent(((MultimediaDescriptionRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveMultimediaDescriptionRow(MultimediaDescriptionRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "MultimediaDescriptionDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class TextItemsDataTable : global::System.Data.TypedTableBase<TextItemsRow> {
        
        private global::System.Data.DataColumn columnTextItems_Id;
        
        private global::System.Data.DataColumn columnMultimediaDescription_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemsDataTable() {
            this.TableName = "TextItems";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TextItemsDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TextItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TextItems_IdColumn {
            get {
                return this.columnTextItems_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MultimediaDescription_IdColumn {
            get {
                return this.columnMultimediaDescription_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemsRow this[int index] {
            get {
                return ((TextItemsRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TextItemsRowChangeEventHandler TextItemsRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TextItemsRowChangeEventHandler TextItemsRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TextItemsRowChangeEventHandler TextItemsRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TextItemsRowChangeEventHandler TextItemsRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddTextItemsRow(TextItemsRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemsRow AddTextItemsRow(MultimediaDescriptionRow parentMultimediaDescriptionRowByMultimediaDescription_TextItems) {
            TextItemsRow rowTextItemsRow = ((TextItemsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentMultimediaDescriptionRowByMultimediaDescription_TextItems != null)) {
                columnValuesArray[1] = parentMultimediaDescriptionRowByMultimediaDescription_TextItems[0];
            }
            rowTextItemsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowTextItemsRow);
            return rowTextItemsRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            TextItemsDataTable cln = ((TextItemsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new TextItemsDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnTextItems_Id = base.Columns["TextItems_Id"];
            this.columnMultimediaDescription_Id = base.Columns["MultimediaDescription_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnTextItems_Id = new global::System.Data.DataColumn("TextItems_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnTextItems_Id);
            this.columnMultimediaDescription_Id = new global::System.Data.DataColumn("MultimediaDescription_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnMultimediaDescription_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnTextItems_Id}, true));
            this.columnTextItems_Id.AutoIncrement = true;
            this.columnTextItems_Id.AllowDBNull = false;
            this.columnTextItems_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemsRow NewTextItemsRow() {
            return ((TextItemsRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new TextItemsRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(TextItemsRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.TextItemsRowChanged != null)) {
                this.TextItemsRowChanged(this, new TextItemsRowChangeEvent(((TextItemsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.TextItemsRowChanging != null)) {
                this.TextItemsRowChanging(this, new TextItemsRowChangeEvent(((TextItemsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.TextItemsRowDeleted != null)) {
                this.TextItemsRowDeleted(this, new TextItemsRowChangeEvent(((TextItemsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.TextItemsRowDeleting != null)) {
                this.TextItemsRowDeleting(this, new TextItemsRowChangeEvent(((TextItemsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveTextItemsRow(TextItemsRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "TextItemsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class TextItemDataTable : global::System.Data.TypedTableBase<TextItemRow> {
        
        private global::System.Data.DataColumn columnURL;
        
        private global::System.Data.DataColumn columnDescription;
        
        private global::System.Data.DataColumn columnCategory;
        
        private global::System.Data.DataColumn columnTextItems_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemDataTable() {
            this.TableName = "TextItem";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TextItemDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TextItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn URLColumn {
            get {
                return this.columnURL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn DescriptionColumn {
            get {
                return this.columnDescription;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CategoryColumn {
            get {
                return this.columnCategory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn TextItems_IdColumn {
            get {
                return this.columnTextItems_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemRow this[int index] {
            get {
                return ((TextItemRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TextItemRowChangeEventHandler TextItemRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TextItemRowChangeEventHandler TextItemRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TextItemRowChangeEventHandler TextItemRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event TextItemRowChangeEventHandler TextItemRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddTextItemRow(TextItemRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemRow AddTextItemRow(string URL, string Description, string Category, TextItemsRow parentTextItemsRowByTextItems_TextItem) {
            TextItemRow rowTextItemRow = ((TextItemRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    URL,
                    Description,
                    Category,
                    null};
            if ((parentTextItemsRowByTextItems_TextItem != null)) {
                columnValuesArray[3] = parentTextItemsRowByTextItems_TextItem[0];
            }
            rowTextItemRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowTextItemRow);
            return rowTextItemRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            TextItemDataTable cln = ((TextItemDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new TextItemDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnURL = base.Columns["URL"];
            this.columnDescription = base.Columns["Description"];
            this.columnCategory = base.Columns["Category"];
            this.columnTextItems_Id = base.Columns["TextItems_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnURL = new global::System.Data.DataColumn("URL", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnURL);
            this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnDescription);
            this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnCategory);
            this.columnTextItems_Id = new global::System.Data.DataColumn("TextItems_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnTextItems_Id);
            this.columnCategory.Namespace = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemRow NewTextItemRow() {
            return ((TextItemRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new TextItemRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(TextItemRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.TextItemRowChanged != null)) {
                this.TextItemRowChanged(this, new TextItemRowChangeEvent(((TextItemRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.TextItemRowChanging != null)) {
                this.TextItemRowChanging(this, new TextItemRowChangeEvent(((TextItemRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.TextItemRowDeleted != null)) {
                this.TextItemRowDeleted(this, new TextItemRowChangeEvent(((TextItemRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.TextItemRowDeleting != null)) {
                this.TextItemRowDeleting(this, new TextItemRowChangeEvent(((TextItemRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveTextItemRow(TextItemRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "TextItemDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ImageItemsDataTable : global::System.Data.TypedTableBase<ImageItemsRow> {
        
        private global::System.Data.DataColumn columnImageItems_Id;
        
        private global::System.Data.DataColumn columnMultimediaDescription_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemsDataTable() {
            this.TableName = "ImageItems";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ImageItemsDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ImageItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ImageItems_IdColumn {
            get {
                return this.columnImageItems_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn MultimediaDescription_IdColumn {
            get {
                return this.columnMultimediaDescription_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemsRow this[int index] {
            get {
                return ((ImageItemsRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageItemsRowChangeEventHandler ImageItemsRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageItemsRowChangeEventHandler ImageItemsRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageItemsRowChangeEventHandler ImageItemsRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageItemsRowChangeEventHandler ImageItemsRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddImageItemsRow(ImageItemsRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemsRow AddImageItemsRow(MultimediaDescriptionRow parentMultimediaDescriptionRowByMultimediaDescription_ImageItems) {
            ImageItemsRow rowImageItemsRow = ((ImageItemsRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null};
            if ((parentMultimediaDescriptionRowByMultimediaDescription_ImageItems != null)) {
                columnValuesArray[1] = parentMultimediaDescriptionRowByMultimediaDescription_ImageItems[0];
            }
            rowImageItemsRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowImageItemsRow);
            return rowImageItemsRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            ImageItemsDataTable cln = ((ImageItemsDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new ImageItemsDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnImageItems_Id = base.Columns["ImageItems_Id"];
            this.columnMultimediaDescription_Id = base.Columns["MultimediaDescription_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnImageItems_Id = new global::System.Data.DataColumn("ImageItems_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnImageItems_Id);
            this.columnMultimediaDescription_Id = new global::System.Data.DataColumn("MultimediaDescription_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnMultimediaDescription_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnImageItems_Id}, true));
            this.columnImageItems_Id.AutoIncrement = true;
            this.columnImageItems_Id.AllowDBNull = false;
            this.columnImageItems_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemsRow NewImageItemsRow() {
            return ((ImageItemsRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new ImageItemsRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(ImageItemsRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.ImageItemsRowChanged != null)) {
                this.ImageItemsRowChanged(this, new ImageItemsRowChangeEvent(((ImageItemsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.ImageItemsRowChanging != null)) {
                this.ImageItemsRowChanging(this, new ImageItemsRowChangeEvent(((ImageItemsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.ImageItemsRowDeleted != null)) {
                this.ImageItemsRowDeleted(this, new ImageItemsRowChangeEvent(((ImageItemsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.ImageItemsRowDeleting != null)) {
                this.ImageItemsRowDeleting(this, new ImageItemsRowChangeEvent(((ImageItemsRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveImageItemsRow(ImageItemsRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ImageItemsDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ImageItemDataTable : global::System.Data.TypedTableBase<ImageItemRow> {
        
        private global::System.Data.DataColumn columnCategory;
        
        private global::System.Data.DataColumn columnImageItem_Id;
        
        private global::System.Data.DataColumn columnImageItems_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemDataTable() {
            this.TableName = "ImageItem";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ImageItemDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ImageItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn CategoryColumn {
            get {
                return this.columnCategory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ImageItem_IdColumn {
            get {
                return this.columnImageItem_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ImageItems_IdColumn {
            get {
                return this.columnImageItems_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemRow this[int index] {
            get {
                return ((ImageItemRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageItemRowChangeEventHandler ImageItemRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageItemRowChangeEventHandler ImageItemRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageItemRowChangeEventHandler ImageItemRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageItemRowChangeEventHandler ImageItemRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddImageItemRow(ImageItemRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemRow AddImageItemRow(string Category, ImageItemsRow parentImageItemsRowByImageItems_ImageItem) {
            ImageItemRow rowImageItemRow = ((ImageItemRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    Category,
                    null,
                    null};
            if ((parentImageItemsRowByImageItems_ImageItem != null)) {
                columnValuesArray[2] = parentImageItemsRowByImageItems_ImageItem[0];
            }
            rowImageItemRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowImageItemRow);
            return rowImageItemRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            ImageItemDataTable cln = ((ImageItemDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new ImageItemDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnCategory = base.Columns["Category"];
            this.columnImageItem_Id = base.Columns["ImageItem_Id"];
            this.columnImageItems_Id = base.Columns["ImageItems_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Attribute);
            base.Columns.Add(this.columnCategory);
            this.columnImageItem_Id = new global::System.Data.DataColumn("ImageItem_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnImageItem_Id);
            this.columnImageItems_Id = new global::System.Data.DataColumn("ImageItems_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnImageItems_Id);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnImageItem_Id}, true));
            this.columnCategory.Namespace = "";
            this.columnImageItem_Id.AutoIncrement = true;
            this.columnImageItem_Id.AllowDBNull = false;
            this.columnImageItem_Id.Unique = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemRow NewImageItemRow() {
            return ((ImageItemRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new ImageItemRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(ImageItemRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.ImageItemRowChanged != null)) {
                this.ImageItemRowChanged(this, new ImageItemRowChangeEvent(((ImageItemRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.ImageItemRowChanging != null)) {
                this.ImageItemRowChanging(this, new ImageItemRowChangeEvent(((ImageItemRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.ImageItemRowDeleted != null)) {
                this.ImageItemRowDeleted(this, new ImageItemRowChangeEvent(((ImageItemRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.ImageItemRowDeleting != null)) {
                this.ImageItemRowDeleting(this, new ImageItemRowChangeEvent(((ImageItemRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveImageItemRow(ImageItemRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ImageItemDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ImageFormatDataTable : global::System.Data.TypedTableBase<ImageFormatRow> {
        
        private global::System.Data.DataColumn columnURL;
        
        private global::System.Data.DataColumn columnImageItem_Id;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageFormatDataTable() {
            this.TableName = "ImageFormat";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ImageFormatDataTable(global::System.Data.DataTable table) {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace)) {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ImageFormatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn URLColumn {
            get {
                return this.columnURL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataColumn ImageItem_IdColumn {
            get {
                return this.columnImageItem_Id;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int Count {
            get {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageFormatRow this[int index] {
            get {
                return ((ImageFormatRow)(this.Rows[index]));
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageFormatRowChangeEventHandler ImageFormatRowChanging;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageFormatRowChangeEventHandler ImageFormatRowChanged;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageFormatRowChangeEventHandler ImageFormatRowDeleting;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public event ImageFormatRowChangeEventHandler ImageFormatRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void AddImageFormatRow(ImageFormatRow row) {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageFormatRow AddImageFormatRow(string URL, ImageItemRow parentImageItemRowByImageItem_ImageFormat) {
            ImageFormatRow rowImageFormatRow = ((ImageFormatRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    URL,
                    null};
            if ((parentImageItemRowByImageItem_ImageFormat != null)) {
                columnValuesArray[1] = parentImageItemRowByImageItem_ImageFormat[1];
            }
            rowImageFormatRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowImageFormatRow);
            return rowImageFormatRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataTable Clone() {
            ImageFormatDataTable cln = ((ImageFormatDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataTable CreateInstance() {
            return new ImageFormatDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.columnURL = base.Columns["URL"];
            this.columnImageItem_Id = base.Columns["ImageItem_Id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.columnURL = new global::System.Data.DataColumn("URL", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnURL);
            this.columnImageItem_Id = new global::System.Data.DataColumn("ImageItem_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
            base.Columns.Add(this.columnImageItem_Id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageFormatRow NewImageFormatRow() {
            return ((ImageFormatRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
            return new ImageFormatRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Type GetRowType() {
            return typeof(ImageFormatRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanged(e);
            if ((this.ImageFormatRowChanged != null)) {
                this.ImageFormatRowChanged(this, new ImageFormatRowChangeEvent(((ImageFormatRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowChanging(e);
            if ((this.ImageFormatRowChanging != null)) {
                this.ImageFormatRowChanging(this, new ImageFormatRowChangeEvent(((ImageFormatRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleted(e);
            if ((this.ImageFormatRowDeleted != null)) {
                this.ImageFormatRowDeleted(this, new ImageFormatRowChangeEvent(((ImageFormatRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
            base.OnRowDeleting(e);
            if ((this.ImageFormatRowDeleting != null)) {
                this.ImageFormatRowDeleting(this, new ImageFormatRowChangeEvent(((ImageFormatRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void RemoveImageFormatRow(ImageFormatRow row) {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ImageFormatDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class TPA_ExtensionsRow : global::System.Data.DataRow {
        
        private TPA_ExtensionsDataTable tableTPA_Extensions;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TPA_ExtensionsRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableTPA_Extensions = ((TPA_ExtensionsDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string InvBlockCode {
            get {
                try {
                    return ((string)(this[this.tableTPA_Extensions.InvBlockCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TPA_Extensions”中列“InvBlockCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTPA_Extensions.InvBlockCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Roomquantity {
            get {
                try {
                    return ((string)(this[this.tableTPA_Extensions.RoomquantityColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TPA_Extensions”中列“Roomquantity”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTPA_Extensions.RoomquantityColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int TPA_Extensions_Id {
            get {
                return ((int)(this[this.tableTPA_Extensions.TPA_Extensions_IdColumn]));
            }
            set {
                this[this.tableTPA_Extensions.TPA_Extensions_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Address_Id {
            get {
                try {
                    return ((int)(this[this.tableTPA_Extensions.Address_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TPA_Extensions”中列“Address_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTPA_Extensions.Address_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int GuestRoom_Id {
            get {
                try {
                    return ((int)(this[this.tableTPA_Extensions.GuestRoom_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TPA_Extensions”中列“GuestRoom_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTPA_Extensions.GuestRoom_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ImageItem_Id {
            get {
                try {
                    return ((int)(this[this.tableTPA_Extensions.ImageItem_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TPA_Extensions”中列“ImageItem_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTPA_Extensions.ImageItem_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelDescriptiveContent_Id {
            get {
                try {
                    return ((int)(this[this.tableTPA_Extensions.HotelDescriptiveContent_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TPA_Extensions”中列“HotelDescriptiveContent_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTPA_Extensions.HotelDescriptiveContent_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow AddressRow {
            get {
                return ((AddressRow)(this.GetParentRow(this.Table.ParentRelations["Address_TPA_Extensions"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["Address_TPA_Extensions"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomRow GuestRoomRow {
            get {
                return ((GuestRoomRow)(this.GetParentRow(this.Table.ParentRelations["GuestRoom_TPA_Extensions"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["GuestRoom_TPA_Extensions"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemRow ImageItemRow {
            get {
                return ((ImageItemRow)(this.GetParentRow(this.Table.ParentRelations["ImageItem_TPA_Extensions"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["ImageItem_TPA_Extensions"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow HotelDescriptiveContentRow {
            get {
                return ((HotelDescriptiveContentRow)(this.GetParentRow(this.Table.ParentRelations["HotelDescriptiveContent_TPA_Extensions"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelDescriptiveContent_TPA_Extensions"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsInvBlockCodeNull() {
            return this.IsNull(this.tableTPA_Extensions.InvBlockCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetInvBlockCodeNull() {
            this[this.tableTPA_Extensions.InvBlockCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRoomquantityNull() {
            return this.IsNull(this.tableTPA_Extensions.RoomquantityColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRoomquantityNull() {
            this[this.tableTPA_Extensions.RoomquantityColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAddress_IdNull() {
            return this.IsNull(this.tableTPA_Extensions.Address_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAddress_IdNull() {
            this[this.tableTPA_Extensions.Address_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsGuestRoom_IdNull() {
            return this.IsNull(this.tableTPA_Extensions.GuestRoom_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetGuestRoom_IdNull() {
            this[this.tableTPA_Extensions.GuestRoom_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsImageItem_IdNull() {
            return this.IsNull(this.tableTPA_Extensions.ImageItem_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetImageItem_IdNull() {
            this[this.tableTPA_Extensions.ImageItem_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelDescriptiveContent_IdNull() {
            return this.IsNull(this.tableTPA_Extensions.HotelDescriptiveContent_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelDescriptiveContent_IdNull() {
            this[this.tableTPA_Extensions.HotelDescriptiveContent_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RoadCrossRow[] GetRoadCrossRows() {
            if ((this.Table.ChildRelations["TPA_Extensions_RoadCross"] == null)) {
                return new RoadCrossRow[0];
            }
            else {
                return ((RoadCrossRow[])(base.GetChildRows(this.Table.ChildRelations["TPA_Extensions_RoadCross"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionRow[] GetTPA_ExtensionRows() {
            if ((this.Table.ChildRelations["TPA_Extensions_TPA_Extension"] == null)) {
                return new TPA_ExtensionRow[0];
            }
            else {
                return ((TPA_ExtensionRow[])(base.GetChildRows(this.Table.ChildRelations["TPA_Extensions_TPA_Extension"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryRow[] GetThemeCategoryRows() {
            if ((this.Table.ChildRelations["TPA_Extensions_ThemeCategory"] == null)) {
                return new ThemeCategoryRow[0];
            }
            else {
                return ((ThemeCategoryRow[])(base.GetChildRows(this.Table.ChildRelations["TPA_Extensions_ThemeCategory"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageRow[] GetCityImportantMessageRows() {
            if ((this.Table.ChildRelations["TPA_Extensions_CityImportantMessage"] == null)) {
                return new CityImportantMessageRow[0];
            }
            else {
                return ((CityImportantMessageRow[])(base.GetChildRows(this.Table.ChildRelations["TPA_Extensions_CityImportantMessage"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class RoadCrossRow : global::System.Data.DataRow {
        
        private RoadCrossDataTable tableRoadCross;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RoadCrossRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableRoadCross = ((RoadCrossDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DescriptionText {
            get {
                try {
                    return ((string)(this[this.tableRoadCross.DescriptionTextColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RoadCross”中列“DescriptionText”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRoadCross.DescriptionTextColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int TPA_Extensions_Id {
            get {
                try {
                    return ((int)(this[this.tableRoadCross.TPA_Extensions_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RoadCross”中列“TPA_Extensions_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRoadCross.TPA_Extensions_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow TPA_ExtensionsRow {
            get {
                return ((TPA_ExtensionsRow)(this.GetParentRow(this.Table.ParentRelations["TPA_Extensions_RoadCross"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["TPA_Extensions_RoadCross"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDescriptionTextNull() {
            return this.IsNull(this.tableRoadCross.DescriptionTextColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDescriptionTextNull() {
            this[this.tableRoadCross.DescriptionTextColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTPA_Extensions_IdNull() {
            return this.IsNull(this.tableRoadCross.TPA_Extensions_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTPA_Extensions_IdNull() {
            this[this.tableRoadCross.TPA_Extensions_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class TPA_ExtensionRow : global::System.Data.DataRow {
        
        private TPA_ExtensionDataTable tableTPA_Extension;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TPA_ExtensionRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableTPA_Extension = ((TPA_ExtensionDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string FacilityName {
            get {
                try {
                    return ((string)(this[this.tableTPA_Extension.FacilityNameColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TPA_Extension”中列“FacilityName”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTPA_Extension.FacilityNameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string FTypeName {
            get {
                try {
                    return ((string)(this[this.tableTPA_Extension.FTypeNameColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TPA_Extension”中列“FTypeName”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTPA_Extension.FTypeNameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string FacilityValue {
            get {
                try {
                    return ((string)(this[this.tableTPA_Extension.FacilityValueColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TPA_Extension”中列“FacilityValue”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTPA_Extension.FacilityValueColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int TPA_Extensions_Id {
            get {
                try {
                    return ((int)(this[this.tableTPA_Extension.TPA_Extensions_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TPA_Extension”中列“TPA_Extensions_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTPA_Extension.TPA_Extensions_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow TPA_ExtensionsRow {
            get {
                return ((TPA_ExtensionsRow)(this.GetParentRow(this.Table.ParentRelations["TPA_Extensions_TPA_Extension"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["TPA_Extensions_TPA_Extension"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFacilityNameNull() {
            return this.IsNull(this.tableTPA_Extension.FacilityNameColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFacilityNameNull() {
            this[this.tableTPA_Extension.FacilityNameColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFTypeNameNull() {
            return this.IsNull(this.tableTPA_Extension.FTypeNameColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFTypeNameNull() {
            this[this.tableTPA_Extension.FTypeNameColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFacilityValueNull() {
            return this.IsNull(this.tableTPA_Extension.FacilityValueColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFacilityValueNull() {
            this[this.tableTPA_Extension.FacilityValueColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTPA_Extensions_IdNull() {
            return this.IsNull(this.tableTPA_Extension.TPA_Extensions_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTPA_Extensions_IdNull() {
            this[this.tableTPA_Extension.TPA_Extensions_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class ThemeCategoryRow : global::System.Data.DataRow {
        
        private ThemeCategoryDataTable tableThemeCategory;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ThemeCategoryRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableThemeCategory = ((ThemeCategoryDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ThemeCategory_Id {
            get {
                return ((int)(this[this.tableThemeCategory.ThemeCategory_IdColumn]));
            }
            set {
                this[this.tableThemeCategory.ThemeCategory_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int TPA_Extensions_Id {
            get {
                try {
                    return ((int)(this[this.tableThemeCategory.TPA_Extensions_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“ThemeCategory”中列“TPA_Extensions_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableThemeCategory.TPA_Extensions_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow TPA_ExtensionsRow {
            get {
                return ((TPA_ExtensionsRow)(this.GetParentRow(this.Table.ParentRelations["TPA_Extensions_ThemeCategory"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["TPA_Extensions_ThemeCategory"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTPA_Extensions_IdNull() {
            return this.IsNull(this.tableThemeCategory.TPA_Extensions_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTPA_Extensions_IdNull() {
            this[this.tableThemeCategory.TPA_Extensions_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryTypeRow[] GetThemeCategoryTypeRows() {
            if ((this.Table.ChildRelations["ThemeCategory_ThemeCategoryType"] == null)) {
                return new ThemeCategoryTypeRow[0];
            }
            else {
                return ((ThemeCategoryTypeRow[])(base.GetChildRows(this.Table.ChildRelations["ThemeCategory_ThemeCategoryType"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class ThemeCategoryTypeRow : global::System.Data.DataRow {
        
        private ThemeCategoryTypeDataTable tableThemeCategoryType;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ThemeCategoryTypeRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableThemeCategoryType = ((ThemeCategoryTypeDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Code {
            get {
                try {
                    return ((string)(this[this.tableThemeCategoryType.CodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“ThemeCategoryType”中列“Code”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableThemeCategoryType.CodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ThemeCategory_Id {
            get {
                try {
                    return ((int)(this[this.tableThemeCategoryType.ThemeCategory_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“ThemeCategoryType”中列“ThemeCategory_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableThemeCategoryType.ThemeCategory_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryRow ThemeCategoryRow {
            get {
                return ((ThemeCategoryRow)(this.GetParentRow(this.Table.ParentRelations["ThemeCategory_ThemeCategoryType"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["ThemeCategory_ThemeCategoryType"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCodeNull() {
            return this.IsNull(this.tableThemeCategoryType.CodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCodeNull() {
            this[this.tableThemeCategoryType.CodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsThemeCategory_IdNull() {
            return this.IsNull(this.tableThemeCategoryType.ThemeCategory_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetThemeCategory_IdNull() {
            this[this.tableThemeCategoryType.ThemeCategory_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class CityImportantMessageRow : global::System.Data.DataRow {
        
        private CityImportantMessageDataTable tableCityImportantMessage;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal CityImportantMessageRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableCityImportantMessage = ((CityImportantMessageDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int CityImportantMessage_Id {
            get {
                return ((int)(this[this.tableCityImportantMessage.CityImportantMessage_IdColumn]));
            }
            set {
                this[this.tableCityImportantMessage.CityImportantMessage_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int TPA_Extensions_Id {
            get {
                try {
                    return ((int)(this[this.tableCityImportantMessage.TPA_Extensions_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“CityImportantMessage”中列“TPA_Extensions_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableCityImportantMessage.TPA_Extensions_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow TPA_ExtensionsRow {
            get {
                return ((TPA_ExtensionsRow)(this.GetParentRow(this.Table.ParentRelations["TPA_Extensions_CityImportantMessage"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["TPA_Extensions_CityImportantMessage"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTPA_Extensions_IdNull() {
            return this.IsNull(this.tableCityImportantMessage.TPA_Extensions_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTPA_Extensions_IdNull() {
            this[this.tableCityImportantMessage.TPA_Extensions_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageTypeRow[] GetCityImportantMessageTypeRows() {
            if ((this.Table.ChildRelations["CityImportantMessage_CityImportantMessageType"] == null)) {
                return new CityImportantMessageTypeRow[0];
            }
            else {
                return ((CityImportantMessageTypeRow[])(base.GetChildRows(this.Table.ChildRelations["CityImportantMessage_CityImportantMessageType"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class CityImportantMessageTypeRow : global::System.Data.DataRow {
        
        private CityImportantMessageTypeDataTable tableCityImportantMessageType;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal CityImportantMessageTypeRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableCityImportantMessageType = ((CityImportantMessageTypeDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string MessageContent {
            get {
                try {
                    return ((string)(this[this.tableCityImportantMessageType.MessageContentColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“CityImportantMessageType”中列“MessageContent”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableCityImportantMessageType.MessageContentColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string StartDate {
            get {
                try {
                    return ((string)(this[this.tableCityImportantMessageType.StartDateColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“CityImportantMessageType”中列“StartDate”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableCityImportantMessageType.StartDateColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string EndDate {
            get {
                try {
                    return ((string)(this[this.tableCityImportantMessageType.EndDateColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“CityImportantMessageType”中列“EndDate”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableCityImportantMessageType.EndDateColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int CityImportantMessage_Id {
            get {
                try {
                    return ((int)(this[this.tableCityImportantMessageType.CityImportantMessage_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“CityImportantMessageType”中列“CityImportantMessage_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableCityImportantMessageType.CityImportantMessage_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageRow CityImportantMessageRow {
            get {
                return ((CityImportantMessageRow)(this.GetParentRow(this.Table.ParentRelations["CityImportantMessage_CityImportantMessageType"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["CityImportantMessage_CityImportantMessageType"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsMessageContentNull() {
            return this.IsNull(this.tableCityImportantMessageType.MessageContentColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetMessageContentNull() {
            this[this.tableCityImportantMessageType.MessageContentColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsStartDateNull() {
            return this.IsNull(this.tableCityImportantMessageType.StartDateColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetStartDateNull() {
            this[this.tableCityImportantMessageType.StartDateColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsEndDateNull() {
            return this.IsNull(this.tableCityImportantMessageType.EndDateColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetEndDateNull() {
            this[this.tableCityImportantMessageType.EndDateColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCityImportantMessage_IdNull() {
            return this.IsNull(this.tableCityImportantMessageType.CityImportantMessage_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCityImportantMessage_IdNull() {
            this[this.tableCityImportantMessageType.CityImportantMessage_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class DescriptionRow : global::System.Data.DataRow {
        
        private DescriptionDataTable tableDescription;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal DescriptionRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableDescription = ((DescriptionDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Text {
            get {
                try {
                    return ((string)(this[this.tableDescription.TextColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Description”中列“Text”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableDescription.TextColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Name {
            get {
                try {
                    return ((string)(this[this.tableDescription.NameColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Description”中列“Name”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableDescription.NameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Caption {
            get {
                try {
                    return ((string)(this[this.tableDescription.CaptionColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Description”中列“Caption”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableDescription.CaptionColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int PolicyInfoCode_Id {
            get {
                try {
                    return ((int)(this[this.tableDescription.PolicyInfoCode_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Description”中列“PolicyInfoCode_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableDescription.PolicyInfoCode_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ImageItem_Id {
            get {
                try {
                    return ((int)(this[this.tableDescription.ImageItem_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Description”中列“ImageItem_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableDescription.ImageItem_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodeRow PolicyInfoCodeRow {
            get {
                return ((PolicyInfoCodeRow)(this.GetParentRow(this.Table.ParentRelations["PolicyInfoCode_Description"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["PolicyInfoCode_Description"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemRow ImageItemRow {
            get {
                return ((ImageItemRow)(this.GetParentRow(this.Table.ParentRelations["ImageItem_Description"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["ImageItem_Description"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTextNull() {
            return this.IsNull(this.tableDescription.TextColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTextNull() {
            this[this.tableDescription.TextColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNameNull() {
            return this.IsNull(this.tableDescription.NameColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNameNull() {
            this[this.tableDescription.NameColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCaptionNull() {
            return this.IsNull(this.tableDescription.CaptionColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCaptionNull() {
            this[this.tableDescription.CaptionColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPolicyInfoCode_IdNull() {
            return this.IsNull(this.tableDescription.PolicyInfoCode_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPolicyInfoCode_IdNull() {
            this[this.tableDescription.PolicyInfoCode_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsImageItem_IdNull() {
            return this.IsNull(this.tableDescription.ImageItem_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetImageItem_IdNull() {
            this[this.tableDescription.ImageItem_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class OTA_HotelDescriptiveInfoRSRow : global::System.Data.DataRow {
        
        private OTA_HotelDescriptiveInfoRSDataTable tableOTA_HotelDescriptiveInfoRS;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal OTA_HotelDescriptiveInfoRSRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableOTA_HotelDescriptiveInfoRS = ((OTA_HotelDescriptiveInfoRSDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string TimeStamp {
            get {
                try {
                    return ((string)(this[this.tableOTA_HotelDescriptiveInfoRS.TimeStampColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“OTA_HotelDescriptiveInfoRS”中列“TimeStamp”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableOTA_HotelDescriptiveInfoRS.TimeStampColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Success {
            get {
                try {
                    return ((string)(this[this.tableOTA_HotelDescriptiveInfoRS.SuccessColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“OTA_HotelDescriptiveInfoRS”中列“Success”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableOTA_HotelDescriptiveInfoRS.SuccessColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Version {
            get {
                try {
                    return ((string)(this[this.tableOTA_HotelDescriptiveInfoRS.VersionColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“OTA_HotelDescriptiveInfoRS”中列“Version”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableOTA_HotelDescriptiveInfoRS.VersionColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PrimaryLangID {
            get {
                try {
                    return ((string)(this[this.tableOTA_HotelDescriptiveInfoRS.PrimaryLangIDColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“OTA_HotelDescriptiveInfoRS”中列“PrimaryLangID”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableOTA_HotelDescriptiveInfoRS.PrimaryLangIDColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int OTA_HotelDescriptiveInfoRS_Id {
            get {
                return ((int)(this[this.tableOTA_HotelDescriptiveInfoRS.OTA_HotelDescriptiveInfoRS_IdColumn]));
            }
            set {
                this[this.tableOTA_HotelDescriptiveInfoRS.OTA_HotelDescriptiveInfoRS_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTimeStampNull() {
            return this.IsNull(this.tableOTA_HotelDescriptiveInfoRS.TimeStampColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTimeStampNull() {
            this[this.tableOTA_HotelDescriptiveInfoRS.TimeStampColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsSuccessNull() {
            return this.IsNull(this.tableOTA_HotelDescriptiveInfoRS.SuccessColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetSuccessNull() {
            this[this.tableOTA_HotelDescriptiveInfoRS.SuccessColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsVersionNull() {
            return this.IsNull(this.tableOTA_HotelDescriptiveInfoRS.VersionColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetVersionNull() {
            this[this.tableOTA_HotelDescriptiveInfoRS.VersionColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPrimaryLangIDNull() {
            return this.IsNull(this.tableOTA_HotelDescriptiveInfoRS.PrimaryLangIDColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPrimaryLangIDNull() {
            this[this.tableOTA_HotelDescriptiveInfoRS.PrimaryLangIDColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentsRow[] GetHotelDescriptiveContentsRows() {
            if ((this.Table.ChildRelations["OTA_HotelDescriptiveInfoRS_HotelDescriptiveContents"] == null)) {
                return new HotelDescriptiveContentsRow[0];
            }
            else {
                return ((HotelDescriptiveContentsRow[])(base.GetChildRows(this.Table.ChildRelations["OTA_HotelDescriptiveInfoRS_HotelDescriptiveContents"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class HotelDescriptiveContentsRow : global::System.Data.DataRow {
        
        private HotelDescriptiveContentsDataTable tableHotelDescriptiveContents;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal HotelDescriptiveContentsRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableHotelDescriptiveContents = ((HotelDescriptiveContentsDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelDescriptiveContents_Id {
            get {
                return ((int)(this[this.tableHotelDescriptiveContents.HotelDescriptiveContents_IdColumn]));
            }
            set {
                this[this.tableHotelDescriptiveContents.HotelDescriptiveContents_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int OTA_HotelDescriptiveInfoRS_Id {
            get {
                try {
                    return ((int)(this[this.tableHotelDescriptiveContents.OTA_HotelDescriptiveInfoRS_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“HotelDescriptiveContents”中列“OTA_HotelDescriptiveInfoRS_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableHotelDescriptiveContents.OTA_HotelDescriptiveInfoRS_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OTA_HotelDescriptiveInfoRSRow OTA_HotelDescriptiveInfoRSRow {
            get {
                return ((OTA_HotelDescriptiveInfoRSRow)(this.GetParentRow(this.Table.ParentRelations["OTA_HotelDescriptiveInfoRS_HotelDescriptiveContents"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["OTA_HotelDescriptiveInfoRS_HotelDescriptiveContents"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsOTA_HotelDescriptiveInfoRS_IdNull() {
            return this.IsNull(this.tableHotelDescriptiveContents.OTA_HotelDescriptiveInfoRS_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetOTA_HotelDescriptiveInfoRS_IdNull() {
            this[this.tableHotelDescriptiveContents.OTA_HotelDescriptiveInfoRS_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow[] GetHotelDescriptiveContentRows() {
            if ((this.Table.ChildRelations["HotelDescriptiveContents_HotelDescriptiveContent"] == null)) {
                return new HotelDescriptiveContentRow[0];
            }
            else {
                return ((HotelDescriptiveContentRow[])(base.GetChildRows(this.Table.ChildRelations["HotelDescriptiveContents_HotelDescriptiveContent"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class HotelDescriptiveContentRow : global::System.Data.DataRow {
        
        private HotelDescriptiveContentDataTable tableHotelDescriptiveContent;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal HotelDescriptiveContentRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableHotelDescriptiveContent = ((HotelDescriptiveContentDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string BrandCode {
            get {
                try {
                    return ((string)(this[this.tableHotelDescriptiveContent.BrandCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“HotelDescriptiveContent”中列“BrandCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableHotelDescriptiveContent.BrandCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string HotelCode {
            get {
                try {
                    return ((string)(this[this.tableHotelDescriptiveContent.HotelCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“HotelDescriptiveContent”中列“HotelCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableHotelDescriptiveContent.HotelCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string HotelCityCode {
            get {
                try {
                    return ((string)(this[this.tableHotelDescriptiveContent.HotelCityCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“HotelDescriptiveContent”中列“HotelCityCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableHotelDescriptiveContent.HotelCityCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string HotelName {
            get {
                try {
                    return ((string)(this[this.tableHotelDescriptiveContent.HotelNameColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“HotelDescriptiveContent”中列“HotelName”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableHotelDescriptiveContent.HotelNameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string AreaID {
            get {
                try {
                    return ((string)(this[this.tableHotelDescriptiveContent.AreaIDColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“HotelDescriptiveContent”中列“AreaID”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableHotelDescriptiveContent.AreaIDColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelDescriptiveContent_Id {
            get {
                return ((int)(this[this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn]));
            }
            set {
                this[this.tableHotelDescriptiveContent.HotelDescriptiveContent_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelDescriptiveContents_Id {
            get {
                try {
                    return ((int)(this[this.tableHotelDescriptiveContent.HotelDescriptiveContents_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“HotelDescriptiveContent”中列“HotelDescriptiveContents_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableHotelDescriptiveContent.HotelDescriptiveContents_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentsRow HotelDescriptiveContentsRow {
            get {
                return ((HotelDescriptiveContentsRow)(this.GetParentRow(this.Table.ParentRelations["HotelDescriptiveContents_HotelDescriptiveContent"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelDescriptiveContents_HotelDescriptiveContent"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBrandCodeNull() {
            return this.IsNull(this.tableHotelDescriptiveContent.BrandCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBrandCodeNull() {
            this[this.tableHotelDescriptiveContent.BrandCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelCodeNull() {
            return this.IsNull(this.tableHotelDescriptiveContent.HotelCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelCodeNull() {
            this[this.tableHotelDescriptiveContent.HotelCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelCityCodeNull() {
            return this.IsNull(this.tableHotelDescriptiveContent.HotelCityCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelCityCodeNull() {
            this[this.tableHotelDescriptiveContent.HotelCityCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelNameNull() {
            return this.IsNull(this.tableHotelDescriptiveContent.HotelNameColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelNameNull() {
            this[this.tableHotelDescriptiveContent.HotelNameColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAreaIDNull() {
            return this.IsNull(this.tableHotelDescriptiveContent.AreaIDColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAreaIDNull() {
            this[this.tableHotelDescriptiveContent.AreaIDColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelDescriptiveContents_IdNull() {
            return this.IsNull(this.tableHotelDescriptiveContent.HotelDescriptiveContents_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelDescriptiveContents_IdNull() {
            this[this.tableHotelDescriptiveContent.HotelDescriptiveContents_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelInfoRow[] GetHotelInfoRows() {
            if ((this.Table.ChildRelations["HotelDescriptiveContent_HotelInfo"] == null)) {
                return new HotelInfoRow[0];
            }
            else {
                return ((HotelInfoRow[])(base.GetChildRows(this.Table.ChildRelations["HotelDescriptiveContent_HotelInfo"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FacilityInfoRow[] GetFacilityInfoRows() {
            if ((this.Table.ChildRelations["HotelDescriptiveContent_FacilityInfo"] == null)) {
                return new FacilityInfoRow[0];
            }
            else {
                return ((FacilityInfoRow[])(base.GetChildRows(this.Table.ChildRelations["HotelDescriptiveContent_FacilityInfo"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PoliciesRow[] GetPoliciesRows() {
            if ((this.Table.ChildRelations["HotelDescriptiveContent_Policies"] == null)) {
                return new PoliciesRow[0];
            }
            else {
                return ((PoliciesRow[])(base.GetChildRows(this.Table.ChildRelations["HotelDescriptiveContent_Policies"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AreaInfoRow[] GetAreaInfoRows() {
            if ((this.Table.ChildRelations["HotelDescriptiveContent_AreaInfo"] == null)) {
                return new AreaInfoRow[0];
            }
            else {
                return ((AreaInfoRow[])(base.GetChildRows(this.Table.ChildRelations["HotelDescriptiveContent_AreaInfo"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AffiliationInfoRow[] GetAffiliationInfoRows() {
            if ((this.Table.ChildRelations["HotelDescriptiveContent_AffiliationInfo"] == null)) {
                return new AffiliationInfoRow[0];
            }
            else {
                return ((AffiliationInfoRow[])(base.GetChildRows(this.Table.ChildRelations["HotelDescriptiveContent_AffiliationInfo"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionsRow[] GetMultimediaDescriptionsRows() {
            if ((this.Table.ChildRelations["HotelDescriptiveContent_MultimediaDescriptions"] == null)) {
                return new MultimediaDescriptionsRow[0];
            }
            else {
                return ((MultimediaDescriptionsRow[])(base.GetChildRows(this.Table.ChildRelations["HotelDescriptiveContent_MultimediaDescriptions"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow[] GetTPA_ExtensionsRows() {
            if ((this.Table.ChildRelations["HotelDescriptiveContent_TPA_Extensions"] == null)) {
                return new TPA_ExtensionsRow[0];
            }
            else {
                return ((TPA_ExtensionsRow[])(base.GetChildRows(this.Table.ChildRelations["HotelDescriptiveContent_TPA_Extensions"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class HotelInfoRow : global::System.Data.DataRow {
        
        private HotelInfoDataTable tableHotelInfo;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal HotelInfoRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableHotelInfo = ((HotelInfoDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string WhenBuilt {
            get {
                try {
                    return ((string)(this[this.tableHotelInfo.WhenBuiltColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“HotelInfo”中列“WhenBuilt”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableHotelInfo.WhenBuiltColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string LastUpdated {
            get {
                try {
                    return ((string)(this[this.tableHotelInfo.LastUpdatedColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“HotelInfo”中列“LastUpdated”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableHotelInfo.LastUpdatedColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelInfo_Id {
            get {
                return ((int)(this[this.tableHotelInfo.HotelInfo_IdColumn]));
            }
            set {
                this[this.tableHotelInfo.HotelInfo_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelDescriptiveContent_Id {
            get {
                try {
                    return ((int)(this[this.tableHotelInfo.HotelDescriptiveContent_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“HotelInfo”中列“HotelDescriptiveContent_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableHotelInfo.HotelDescriptiveContent_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow HotelDescriptiveContentRow {
            get {
                return ((HotelDescriptiveContentRow)(this.GetParentRow(this.Table.ParentRelations["HotelDescriptiveContent_HotelInfo"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelDescriptiveContent_HotelInfo"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsWhenBuiltNull() {
            return this.IsNull(this.tableHotelInfo.WhenBuiltColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetWhenBuiltNull() {
            this[this.tableHotelInfo.WhenBuiltColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLastUpdatedNull() {
            return this.IsNull(this.tableHotelInfo.LastUpdatedColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLastUpdatedNull() {
            this[this.tableHotelInfo.LastUpdatedColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelDescriptiveContent_IdNull() {
            return this.IsNull(this.tableHotelInfo.HotelDescriptiveContent_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelDescriptiveContent_IdNull() {
            this[this.tableHotelInfo.HotelDescriptiveContent_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CategoryCodesRow[] GetCategoryCodesRows() {
            if ((this.Table.ChildRelations["HotelInfo_CategoryCodes"] == null)) {
                return new CategoryCodesRow[0];
            }
            else {
                return ((CategoryCodesRow[])(base.GetChildRows(this.Table.ChildRelations["HotelInfo_CategoryCodes"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PositionRow[] GetPositionRows() {
            if ((this.Table.ChildRelations["HotelInfo_Position"] == null)) {
                return new PositionRow[0];
            }
            else {
                return ((PositionRow[])(base.GetChildRows(this.Table.ChildRelations["HotelInfo_Position"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow[] GetAddressRows() {
            if ((this.Table.ChildRelations["HotelInfo_Address"] == null)) {
                return new AddressRow[0];
            }
            else {
                return ((AddressRow[])(base.GetChildRows(this.Table.ChildRelations["HotelInfo_Address"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServicesRow[] GetServicesRows() {
            if ((this.Table.ChildRelations["HotelInfo_Services"] == null)) {
                return new ServicesRow[0];
            }
            else {
                return ((ServicesRow[])(base.GetChildRows(this.Table.ChildRelations["HotelInfo_Services"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class CategoryCodesRow : global::System.Data.DataRow {
        
        private CategoryCodesDataTable tableCategoryCodes;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal CategoryCodesRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableCategoryCodes = ((CategoryCodesDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int CategoryCodes_Id {
            get {
                return ((int)(this[this.tableCategoryCodes.CategoryCodes_IdColumn]));
            }
            set {
                this[this.tableCategoryCodes.CategoryCodes_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelInfo_Id {
            get {
                try {
                    return ((int)(this[this.tableCategoryCodes.HotelInfo_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“CategoryCodes”中列“HotelInfo_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableCategoryCodes.HotelInfo_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelInfoRow HotelInfoRow {
            get {
                return ((HotelInfoRow)(this.GetParentRow(this.Table.ParentRelations["HotelInfo_CategoryCodes"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelInfo_CategoryCodes"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelInfo_IdNull() {
            return this.IsNull(this.tableCategoryCodes.HotelInfo_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelInfo_IdNull() {
            this[this.tableCategoryCodes.HotelInfo_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SegmentCategoryRow[] GetSegmentCategoryRows() {
            if ((this.Table.ChildRelations["CategoryCodes_SegmentCategory"] == null)) {
                return new SegmentCategoryRow[0];
            }
            else {
                return ((SegmentCategoryRow[])(base.GetChildRows(this.Table.ChildRelations["CategoryCodes_SegmentCategory"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class SegmentCategoryRow : global::System.Data.DataRow {
        
        private SegmentCategoryDataTable tableSegmentCategory;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal SegmentCategoryRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableSegmentCategory = ((SegmentCategoryDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Code {
            get {
                try {
                    return ((string)(this[this.tableSegmentCategory.CodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“SegmentCategory”中列“Code”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableSegmentCategory.CodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int CategoryCodes_Id {
            get {
                try {
                    return ((int)(this[this.tableSegmentCategory.CategoryCodes_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“SegmentCategory”中列“CategoryCodes_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableSegmentCategory.CategoryCodes_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CategoryCodesRow CategoryCodesRow {
            get {
                return ((CategoryCodesRow)(this.GetParentRow(this.Table.ParentRelations["CategoryCodes_SegmentCategory"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["CategoryCodes_SegmentCategory"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCodeNull() {
            return this.IsNull(this.tableSegmentCategory.CodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCodeNull() {
            this[this.tableSegmentCategory.CodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCategoryCodes_IdNull() {
            return this.IsNull(this.tableSegmentCategory.CategoryCodes_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCategoryCodes_IdNull() {
            this[this.tableSegmentCategory.CategoryCodes_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class PositionRow : global::System.Data.DataRow {
        
        private PositionDataTable tablePosition;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PositionRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tablePosition = ((PositionDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Latitude {
            get {
                try {
                    return ((string)(this[this.tablePosition.LatitudeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Position”中列“Latitude”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePosition.LatitudeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Longitude {
            get {
                try {
                    return ((string)(this[this.tablePosition.LongitudeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Position”中列“Longitude”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePosition.LongitudeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PositionTypeCode {
            get {
                try {
                    return ((string)(this[this.tablePosition.PositionTypeCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Position”中列“PositionTypeCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePosition.PositionTypeCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelInfo_Id {
            get {
                try {
                    return ((int)(this[this.tablePosition.HotelInfo_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Position”中列“HotelInfo_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePosition.HotelInfo_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelInfoRow HotelInfoRow {
            get {
                return ((HotelInfoRow)(this.GetParentRow(this.Table.ParentRelations["HotelInfo_Position"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelInfo_Position"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLatitudeNull() {
            return this.IsNull(this.tablePosition.LatitudeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLatitudeNull() {
            this[this.tablePosition.LatitudeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLongitudeNull() {
            return this.IsNull(this.tablePosition.LongitudeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLongitudeNull() {
            this[this.tablePosition.LongitudeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPositionTypeCodeNull() {
            return this.IsNull(this.tablePosition.PositionTypeCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPositionTypeCodeNull() {
            this[this.tablePosition.PositionTypeCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelInfo_IdNull() {
            return this.IsNull(this.tablePosition.HotelInfo_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelInfo_IdNull() {
            this[this.tablePosition.HotelInfo_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class AddressRow : global::System.Data.DataRow {
        
        private AddressDataTable tableAddress;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AddressRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableAddress = ((AddressDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string AddressLine {
            get {
                try {
                    return ((string)(this[this.tableAddress.AddressLineColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Address”中列“AddressLine”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAddress.AddressLineColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string CityName {
            get {
                try {
                    return ((string)(this[this.tableAddress.CityNameColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Address”中列“CityName”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAddress.CityNameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string PostalCode {
            get {
                try {
                    return ((string)(this[this.tableAddress.PostalCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Address”中列“PostalCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAddress.PostalCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Address_Id {
            get {
                return ((int)(this[this.tableAddress.Address_IdColumn]));
            }
            set {
                this[this.tableAddress.Address_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelInfo_Id {
            get {
                try {
                    return ((int)(this[this.tableAddress.HotelInfo_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Address”中列“HotelInfo_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAddress.HotelInfo_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelInfoRow HotelInfoRow {
            get {
                return ((HotelInfoRow)(this.GetParentRow(this.Table.ParentRelations["HotelInfo_Address"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelInfo_Address"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAddressLineNull() {
            return this.IsNull(this.tableAddress.AddressLineColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAddressLineNull() {
            this[this.tableAddress.AddressLineColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCityNameNull() {
            return this.IsNull(this.tableAddress.CityNameColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCityNameNull() {
            this[this.tableAddress.CityNameColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPostalCodeNull() {
            return this.IsNull(this.tableAddress.PostalCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPostalCodeNull() {
            this[this.tableAddress.PostalCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelInfo_IdNull() {
            return this.IsNull(this.tableAddress.HotelInfo_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelInfo_IdNull() {
            this[this.tableAddress.HotelInfo_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ZoneRow[] GetZoneRows() {
            if ((this.Table.ChildRelations["Address_Zone"] == null)) {
                return new ZoneRow[0];
            }
            else {
                return ((ZoneRow[])(base.GetChildRows(this.Table.ChildRelations["Address_Zone"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow[] GetTPA_ExtensionsRows() {
            if ((this.Table.ChildRelations["Address_TPA_Extensions"] == null)) {
                return new TPA_ExtensionsRow[0];
            }
            else {
                return ((TPA_ExtensionsRow[])(base.GetChildRows(this.Table.ChildRelations["Address_TPA_Extensions"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class ZoneRow : global::System.Data.DataRow {
        
        private ZoneDataTable tableZone;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ZoneRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableZone = ((ZoneDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string ZoneCode {
            get {
                try {
                    return ((string)(this[this.tableZone.ZoneCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Zone”中列“ZoneCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableZone.ZoneCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string ZoneName {
            get {
                try {
                    return ((string)(this[this.tableZone.ZoneNameColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Zone”中列“ZoneName”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableZone.ZoneNameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Address_Id {
            get {
                try {
                    return ((int)(this[this.tableZone.Address_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Zone”中列“Address_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableZone.Address_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow AddressRow {
            get {
                return ((AddressRow)(this.GetParentRow(this.Table.ParentRelations["Address_Zone"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["Address_Zone"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsZoneCodeNull() {
            return this.IsNull(this.tableZone.ZoneCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetZoneCodeNull() {
            this[this.tableZone.ZoneCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsZoneNameNull() {
            return this.IsNull(this.tableZone.ZoneNameColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetZoneNameNull() {
            this[this.tableZone.ZoneNameColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAddress_IdNull() {
            return this.IsNull(this.tableZone.Address_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAddress_IdNull() {
            this[this.tableZone.Address_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class ServicesRow : global::System.Data.DataRow {
        
        private ServicesDataTable tableServices;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ServicesRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableServices = ((ServicesDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Services_Id {
            get {
                return ((int)(this[this.tableServices.Services_IdColumn]));
            }
            set {
                this[this.tableServices.Services_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelInfo_Id {
            get {
                try {
                    return ((int)(this[this.tableServices.HotelInfo_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Services”中列“HotelInfo_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableServices.HotelInfo_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelInfoRow HotelInfoRow {
            get {
                return ((HotelInfoRow)(this.GetParentRow(this.Table.ParentRelations["HotelInfo_Services"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelInfo_Services"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelInfo_IdNull() {
            return this.IsNull(this.tableServices.HotelInfo_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelInfo_IdNull() {
            this[this.tableServices.HotelInfo_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServiceRow[] GetServiceRows() {
            if ((this.Table.ChildRelations["Services_Service"] == null)) {
                return new ServiceRow[0];
            }
            else {
                return ((ServiceRow[])(base.GetChildRows(this.Table.ChildRelations["Services_Service"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class ServiceRow : global::System.Data.DataRow {
        
        private ServiceDataTable tableService;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ServiceRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableService = ((ServiceDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DescriptiveText {
            get {
                try {
                    return ((string)(this[this.tableService.DescriptiveTextColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Service”中列“DescriptiveText”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableService.DescriptiveTextColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Code {
            get {
                try {
                    return ((string)(this[this.tableService.CodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Service”中列“Code”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableService.CodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string ID {
            get {
                try {
                    return ((string)(this[this.tableService.IDColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Service”中列“ID”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableService.IDColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Services_Id {
            get {
                try {
                    return ((int)(this[this.tableService.Services_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Service”中列“Services_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableService.Services_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServicesRow ServicesRow {
            get {
                return ((ServicesRow)(this.GetParentRow(this.Table.ParentRelations["Services_Service"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["Services_Service"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDescriptiveTextNull() {
            return this.IsNull(this.tableService.DescriptiveTextColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDescriptiveTextNull() {
            this[this.tableService.DescriptiveTextColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCodeNull() {
            return this.IsNull(this.tableService.CodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCodeNull() {
            this[this.tableService.CodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsIDNull() {
            return this.IsNull(this.tableService.IDColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetIDNull() {
            this[this.tableService.IDColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsServices_IdNull() {
            return this.IsNull(this.tableService.Services_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetServices_IdNull() {
            this[this.tableService.Services_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class FacilityInfoRow : global::System.Data.DataRow {
        
        private FacilityInfoDataTable tableFacilityInfo;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal FacilityInfoRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableFacilityInfo = ((FacilityInfoDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int FacilityInfo_Id {
            get {
                return ((int)(this[this.tableFacilityInfo.FacilityInfo_IdColumn]));
            }
            set {
                this[this.tableFacilityInfo.FacilityInfo_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelDescriptiveContent_Id {
            get {
                try {
                    return ((int)(this[this.tableFacilityInfo.HotelDescriptiveContent_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“FacilityInfo”中列“HotelDescriptiveContent_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableFacilityInfo.HotelDescriptiveContent_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow HotelDescriptiveContentRow {
            get {
                return ((HotelDescriptiveContentRow)(this.GetParentRow(this.Table.ParentRelations["HotelDescriptiveContent_FacilityInfo"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelDescriptiveContent_FacilityInfo"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelDescriptiveContent_IdNull() {
            return this.IsNull(this.tableFacilityInfo.HotelDescriptiveContent_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelDescriptiveContent_IdNull() {
            this[this.tableFacilityInfo.HotelDescriptiveContent_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomsRow[] GetGuestRoomsRows() {
            if ((this.Table.ChildRelations["FacilityInfo_GuestRooms"] == null)) {
                return new GuestRoomsRow[0];
            }
            else {
                return ((GuestRoomsRow[])(base.GetChildRows(this.Table.ChildRelations["FacilityInfo_GuestRooms"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class GuestRoomsRow : global::System.Data.DataRow {
        
        private GuestRoomsDataTable tableGuestRooms;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal GuestRoomsRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableGuestRooms = ((GuestRoomsDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int GuestRooms_Id {
            get {
                return ((int)(this[this.tableGuestRooms.GuestRooms_IdColumn]));
            }
            set {
                this[this.tableGuestRooms.GuestRooms_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int FacilityInfo_Id {
            get {
                try {
                    return ((int)(this[this.tableGuestRooms.FacilityInfo_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“GuestRooms”中列“FacilityInfo_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableGuestRooms.FacilityInfo_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FacilityInfoRow FacilityInfoRow {
            get {
                return ((FacilityInfoRow)(this.GetParentRow(this.Table.ParentRelations["FacilityInfo_GuestRooms"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["FacilityInfo_GuestRooms"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFacilityInfo_IdNull() {
            return this.IsNull(this.tableGuestRooms.FacilityInfo_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFacilityInfo_IdNull() {
            this[this.tableGuestRooms.FacilityInfo_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomRow[] GetGuestRoomRows() {
            if ((this.Table.ChildRelations["GuestRooms_GuestRoom"] == null)) {
                return new GuestRoomRow[0];
            }
            else {
                return ((GuestRoomRow[])(base.GetChildRows(this.Table.ChildRelations["GuestRooms_GuestRoom"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class GuestRoomRow : global::System.Data.DataRow {
        
        private GuestRoomDataTable tableGuestRoom;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal GuestRoomRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableGuestRoom = ((GuestRoomDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string RoomTypeName {
            get {
                try {
                    return ((string)(this[this.tableGuestRoom.RoomTypeNameColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“GuestRoom”中列“RoomTypeName”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableGuestRoom.RoomTypeNameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int GuestRoom_Id {
            get {
                return ((int)(this[this.tableGuestRoom.GuestRoom_IdColumn]));
            }
            set {
                this[this.tableGuestRoom.GuestRoom_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int GuestRooms_Id {
            get {
                try {
                    return ((int)(this[this.tableGuestRoom.GuestRooms_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“GuestRoom”中列“GuestRooms_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableGuestRoom.GuestRooms_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomsRow GuestRoomsRow {
            get {
                return ((GuestRoomsRow)(this.GetParentRow(this.Table.ParentRelations["GuestRooms_GuestRoom"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["GuestRooms_GuestRoom"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRoomTypeNameNull() {
            return this.IsNull(this.tableGuestRoom.RoomTypeNameColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRoomTypeNameNull() {
            this[this.tableGuestRoom.RoomTypeNameColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsGuestRooms_IdNull() {
            return this.IsNull(this.tableGuestRoom.GuestRooms_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetGuestRooms_IdNull() {
            this[this.tableGuestRoom.GuestRooms_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TypeRoomRow[] GetTypeRoomRows() {
            if ((this.Table.ChildRelations["GuestRoom_TypeRoom"] == null)) {
                return new TypeRoomRow[0];
            }
            else {
                return ((TypeRoomRow[])(base.GetChildRows(this.Table.ChildRelations["GuestRoom_TypeRoom"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenitiesRow[] GetAmenitiesRows() {
            if ((this.Table.ChildRelations["GuestRoom_Amenities"] == null)) {
                return new AmenitiesRow[0];
            }
            else {
                return ((AmenitiesRow[])(base.GetChildRows(this.Table.ChildRelations["GuestRoom_Amenities"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow[] GetTPA_ExtensionsRows() {
            if ((this.Table.ChildRelations["GuestRoom_TPA_Extensions"] == null)) {
                return new TPA_ExtensionsRow[0];
            }
            else {
                return ((TPA_ExtensionsRow[])(base.GetChildRows(this.Table.ChildRelations["GuestRoom_TPA_Extensions"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeaturesRow[] GetFeaturesRows() {
            if ((this.Table.ChildRelations["GuestRoom_Features"] == null)) {
                return new FeaturesRow[0];
            }
            else {
                return ((FeaturesRow[])(base.GetChildRows(this.Table.ChildRelations["GuestRoom_Features"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class TypeRoomRow : global::System.Data.DataRow {
        
        private TypeRoomDataTable tableTypeRoom;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TypeRoomRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableTypeRoom = ((TypeRoomDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string StandardOccupancy {
            get {
                try {
                    return ((string)(this[this.tableTypeRoom.StandardOccupancyColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“StandardOccupancy”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.StandardOccupancyColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Size {
            get {
                try {
                    return ((string)(this[this.tableTypeRoom.SizeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“Size”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.SizeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Name {
            get {
                try {
                    return ((string)(this[this.tableTypeRoom.NameColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“Name”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.NameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string RoomTypeCode {
            get {
                try {
                    return ((string)(this[this.tableTypeRoom.RoomTypeCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“RoomTypeCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.RoomTypeCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Floor {
            get {
                try {
                    return ((string)(this[this.tableTypeRoom.FloorColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“Floor”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.FloorColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string InvBlockCode {
            get {
                try {
                    return ((string)(this[this.tableTypeRoom.InvBlockCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“InvBlockCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.InvBlockCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string BedTypeCode {
            get {
                try {
                    return ((string)(this[this.tableTypeRoom.BedTypeCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“BedTypeCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.BedTypeCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string NonSmoking {
            get {
                try {
                    return ((string)(this[this.tableTypeRoom.NonSmokingColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“NonSmoking”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.NonSmokingColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string HasWindow {
            get {
                try {
                    return ((string)(this[this.tableTypeRoom.HasWindowColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“HasWindow”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.HasWindowColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Quantity {
            get {
                try {
                    return ((string)(this[this.tableTypeRoom.QuantityColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“Quantity”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.QuantityColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string RoomSize {
            get {
                try {
                    return ((string)(this[this.tableTypeRoom.RoomSizeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“RoomSize”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.RoomSizeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int GuestRoom_Id {
            get {
                try {
                    return ((int)(this[this.tableTypeRoom.GuestRoom_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TypeRoom”中列“GuestRoom_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTypeRoom.GuestRoom_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomRow GuestRoomRow {
            get {
                return ((GuestRoomRow)(this.GetParentRow(this.Table.ParentRelations["GuestRoom_TypeRoom"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["GuestRoom_TypeRoom"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsStandardOccupancyNull() {
            return this.IsNull(this.tableTypeRoom.StandardOccupancyColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetStandardOccupancyNull() {
            this[this.tableTypeRoom.StandardOccupancyColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsSizeNull() {
            return this.IsNull(this.tableTypeRoom.SizeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetSizeNull() {
            this[this.tableTypeRoom.SizeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNameNull() {
            return this.IsNull(this.tableTypeRoom.NameColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNameNull() {
            this[this.tableTypeRoom.NameColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRoomTypeCodeNull() {
            return this.IsNull(this.tableTypeRoom.RoomTypeCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRoomTypeCodeNull() {
            this[this.tableTypeRoom.RoomTypeCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFloorNull() {
            return this.IsNull(this.tableTypeRoom.FloorColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFloorNull() {
            this[this.tableTypeRoom.FloorColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsInvBlockCodeNull() {
            return this.IsNull(this.tableTypeRoom.InvBlockCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetInvBlockCodeNull() {
            this[this.tableTypeRoom.InvBlockCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsBedTypeCodeNull() {
            return this.IsNull(this.tableTypeRoom.BedTypeCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetBedTypeCodeNull() {
            this[this.tableTypeRoom.BedTypeCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNonSmokingNull() {
            return this.IsNull(this.tableTypeRoom.NonSmokingColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNonSmokingNull() {
            this[this.tableTypeRoom.NonSmokingColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHasWindowNull() {
            return this.IsNull(this.tableTypeRoom.HasWindowColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHasWindowNull() {
            this[this.tableTypeRoom.HasWindowColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsQuantityNull() {
            return this.IsNull(this.tableTypeRoom.QuantityColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetQuantityNull() {
            this[this.tableTypeRoom.QuantityColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRoomSizeNull() {
            return this.IsNull(this.tableTypeRoom.RoomSizeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRoomSizeNull() {
            this[this.tableTypeRoom.RoomSizeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsGuestRoom_IdNull() {
            return this.IsNull(this.tableTypeRoom.GuestRoom_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetGuestRoom_IdNull() {
            this[this.tableTypeRoom.GuestRoom_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class AmenitiesRow : global::System.Data.DataRow {
        
        private AmenitiesDataTable tableAmenities;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AmenitiesRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableAmenities = ((AmenitiesDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Amenities_Id {
            get {
                return ((int)(this[this.tableAmenities.Amenities_IdColumn]));
            }
            set {
                this[this.tableAmenities.Amenities_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int GuestRoom_Id {
            get {
                try {
                    return ((int)(this[this.tableAmenities.GuestRoom_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Amenities”中列“GuestRoom_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAmenities.GuestRoom_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomRow GuestRoomRow {
            get {
                return ((GuestRoomRow)(this.GetParentRow(this.Table.ParentRelations["GuestRoom_Amenities"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["GuestRoom_Amenities"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsGuestRoom_IdNull() {
            return this.IsNull(this.tableAmenities.GuestRoom_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetGuestRoom_IdNull() {
            this[this.tableAmenities.GuestRoom_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenityRow[] GetAmenityRows() {
            if ((this.Table.ChildRelations["Amenities_Amenity"] == null)) {
                return new AmenityRow[0];
            }
            else {
                return ((AmenityRow[])(base.GetChildRows(this.Table.ChildRelations["Amenities_Amenity"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class AmenityRow : global::System.Data.DataRow {
        
        private AmenityDataTable tableAmenity;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AmenityRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableAmenity = ((AmenityDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DescriptiveText {
            get {
                try {
                    return ((string)(this[this.tableAmenity.DescriptiveTextColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Amenity”中列“DescriptiveText”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAmenity.DescriptiveTextColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string RoomAmenityCode {
            get {
                try {
                    return ((string)(this[this.tableAmenity.RoomAmenityCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Amenity”中列“RoomAmenityCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAmenity.RoomAmenityCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Amenities_Id {
            get {
                try {
                    return ((int)(this[this.tableAmenity.Amenities_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Amenity”中列“Amenities_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAmenity.Amenities_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenitiesRow AmenitiesRow {
            get {
                return ((AmenitiesRow)(this.GetParentRow(this.Table.ParentRelations["Amenities_Amenity"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["Amenities_Amenity"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDescriptiveTextNull() {
            return this.IsNull(this.tableAmenity.DescriptiveTextColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDescriptiveTextNull() {
            this[this.tableAmenity.DescriptiveTextColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRoomAmenityCodeNull() {
            return this.IsNull(this.tableAmenity.RoomAmenityCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRoomAmenityCodeNull() {
            this[this.tableAmenity.RoomAmenityCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAmenities_IdNull() {
            return this.IsNull(this.tableAmenity.Amenities_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAmenities_IdNull() {
            this[this.tableAmenity.Amenities_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class FeaturesRow : global::System.Data.DataRow {
        
        private FeaturesDataTable tableFeatures;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal FeaturesRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableFeatures = ((FeaturesDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Features_Id {
            get {
                return ((int)(this[this.tableFeatures.Features_IdColumn]));
            }
            set {
                this[this.tableFeatures.Features_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int GuestRoom_Id {
            get {
                try {
                    return ((int)(this[this.tableFeatures.GuestRoom_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Features”中列“GuestRoom_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableFeatures.GuestRoom_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomRow GuestRoomRow {
            get {
                return ((GuestRoomRow)(this.GetParentRow(this.Table.ParentRelations["GuestRoom_Features"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["GuestRoom_Features"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsGuestRoom_IdNull() {
            return this.IsNull(this.tableFeatures.GuestRoom_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetGuestRoom_IdNull() {
            this[this.tableFeatures.GuestRoom_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeatureRow[] GetFeatureRows() {
            if ((this.Table.ChildRelations["Features_Feature"] == null)) {
                return new FeatureRow[0];
            }
            else {
                return ((FeatureRow[])(base.GetChildRows(this.Table.ChildRelations["Features_Feature"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class FeatureRow : global::System.Data.DataRow {
        
        private FeatureDataTable tableFeature;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal FeatureRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableFeature = ((FeatureDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DescriptiveText {
            get {
                try {
                    return ((string)(this[this.tableFeature.DescriptiveTextColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Feature”中列“DescriptiveText”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableFeature.DescriptiveTextColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Features_Id {
            get {
                try {
                    return ((int)(this[this.tableFeature.Features_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Feature”中列“Features_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableFeature.Features_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeaturesRow FeaturesRow {
            get {
                return ((FeaturesRow)(this.GetParentRow(this.Table.ParentRelations["Features_Feature"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["Features_Feature"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDescriptiveTextNull() {
            return this.IsNull(this.tableFeature.DescriptiveTextColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDescriptiveTextNull() {
            this[this.tableFeature.DescriptiveTextColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsFeatures_IdNull() {
            return this.IsNull(this.tableFeature.Features_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetFeatures_IdNull() {
            this[this.tableFeature.Features_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class PoliciesRow : global::System.Data.DataRow {
        
        private PoliciesDataTable tablePolicies;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PoliciesRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tablePolicies = ((PoliciesDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Policies_Id {
            get {
                return ((int)(this[this.tablePolicies.Policies_IdColumn]));
            }
            set {
                this[this.tablePolicies.Policies_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelDescriptiveContent_Id {
            get {
                try {
                    return ((int)(this[this.tablePolicies.HotelDescriptiveContent_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Policies”中列“HotelDescriptiveContent_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePolicies.HotelDescriptiveContent_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow HotelDescriptiveContentRow {
            get {
                return ((HotelDescriptiveContentRow)(this.GetParentRow(this.Table.ParentRelations["HotelDescriptiveContent_Policies"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelDescriptiveContent_Policies"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelDescriptiveContent_IdNull() {
            return this.IsNull(this.tablePolicies.HotelDescriptiveContent_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelDescriptiveContent_IdNull() {
            this[this.tablePolicies.HotelDescriptiveContent_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyRow[] GetPolicyRows() {
            if ((this.Table.ChildRelations["Policies_Policy"] == null)) {
                return new PolicyRow[0];
            }
            else {
                return ((PolicyRow[])(base.GetChildRows(this.Table.ChildRelations["Policies_Policy"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class PolicyRow : global::System.Data.DataRow {
        
        private PolicyDataTable tablePolicy;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PolicyRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tablePolicy = ((PolicyDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Policy_Id {
            get {
                return ((int)(this[this.tablePolicy.Policy_IdColumn]));
            }
            set {
                this[this.tablePolicy.Policy_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Policies_Id {
            get {
                try {
                    return ((int)(this[this.tablePolicy.Policies_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Policy”中列“Policies_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePolicy.Policies_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PoliciesRow PoliciesRow {
            get {
                return ((PoliciesRow)(this.GetParentRow(this.Table.ParentRelations["Policies_Policy"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["Policies_Policy"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPolicies_IdNull() {
            return this.IsNull(this.tablePolicy.Policies_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPolicies_IdNull() {
            this[this.tablePolicy.Policies_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodesRow[] GetPolicyInfoCodesRows() {
            if ((this.Table.ChildRelations["Policy_PolicyInfoCodes"] == null)) {
                return new PolicyInfoCodesRow[0];
            }
            else {
                return ((PolicyInfoCodesRow[])(base.GetChildRows(this.Table.ChildRelations["Policy_PolicyInfoCodes"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoRow[] GetPolicyInfoRows() {
            if ((this.Table.ChildRelations["Policy_PolicyInfo"] == null)) {
                return new PolicyInfoRow[0];
            }
            else {
                return ((PolicyInfoRow[])(base.GetChildRows(this.Table.ChildRelations["Policy_PolicyInfo"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class PolicyInfoCodesRow : global::System.Data.DataRow {
        
        private PolicyInfoCodesDataTable tablePolicyInfoCodes;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PolicyInfoCodesRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tablePolicyInfoCodes = ((PolicyInfoCodesDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int PolicyInfoCodes_Id {
            get {
                return ((int)(this[this.tablePolicyInfoCodes.PolicyInfoCodes_IdColumn]));
            }
            set {
                this[this.tablePolicyInfoCodes.PolicyInfoCodes_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Policy_Id {
            get {
                try {
                    return ((int)(this[this.tablePolicyInfoCodes.Policy_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“PolicyInfoCodes”中列“Policy_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePolicyInfoCodes.Policy_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyRow PolicyRow {
            get {
                return ((PolicyRow)(this.GetParentRow(this.Table.ParentRelations["Policy_PolicyInfoCodes"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["Policy_PolicyInfoCodes"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPolicy_IdNull() {
            return this.IsNull(this.tablePolicyInfoCodes.Policy_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPolicy_IdNull() {
            this[this.tablePolicyInfoCodes.Policy_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodeRow[] GetPolicyInfoCodeRows() {
            if ((this.Table.ChildRelations["PolicyInfoCodes_PolicyInfoCode"] == null)) {
                return new PolicyInfoCodeRow[0];
            }
            else {
                return ((PolicyInfoCodeRow[])(base.GetChildRows(this.Table.ChildRelations["PolicyInfoCodes_PolicyInfoCode"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class PolicyInfoCodeRow : global::System.Data.DataRow {
        
        private PolicyInfoCodeDataTable tablePolicyInfoCode;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PolicyInfoCodeRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tablePolicyInfoCode = ((PolicyInfoCodeDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Code {
            get {
                try {
                    return ((string)(this[this.tablePolicyInfoCode.CodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“PolicyInfoCode”中列“Code”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePolicyInfoCode.CodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int PolicyInfoCode_Id {
            get {
                return ((int)(this[this.tablePolicyInfoCode.PolicyInfoCode_IdColumn]));
            }
            set {
                this[this.tablePolicyInfoCode.PolicyInfoCode_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int PolicyInfoCodes_Id {
            get {
                try {
                    return ((int)(this[this.tablePolicyInfoCode.PolicyInfoCodes_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“PolicyInfoCode”中列“PolicyInfoCodes_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePolicyInfoCode.PolicyInfoCodes_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodesRow PolicyInfoCodesRow {
            get {
                return ((PolicyInfoCodesRow)(this.GetParentRow(this.Table.ParentRelations["PolicyInfoCodes_PolicyInfoCode"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["PolicyInfoCodes_PolicyInfoCode"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCodeNull() {
            return this.IsNull(this.tablePolicyInfoCode.CodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCodeNull() {
            this[this.tablePolicyInfoCode.CodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPolicyInfoCodes_IdNull() {
            return this.IsNull(this.tablePolicyInfoCode.PolicyInfoCodes_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPolicyInfoCodes_IdNull() {
            this[this.tablePolicyInfoCode.PolicyInfoCodes_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DescriptionRow[] GetDescriptionRows() {
            if ((this.Table.ChildRelations["PolicyInfoCode_Description"] == null)) {
                return new DescriptionRow[0];
            }
            else {
                return ((DescriptionRow[])(base.GetChildRows(this.Table.ChildRelations["PolicyInfoCode_Description"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class PolicyInfoRow : global::System.Data.DataRow {
        
        private PolicyInfoDataTable tablePolicyInfo;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal PolicyInfoRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tablePolicyInfo = ((PolicyInfoDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string CheckInTime {
            get {
                try {
                    return ((string)(this[this.tablePolicyInfo.CheckInTimeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“PolicyInfo”中列“CheckInTime”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePolicyInfo.CheckInTimeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string CheckOutTime {
            get {
                try {
                    return ((string)(this[this.tablePolicyInfo.CheckOutTimeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“PolicyInfo”中列“CheckOutTime”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePolicyInfo.CheckOutTimeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Policy_Id {
            get {
                try {
                    return ((int)(this[this.tablePolicyInfo.Policy_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“PolicyInfo”中列“Policy_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tablePolicyInfo.Policy_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyRow PolicyRow {
            get {
                return ((PolicyRow)(this.GetParentRow(this.Table.ParentRelations["Policy_PolicyInfo"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["Policy_PolicyInfo"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCheckInTimeNull() {
            return this.IsNull(this.tablePolicyInfo.CheckInTimeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCheckInTimeNull() {
            this[this.tablePolicyInfo.CheckInTimeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCheckOutTimeNull() {
            return this.IsNull(this.tablePolicyInfo.CheckOutTimeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCheckOutTimeNull() {
            this[this.tablePolicyInfo.CheckOutTimeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsPolicy_IdNull() {
            return this.IsNull(this.tablePolicyInfo.Policy_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetPolicy_IdNull() {
            this[this.tablePolicyInfo.Policy_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class AreaInfoRow : global::System.Data.DataRow {
        
        private AreaInfoDataTable tableAreaInfo;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AreaInfoRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableAreaInfo = ((AreaInfoDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int AreaInfo_Id {
            get {
                return ((int)(this[this.tableAreaInfo.AreaInfo_IdColumn]));
            }
            set {
                this[this.tableAreaInfo.AreaInfo_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelDescriptiveContent_Id {
            get {
                try {
                    return ((int)(this[this.tableAreaInfo.HotelDescriptiveContent_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“AreaInfo”中列“HotelDescriptiveContent_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAreaInfo.HotelDescriptiveContent_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow HotelDescriptiveContentRow {
            get {
                return ((HotelDescriptiveContentRow)(this.GetParentRow(this.Table.ParentRelations["HotelDescriptiveContent_AreaInfo"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelDescriptiveContent_AreaInfo"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelDescriptiveContent_IdNull() {
            return this.IsNull(this.tableAreaInfo.HotelDescriptiveContent_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelDescriptiveContent_IdNull() {
            this[this.tableAreaInfo.HotelDescriptiveContent_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointsRow[] GetRefPointsRows() {
            if ((this.Table.ChildRelations["AreaInfo_RefPoints"] == null)) {
                return new RefPointsRow[0];
            }
            else {
                return ((RefPointsRow[])(base.GetChildRows(this.Table.ChildRelations["AreaInfo_RefPoints"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class RefPointsRow : global::System.Data.DataRow {
        
        private RefPointsDataTable tableRefPoints;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RefPointsRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableRefPoints = ((RefPointsDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int RefPoints_Id {
            get {
                return ((int)(this[this.tableRefPoints.RefPoints_IdColumn]));
            }
            set {
                this[this.tableRefPoints.RefPoints_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int AreaInfo_Id {
            get {
                try {
                    return ((int)(this[this.tableRefPoints.AreaInfo_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RefPoints”中列“AreaInfo_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRefPoints.AreaInfo_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AreaInfoRow AreaInfoRow {
            get {
                return ((AreaInfoRow)(this.GetParentRow(this.Table.ParentRelations["AreaInfo_RefPoints"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["AreaInfo_RefPoints"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAreaInfo_IdNull() {
            return this.IsNull(this.tableRefPoints.AreaInfo_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAreaInfo_IdNull() {
            this[this.tableRefPoints.AreaInfo_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointRow[] GetRefPointRows() {
            if ((this.Table.ChildRelations["RefPoints_RefPoint"] == null)) {
                return new RefPointRow[0];
            }
            else {
                return ((RefPointRow[])(base.GetChildRows(this.Table.ChildRelations["RefPoints_RefPoint"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class RefPointRow : global::System.Data.DataRow {
        
        private RefPointDataTable tableRefPoint;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal RefPointRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableRefPoint = ((RefPointDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string DescriptiveText {
            get {
                try {
                    return ((string)(this[this.tableRefPoint.DescriptiveTextColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RefPoint”中列“DescriptiveText”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRefPoint.DescriptiveTextColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Distance {
            get {
                try {
                    return ((string)(this[this.tableRefPoint.DistanceColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RefPoint”中列“Distance”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRefPoint.DistanceColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string UnitOfMeasureCode {
            get {
                try {
                    return ((string)(this[this.tableRefPoint.UnitOfMeasureCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RefPoint”中列“UnitOfMeasureCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRefPoint.UnitOfMeasureCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Name {
            get {
                try {
                    return ((string)(this[this.tableRefPoint.NameColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RefPoint”中列“Name”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRefPoint.NameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Latitude {
            get {
                try {
                    return ((string)(this[this.tableRefPoint.LatitudeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RefPoint”中列“Latitude”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRefPoint.LatitudeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Longitude {
            get {
                try {
                    return ((string)(this[this.tableRefPoint.LongitudeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RefPoint”中列“Longitude”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRefPoint.LongitudeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string RefPointCategoryCode {
            get {
                try {
                    return ((string)(this[this.tableRefPoint.RefPointCategoryCodeColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RefPoint”中列“RefPointCategoryCode”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRefPoint.RefPointCategoryCodeColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string RefPointName {
            get {
                try {
                    return ((string)(this[this.tableRefPoint.RefPointNameColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RefPoint”中列“RefPointName”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRefPoint.RefPointNameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int RefPoints_Id {
            get {
                try {
                    return ((int)(this[this.tableRefPoint.RefPoints_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“RefPoint”中列“RefPoints_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableRefPoint.RefPoints_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointsRow RefPointsRow {
            get {
                return ((RefPointsRow)(this.GetParentRow(this.Table.ParentRelations["RefPoints_RefPoint"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["RefPoints_RefPoint"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDescriptiveTextNull() {
            return this.IsNull(this.tableRefPoint.DescriptiveTextColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDescriptiveTextNull() {
            this[this.tableRefPoint.DescriptiveTextColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDistanceNull() {
            return this.IsNull(this.tableRefPoint.DistanceColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDistanceNull() {
            this[this.tableRefPoint.DistanceColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsUnitOfMeasureCodeNull() {
            return this.IsNull(this.tableRefPoint.UnitOfMeasureCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetUnitOfMeasureCodeNull() {
            this[this.tableRefPoint.UnitOfMeasureCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsNameNull() {
            return this.IsNull(this.tableRefPoint.NameColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetNameNull() {
            this[this.tableRefPoint.NameColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLatitudeNull() {
            return this.IsNull(this.tableRefPoint.LatitudeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLatitudeNull() {
            this[this.tableRefPoint.LatitudeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsLongitudeNull() {
            return this.IsNull(this.tableRefPoint.LongitudeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetLongitudeNull() {
            this[this.tableRefPoint.LongitudeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRefPointCategoryCodeNull() {
            return this.IsNull(this.tableRefPoint.RefPointCategoryCodeColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRefPointCategoryCodeNull() {
            this[this.tableRefPoint.RefPointCategoryCodeColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRefPointNameNull() {
            return this.IsNull(this.tableRefPoint.RefPointNameColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRefPointNameNull() {
            this[this.tableRefPoint.RefPointNameColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRefPoints_IdNull() {
            return this.IsNull(this.tableRefPoint.RefPoints_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRefPoints_IdNull() {
            this[this.tableRefPoint.RefPoints_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class AffiliationInfoRow : global::System.Data.DataRow {
        
        private AffiliationInfoDataTable tableAffiliationInfo;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AffiliationInfoRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableAffiliationInfo = ((AffiliationInfoDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int AffiliationInfo_Id {
            get {
                return ((int)(this[this.tableAffiliationInfo.AffiliationInfo_IdColumn]));
            }
            set {
                this[this.tableAffiliationInfo.AffiliationInfo_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelDescriptiveContent_Id {
            get {
                try {
                    return ((int)(this[this.tableAffiliationInfo.HotelDescriptiveContent_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“AffiliationInfo”中列“HotelDescriptiveContent_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAffiliationInfo.HotelDescriptiveContent_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow HotelDescriptiveContentRow {
            get {
                return ((HotelDescriptiveContentRow)(this.GetParentRow(this.Table.ParentRelations["HotelDescriptiveContent_AffiliationInfo"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelDescriptiveContent_AffiliationInfo"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelDescriptiveContent_IdNull() {
            return this.IsNull(this.tableAffiliationInfo.HotelDescriptiveContent_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelDescriptiveContent_IdNull() {
            this[this.tableAffiliationInfo.HotelDescriptiveContent_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardsRow[] GetAwardsRows() {
            if ((this.Table.ChildRelations["AffiliationInfo_Awards"] == null)) {
                return new AwardsRow[0];
            }
            else {
                return ((AwardsRow[])(base.GetChildRows(this.Table.ChildRelations["AffiliationInfo_Awards"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class AwardsRow : global::System.Data.DataRow {
        
        private AwardsDataTable tableAwards;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AwardsRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableAwards = ((AwardsDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Awards_Id {
            get {
                return ((int)(this[this.tableAwards.Awards_IdColumn]));
            }
            set {
                this[this.tableAwards.Awards_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int AffiliationInfo_Id {
            get {
                try {
                    return ((int)(this[this.tableAwards.AffiliationInfo_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Awards”中列“AffiliationInfo_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAwards.AffiliationInfo_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AffiliationInfoRow AffiliationInfoRow {
            get {
                return ((AffiliationInfoRow)(this.GetParentRow(this.Table.ParentRelations["AffiliationInfo_Awards"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["AffiliationInfo_Awards"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAffiliationInfo_IdNull() {
            return this.IsNull(this.tableAwards.AffiliationInfo_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAffiliationInfo_IdNull() {
            this[this.tableAwards.AffiliationInfo_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardRow[] GetAwardRows() {
            if ((this.Table.ChildRelations["Awards_Award"] == null)) {
                return new AwardRow[0];
            }
            else {
                return ((AwardRow[])(base.GetChildRows(this.Table.ChildRelations["Awards_Award"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class AwardRow : global::System.Data.DataRow {
        
        private AwardDataTable tableAward;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal AwardRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableAward = ((AwardDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Provider {
            get {
                try {
                    return ((string)(this[this.tableAward.ProviderColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Award”中列“Provider”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAward.ProviderColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Rating {
            get {
                try {
                    return ((string)(this[this.tableAward.RatingColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Award”中列“Rating”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAward.RatingColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int Awards_Id {
            get {
                try {
                    return ((int)(this[this.tableAward.Awards_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“Award”中列“Awards_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableAward.Awards_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardsRow AwardsRow {
            get {
                return ((AwardsRow)(this.GetParentRow(this.Table.ParentRelations["Awards_Award"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["Awards_Award"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsProviderNull() {
            return this.IsNull(this.tableAward.ProviderColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetProviderNull() {
            this[this.tableAward.ProviderColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsRatingNull() {
            return this.IsNull(this.tableAward.RatingColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetRatingNull() {
            this[this.tableAward.RatingColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsAwards_IdNull() {
            return this.IsNull(this.tableAward.Awards_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetAwards_IdNull() {
            this[this.tableAward.Awards_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class MultimediaDescriptionsRow : global::System.Data.DataRow {
        
        private MultimediaDescriptionsDataTable tableMultimediaDescriptions;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal MultimediaDescriptionsRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableMultimediaDescriptions = ((MultimediaDescriptionsDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int MultimediaDescriptions_Id {
            get {
                return ((int)(this[this.tableMultimediaDescriptions.MultimediaDescriptions_IdColumn]));
            }
            set {
                this[this.tableMultimediaDescriptions.MultimediaDescriptions_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int HotelDescriptiveContent_Id {
            get {
                try {
                    return ((int)(this[this.tableMultimediaDescriptions.HotelDescriptiveContent_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“MultimediaDescriptions”中列“HotelDescriptiveContent_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableMultimediaDescriptions.HotelDescriptiveContent_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow HotelDescriptiveContentRow {
            get {
                return ((HotelDescriptiveContentRow)(this.GetParentRow(this.Table.ParentRelations["HotelDescriptiveContent_MultimediaDescriptions"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["HotelDescriptiveContent_MultimediaDescriptions"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsHotelDescriptiveContent_IdNull() {
            return this.IsNull(this.tableMultimediaDescriptions.HotelDescriptiveContent_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetHotelDescriptiveContent_IdNull() {
            this[this.tableMultimediaDescriptions.HotelDescriptiveContent_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionRow[] GetMultimediaDescriptionRows() {
            if ((this.Table.ChildRelations["MultimediaDescriptions_MultimediaDescription"] == null)) {
                return new MultimediaDescriptionRow[0];
            }
            else {
                return ((MultimediaDescriptionRow[])(base.GetChildRows(this.Table.ChildRelations["MultimediaDescriptions_MultimediaDescription"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class MultimediaDescriptionRow : global::System.Data.DataRow {
        
        private MultimediaDescriptionDataTable tableMultimediaDescription;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal MultimediaDescriptionRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableMultimediaDescription = ((MultimediaDescriptionDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int MultimediaDescription_Id {
            get {
                return ((int)(this[this.tableMultimediaDescription.MultimediaDescription_IdColumn]));
            }
            set {
                this[this.tableMultimediaDescription.MultimediaDescription_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int MultimediaDescriptions_Id {
            get {
                try {
                    return ((int)(this[this.tableMultimediaDescription.MultimediaDescriptions_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“MultimediaDescription”中列“MultimediaDescriptions_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableMultimediaDescription.MultimediaDescriptions_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionsRow MultimediaDescriptionsRow {
            get {
                return ((MultimediaDescriptionsRow)(this.GetParentRow(this.Table.ParentRelations["MultimediaDescriptions_MultimediaDescription"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["MultimediaDescriptions_MultimediaDescription"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsMultimediaDescriptions_IdNull() {
            return this.IsNull(this.tableMultimediaDescription.MultimediaDescriptions_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetMultimediaDescriptions_IdNull() {
            this[this.tableMultimediaDescription.MultimediaDescriptions_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemsRow[] GetTextItemsRows() {
            if ((this.Table.ChildRelations["MultimediaDescription_TextItems"] == null)) {
                return new TextItemsRow[0];
            }
            else {
                return ((TextItemsRow[])(base.GetChildRows(this.Table.ChildRelations["MultimediaDescription_TextItems"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemsRow[] GetImageItemsRows() {
            if ((this.Table.ChildRelations["MultimediaDescription_ImageItems"] == null)) {
                return new ImageItemsRow[0];
            }
            else {
                return ((ImageItemsRow[])(base.GetChildRows(this.Table.ChildRelations["MultimediaDescription_ImageItems"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class TextItemsRow : global::System.Data.DataRow {
        
        private TextItemsDataTable tableTextItems;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TextItemsRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableTextItems = ((TextItemsDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int TextItems_Id {
            get {
                return ((int)(this[this.tableTextItems.TextItems_IdColumn]));
            }
            set {
                this[this.tableTextItems.TextItems_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int MultimediaDescription_Id {
            get {
                try {
                    return ((int)(this[this.tableTextItems.MultimediaDescription_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TextItems”中列“MultimediaDescription_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTextItems.MultimediaDescription_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionRow MultimediaDescriptionRow {
            get {
                return ((MultimediaDescriptionRow)(this.GetParentRow(this.Table.ParentRelations["MultimediaDescription_TextItems"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["MultimediaDescription_TextItems"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsMultimediaDescription_IdNull() {
            return this.IsNull(this.tableTextItems.MultimediaDescription_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetMultimediaDescription_IdNull() {
            this[this.tableTextItems.MultimediaDescription_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemRow[] GetTextItemRows() {
            if ((this.Table.ChildRelations["TextItems_TextItem"] == null)) {
                return new TextItemRow[0];
            }
            else {
                return ((TextItemRow[])(base.GetChildRows(this.Table.ChildRelations["TextItems_TextItem"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class TextItemRow : global::System.Data.DataRow {
        
        private TextItemDataTable tableTextItem;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal TextItemRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableTextItem = ((TextItemDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string URL {
            get {
                try {
                    return ((string)(this[this.tableTextItem.URLColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TextItem”中列“URL”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTextItem.URLColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Description {
            get {
                try {
                    return ((string)(this[this.tableTextItem.DescriptionColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TextItem”中列“Description”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTextItem.DescriptionColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Category {
            get {
                try {
                    return ((string)(this[this.tableTextItem.CategoryColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TextItem”中列“Category”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTextItem.CategoryColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int TextItems_Id {
            get {
                try {
                    return ((int)(this[this.tableTextItem.TextItems_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“TextItem”中列“TextItems_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableTextItem.TextItems_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemsRow TextItemsRow {
            get {
                return ((TextItemsRow)(this.GetParentRow(this.Table.ParentRelations["TextItems_TextItem"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["TextItems_TextItem"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsURLNull() {
            return this.IsNull(this.tableTextItem.URLColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetURLNull() {
            this[this.tableTextItem.URLColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsDescriptionNull() {
            return this.IsNull(this.tableTextItem.DescriptionColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetDescriptionNull() {
            this[this.tableTextItem.DescriptionColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCategoryNull() {
            return this.IsNull(this.tableTextItem.CategoryColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCategoryNull() {
            this[this.tableTextItem.CategoryColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsTextItems_IdNull() {
            return this.IsNull(this.tableTextItem.TextItems_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetTextItems_IdNull() {
            this[this.tableTextItem.TextItems_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class ImageItemsRow : global::System.Data.DataRow {
        
        private ImageItemsDataTable tableImageItems;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ImageItemsRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableImageItems = ((ImageItemsDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ImageItems_Id {
            get {
                return ((int)(this[this.tableImageItems.ImageItems_IdColumn]));
            }
            set {
                this[this.tableImageItems.ImageItems_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int MultimediaDescription_Id {
            get {
                try {
                    return ((int)(this[this.tableImageItems.MultimediaDescription_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“ImageItems”中列“MultimediaDescription_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableImageItems.MultimediaDescription_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionRow MultimediaDescriptionRow {
            get {
                return ((MultimediaDescriptionRow)(this.GetParentRow(this.Table.ParentRelations["MultimediaDescription_ImageItems"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["MultimediaDescription_ImageItems"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsMultimediaDescription_IdNull() {
            return this.IsNull(this.tableImageItems.MultimediaDescription_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetMultimediaDescription_IdNull() {
            this[this.tableImageItems.MultimediaDescription_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemRow[] GetImageItemRows() {
            if ((this.Table.ChildRelations["ImageItems_ImageItem"] == null)) {
                return new ImageItemRow[0];
            }
            else {
                return ((ImageItemRow[])(base.GetChildRows(this.Table.ChildRelations["ImageItems_ImageItem"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class ImageItemRow : global::System.Data.DataRow {
        
        private ImageItemDataTable tableImageItem;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ImageItemRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableImageItem = ((ImageItemDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string Category {
            get {
                try {
                    return ((string)(this[this.tableImageItem.CategoryColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“ImageItem”中列“Category”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableImageItem.CategoryColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ImageItem_Id {
            get {
                return ((int)(this[this.tableImageItem.ImageItem_IdColumn]));
            }
            set {
                this[this.tableImageItem.ImageItem_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ImageItems_Id {
            get {
                try {
                    return ((int)(this[this.tableImageItem.ImageItems_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“ImageItem”中列“ImageItems_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableImageItem.ImageItems_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemsRow ImageItemsRow {
            get {
                return ((ImageItemsRow)(this.GetParentRow(this.Table.ParentRelations["ImageItems_ImageItem"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["ImageItems_ImageItem"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsCategoryNull() {
            return this.IsNull(this.tableImageItem.CategoryColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetCategoryNull() {
            this[this.tableImageItem.CategoryColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsImageItems_IdNull() {
            return this.IsNull(this.tableImageItem.ImageItems_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetImageItems_IdNull() {
            this[this.tableImageItem.ImageItems_IdColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageFormatRow[] GetImageFormatRows() {
            if ((this.Table.ChildRelations["ImageItem_ImageFormat"] == null)) {
                return new ImageFormatRow[0];
            }
            else {
                return ((ImageFormatRow[])(base.GetChildRows(this.Table.ChildRelations["ImageItem_ImageFormat"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DescriptionRow[] GetDescriptionRows() {
            if ((this.Table.ChildRelations["ImageItem_Description"] == null)) {
                return new DescriptionRow[0];
            }
            else {
                return ((DescriptionRow[])(base.GetChildRows(this.Table.ChildRelations["ImageItem_Description"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow[] GetTPA_ExtensionsRows() {
            if ((this.Table.ChildRelations["ImageItem_TPA_Extensions"] == null)) {
                return new TPA_ExtensionsRow[0];
            }
            else {
                return ((TPA_ExtensionsRow[])(base.GetChildRows(this.Table.ChildRelations["ImageItem_TPA_Extensions"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    public partial class ImageFormatRow : global::System.Data.DataRow {
        
        private ImageFormatDataTable tableImageFormat;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal ImageFormatRow(global::System.Data.DataRowBuilder rb) : 
                base(rb) {
            this.tableImageFormat = ((ImageFormatDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public string URL {
            get {
                try {
                    return ((string)(this[this.tableImageFormat.URLColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“ImageFormat”中列“URL”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableImageFormat.URLColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public int ImageItem_Id {
            get {
                try {
                    return ((int)(this[this.tableImageFormat.ImageItem_IdColumn]));
                }
                catch (global::System.InvalidCastException e) {
                    throw new global::System.Data.StrongTypingException("表“ImageFormat”中列“ImageItem_Id”的值为 DBNull。", e);
                }
            }
            set {
                this[this.tableImageFormat.ImageItem_IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemRow ImageItemRow {
            get {
                return ((ImageItemRow)(this.GetParentRow(this.Table.ParentRelations["ImageItem_ImageFormat"])));
            }
            set {
                this.SetParentRow(value, this.Table.ParentRelations["ImageItem_ImageFormat"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsURLNull() {
            return this.IsNull(this.tableImageFormat.URLColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetURLNull() {
            this[this.tableImageFormat.URLColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool IsImageItem_IdNull() {
            return this.IsNull(this.tableImageFormat.ImageItem_IdColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public void SetImageItem_IdNull() {
            this[this.tableImageFormat.ImageItem_IdColumn] = global::System.Convert.DBNull;
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class TPA_ExtensionsRowChangeEvent : global::System.EventArgs {
        
        private TPA_ExtensionsRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRowChangeEvent(TPA_ExtensionsRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionsRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class RoadCrossRowChangeEvent : global::System.EventArgs {
        
        private RoadCrossRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RoadCrossRowChangeEvent(RoadCrossRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RoadCrossRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class TPA_ExtensionRowChangeEvent : global::System.EventArgs {
        
        private TPA_ExtensionRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionRowChangeEvent(TPA_ExtensionRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TPA_ExtensionRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class ThemeCategoryRowChangeEvent : global::System.EventArgs {
        
        private ThemeCategoryRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryRowChangeEvent(ThemeCategoryRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class ThemeCategoryTypeRowChangeEvent : global::System.EventArgs {
        
        private ThemeCategoryTypeRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryTypeRowChangeEvent(ThemeCategoryTypeRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThemeCategoryTypeRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class CityImportantMessageRowChangeEvent : global::System.EventArgs {
        
        private CityImportantMessageRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageRowChangeEvent(CityImportantMessageRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class CityImportantMessageTypeRowChangeEvent : global::System.EventArgs {
        
        private CityImportantMessageTypeRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageTypeRowChangeEvent(CityImportantMessageTypeRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CityImportantMessageTypeRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class DescriptionRowChangeEvent : global::System.EventArgs {
        
        private DescriptionRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DescriptionRowChangeEvent(DescriptionRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DescriptionRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class OTA_HotelDescriptiveInfoRSRowChangeEvent : global::System.EventArgs {
        
        private OTA_HotelDescriptiveInfoRSRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OTA_HotelDescriptiveInfoRSRowChangeEvent(OTA_HotelDescriptiveInfoRSRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OTA_HotelDescriptiveInfoRSRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class HotelDescriptiveContentsRowChangeEvent : global::System.EventArgs {
        
        private HotelDescriptiveContentsRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentsRowChangeEvent(HotelDescriptiveContentsRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentsRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class HotelDescriptiveContentRowChangeEvent : global::System.EventArgs {
        
        private HotelDescriptiveContentRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRowChangeEvent(HotelDescriptiveContentRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelDescriptiveContentRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class HotelInfoRowChangeEvent : global::System.EventArgs {
        
        private HotelInfoRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelInfoRowChangeEvent(HotelInfoRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HotelInfoRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class CategoryCodesRowChangeEvent : global::System.EventArgs {
        
        private CategoryCodesRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CategoryCodesRowChangeEvent(CategoryCodesRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CategoryCodesRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class SegmentCategoryRowChangeEvent : global::System.EventArgs {
        
        private SegmentCategoryRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SegmentCategoryRowChangeEvent(SegmentCategoryRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SegmentCategoryRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class PositionRowChangeEvent : global::System.EventArgs {
        
        private PositionRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PositionRowChangeEvent(PositionRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PositionRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class AddressRowChangeEvent : global::System.EventArgs {
        
        private AddressRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRowChangeEvent(AddressRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AddressRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class ZoneRowChangeEvent : global::System.EventArgs {
        
        private ZoneRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ZoneRowChangeEvent(ZoneRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ZoneRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class ServicesRowChangeEvent : global::System.EventArgs {
        
        private ServicesRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServicesRowChangeEvent(ServicesRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServicesRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class ServiceRowChangeEvent : global::System.EventArgs {
        
        private ServiceRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServiceRowChangeEvent(ServiceRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServiceRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class FacilityInfoRowChangeEvent : global::System.EventArgs {
        
        private FacilityInfoRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FacilityInfoRowChangeEvent(FacilityInfoRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FacilityInfoRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class GuestRoomsRowChangeEvent : global::System.EventArgs {
        
        private GuestRoomsRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomsRowChangeEvent(GuestRoomsRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomsRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class GuestRoomRowChangeEvent : global::System.EventArgs {
        
        private GuestRoomRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomRowChangeEvent(GuestRoomRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GuestRoomRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class TypeRoomRowChangeEvent : global::System.EventArgs {
        
        private TypeRoomRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TypeRoomRowChangeEvent(TypeRoomRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TypeRoomRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class AmenitiesRowChangeEvent : global::System.EventArgs {
        
        private AmenitiesRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenitiesRowChangeEvent(AmenitiesRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenitiesRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class AmenityRowChangeEvent : global::System.EventArgs {
        
        private AmenityRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenityRowChangeEvent(AmenityRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AmenityRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class FeaturesRowChangeEvent : global::System.EventArgs {
        
        private FeaturesRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeaturesRowChangeEvent(FeaturesRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeaturesRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class FeatureRowChangeEvent : global::System.EventArgs {
        
        private FeatureRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeatureRowChangeEvent(FeatureRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FeatureRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class PoliciesRowChangeEvent : global::System.EventArgs {
        
        private PoliciesRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PoliciesRowChangeEvent(PoliciesRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PoliciesRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class PolicyRowChangeEvent : global::System.EventArgs {
        
        private PolicyRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyRowChangeEvent(PolicyRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class PolicyInfoCodesRowChangeEvent : global::System.EventArgs {
        
        private PolicyInfoCodesRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodesRowChangeEvent(PolicyInfoCodesRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodesRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class PolicyInfoCodeRowChangeEvent : global::System.EventArgs {
        
        private PolicyInfoCodeRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodeRowChangeEvent(PolicyInfoCodeRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoCodeRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class PolicyInfoRowChangeEvent : global::System.EventArgs {
        
        private PolicyInfoRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoRowChangeEvent(PolicyInfoRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PolicyInfoRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class AreaInfoRowChangeEvent : global::System.EventArgs {
        
        private AreaInfoRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AreaInfoRowChangeEvent(AreaInfoRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AreaInfoRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class RefPointsRowChangeEvent : global::System.EventArgs {
        
        private RefPointsRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointsRowChangeEvent(RefPointsRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointsRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class RefPointRowChangeEvent : global::System.EventArgs {
        
        private RefPointRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointRowChangeEvent(RefPointRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RefPointRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class AffiliationInfoRowChangeEvent : global::System.EventArgs {
        
        private AffiliationInfoRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AffiliationInfoRowChangeEvent(AffiliationInfoRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AffiliationInfoRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class AwardsRowChangeEvent : global::System.EventArgs {
        
        private AwardsRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardsRowChangeEvent(AwardsRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardsRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class AwardRowChangeEvent : global::System.EventArgs {
        
        private AwardRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardRowChangeEvent(AwardRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AwardRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class MultimediaDescriptionsRowChangeEvent : global::System.EventArgs {
        
        private MultimediaDescriptionsRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionsRowChangeEvent(MultimediaDescriptionsRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionsRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class MultimediaDescriptionRowChangeEvent : global::System.EventArgs {
        
        private MultimediaDescriptionRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionRowChangeEvent(MultimediaDescriptionRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MultimediaDescriptionRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class TextItemsRowChangeEvent : global::System.EventArgs {
        
        private TextItemsRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemsRowChangeEvent(TextItemsRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemsRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class TextItemRowChangeEvent : global::System.EventArgs {
        
        private TextItemRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemRowChangeEvent(TextItemRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TextItemRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class ImageItemsRowChangeEvent : global::System.EventArgs {
        
        private ImageItemsRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemsRowChangeEvent(ImageItemsRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemsRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class ImageItemRowChangeEvent : global::System.EventArgs {
        
        private ImageItemRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemRowChangeEvent(ImageItemRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageItemRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public class ImageFormatRowChangeEvent : global::System.EventArgs {
        
        private ImageFormatRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageFormatRowChangeEvent(ImageFormatRow row, global::System.Data.DataRowAction action) {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImageFormatRow Row {
            get {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.DataRowAction Action {
            get {
                return this.eventAction;
            }
        }
    }
}
